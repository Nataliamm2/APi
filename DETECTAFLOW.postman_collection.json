{
	"info": {
		"_postman_id": "39f05770-84a8-45a6-9db9-907bcb40c2c2",
		"name": "DETECTAFLOW",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Importação de requisições em lote",
			"item": [
				{
					"name": "LOCAL - Download template arquivo req em lote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"client_credentials\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"     if (err) { \r",
									"            console.log(err);\r",
									"     }\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('idToken', responseJson['access_token']);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{localHost}}/requisicoes/lotes/template",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"requisicoes",
								"lotes",
								"template"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL -Enviar csv de req em lote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"/* indice_requisicao equivale ao campoOrdenacao",
									"",
									"    Permissão: ENVIAR_REQUISICAO_LOTE",
									"*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"client_credentials\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"     if (err) { \r",
									"            console.log(err);\r",
									"     }\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('idToken', responseJson['access_token']);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "default"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "anexo",
									"type": "file",
									"src": "/home/f002238/Downloads/1transacao-pix.csv"
								},
								{
									"key": "",
									"value": "",
									"type": "default",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{localHost}}/requisicoes/lotes",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"requisicoes",
								"lotes"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Buscar req lote anexo por id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// {id_requisicao_lote_anexo}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"client_credentials\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"     if (err) { \r",
									"            console.log(err);\r",
									"     }\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('idToken', responseJson['access_token']);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{localHost}}/requisicoes/lotes/666779cd29bc7c48734f6d41",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"requisicoes",
								"lotes",
								"666779cd29bc7c48734f6d41"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Buscar resultado das validações de uma req lote por id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Na tabela \"Histórico de Arquivos de Requisições Enviadas\", clicar no link do arquivo que deu erro para obter o id_requisicao_lote_anexo.",
									"",
									"// indice_requisicao equivale ao campoOrdenacao"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"client_credentials\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"     if (err) { \r",
									"            console.log(err);\r",
									"     }\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('idToken', responseJson['access_token']);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{localHost}}/requisicoes/lotes/666779cd29bc7c48734f6d41/validacoes?paginaAtual=1&quantidade=1&indice_requisicao=1&tipoOrdenacao=asc",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"requisicoes",
								"lotes",
								"666779cd29bc7c48734f6d41",
								"validacoes"
							],
							"query": [
								{
									"key": "paginaAtual",
									"value": "1"
								},
								{
									"key": "quantidade",
									"value": "1"
								},
								{
									"key": "indice_requisicao",
									"value": "1"
								},
								{
									"key": "tipoOrdenacao",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Buscar erros do anexo da req em lote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Na tabela \"Histórico de Arquivos de Requisições Enviadas\", clicar no link do arquivo que deu erro para obter o id_requisicao_lote_anexo (primeiro id do endpoint).",
									"",
									"// Acessar no banco a tabela status_validacao_requisicao_lote, e filtrar pelo id_anexo informando este id da importação com erros.",
									"",
									"// Informar o _id encontrado no id_status_validacao (segundo id do endpoint).",
									"",
									"// campoOrdenacao = linha"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"client_credentials\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"     if (err) { \r",
									"            console.log(err);\r",
									"     }\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('idToken', responseJson['access_token']);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{localHost}}/requisicoes/lotes/666779cd29bc7c48734f6d41/erros/650c801c301406235eaee04e?paginaAtual=1&quantidade=10&campoOrdenacao=linha&tipoOrdenacao=asc",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"requisicoes",
								"lotes",
								"666779cd29bc7c48734f6d41",
								"erros",
								"650c801c301406235eaee04e"
							],
							"query": [
								{
									"key": "paginaAtual",
									"value": "1"
								},
								{
									"key": "quantidade",
									"value": "10"
								},
								{
									"key": "campoOrdenacao",
									"value": "linha"
								},
								{
									"key": "tipoOrdenacao",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Buscar histórico de upload de req em lote",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// indice_requisicao equivale ao campoOrdenacao"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"client_credentials\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"     if (err) { \r",
									"            console.log(err);\r",
									"     }\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('idToken', responseJson['access_token']);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{localHost}}/requisicoes/lotes?paginaAtual=1&quantidade=1&indice_requisicao=1&tipoOrdenacao=asc",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"requisicoes",
								"lotes"
							],
							"query": [
								{
									"key": "paginaAtual",
									"value": "1"
								},
								{
									"key": "quantidade",
									"value": "1"
								},
								{
									"key": "indice_requisicao",
									"value": "1"
								},
								{
									"key": "tipoOrdenacao",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL -  Baixar template requisição lote",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localHost}}/requisicoes/lotes/template",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"requisicoes",
								"lotes",
								"template"
							]
						}
					},
					"response": []
				},
				{
					"name": "HINT -  Baixar template requisição lote",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hintHost}}/requisicoes/lotes/template",
							"host": [
								"{{hintHost}}"
							],
							"path": [
								"requisicoes",
								"lotes",
								"template"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Dados Fraudes",
			"item": [
				{
					"name": "LOCAL -Buscar Evento por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"/*",
									"    Permissão: BUSCAR_EVENTO_ID",
									"*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"client_credentials\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"     if (err) { \r",
									"            console.log(err);\r",
									"     }\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('idToken', responseJson['access_token']);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localHost}}/eventos/654008d5b21ab227952a5721",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"eventos",
								"654008d5b21ab227952a5721"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Buscar Eventos",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// const postRequest = {\r",
									"//   url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"//   method: 'POST',\r",
									"//   timeout: 0,\r",
									"//   header: {\r",
									"//     \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"//     \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"//   },\r",
									"//   body: {\r",
									"//     mode: 'urlencoded',\r",
									"//     urlencoded: [\r",
									"//         {key: \"grant_type\", value: \"client_credentials\"}\r",
									"//     ]}\r",
									"// };\r",
									"// pm.sendRequest(postRequest, function (err, res) {\r",
									"//      if (err) { \r",
									"//             console.log(err);\r",
									"//      }\r",
									"//     var responseJson = res.json();\r",
									"//     console.log(responseJson);\r",
									"//     pm.environment.set('idToken', responseJson['access_token']);\r",
									"// })\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"/*",
									"    Permissão: BUSCAR_EVENTOS_RESOLUCAO",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJraWQiOiJzZEoxTFREbUJRbWg5K0FrYXFUSVwvaTJmNm9QMnlNOWc0WDM2V2VYUTFKOD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiIwMzNlMTc0Zi0xYmE5LTRiYzMtYmIzNS02MDYxMTE5OWQ4MDQiLCJjb2duaXRvOmdyb3VwcyI6WyJtYXN0ZXIiLCJzYS1lYXN0LTFfZDZ3SXJxb253XzA0MzkxMDA3Il0sImlzcyI6Imh0dHBzOlwvXC9jb2duaXRvLWlkcC5zYS1lYXN0LTEuYW1hem9uYXdzLmNvbVwvc2EtZWFzdC0xX2Q2d0lycW9udyIsInZlcnNpb24iOjIsImNsaWVudF9pZCI6IjZtY2d2ZTlsZDc3Z3NhMm9zNnYwcGY3bWl2Iiwib3JpZ2luX2p0aSI6ImU5MGQ3OWQwLThkNDEtNDgwNy05NGNlLTkyNDFiNzU1OGQ0YiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4gb3BlbmlkIHByb2ZpbGUgZW1haWwiLCJhdXRoX3RpbWUiOjE3MjQwOTMyMDQsImV4cCI6MTcyNDA5NTYyMCwiaWF0IjoxNzI0MDk1MzIyLCJqdGkiOiI0NGJlZmI4NC1mOTM1LTQ4NjgtODZmOC1mODgxODYyNWEyYWIiLCJ1c2VybmFtZSI6IjA0MzkxMDA3X2JydW5vYi56aWxpb0BudWNsZWEuY29tLmJyIn0.N7Qn9uuWXyM4-onpWawTQG6iP7L2cXEMXTcAfvgt05w21LuB5Y1eA7nu0yd6f8sbsSVyLMfoUCE3kVQCgTES88f_SXDwyVX2Uv1w1rg7VTs6r2de0apVw3D72b8Dx8znvzNfTftvRYa0tk4jtgVGbPZdUJDA5J7IXuMAtIwXUa1PrOKEDd-UTJUNa7e3XnBZV4bKpl6M35gmpk8E1Ad_JVkNALv0P14_6WRuPKi7yW_r9KnfBBUVz4nSmt68THg_9US5KOgbuReOqNbIAL_B80WK6GhcnO-b0LGQBAtqKhfdPDXAcgA_4EmyWebNROtnC-lI3t0JLZYOiGh55u13ZQ",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/eventos/buscar?paginaAtual=1&quantidade=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"eventos",
								"buscar"
							],
							"query": [
								{
									"key": "paginaAtual",
									"value": "1"
								},
								{
									"key": "quantidade",
									"value": "1"
								},
								{
									"key": "campoOrdenacao",
									"value": "motivo",
									"disabled": true
								},
								{
									"key": "tipoOrdenacao",
									"value": "asc",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Buscar Qtd Eventos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"/*",
									"    Permissão: BUSCAR_QUANTIDADE_EVENTO",
									"*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"client_credentials\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"     if (err) { \r",
									"            console.log(err);\r",
									"     }\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('idToken', responseJson['access_token']);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"cpfCnpj\": \"50748307000143\",\r\n  \"codigoInstituicao\": [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  \"dataHoraInicioEvento\": \"2023-08-10T03:00:00.000Z\",\r\n  \"dataHoraFimEvento\": \"2023-08-14T03:00:00.000Z\"\r\n}0",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localHost}}/eventos/buscar-quantidade?paginaAtual=1&quantidade=1&campoOrdenacao=motivo&tipoOrdenacao=asc",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"eventos",
								"buscar-quantidade"
							],
							"query": [
								{
									"key": "paginaAtual",
									"value": "1"
								},
								{
									"key": "quantidade",
									"value": "1"
								},
								{
									"key": "dataHoraInicioEvento",
									"value": "2004-04-01T03:00:00.000Z",
									"disabled": true
								},
								{
									"key": "dataHoraFimEvento",
									"value": "2004-04-01T03:00:00.000Z",
									"disabled": true
								},
								{
									"key": "campoOrdenacao",
									"value": "motivo",
									"description": "motivo, instituicao, quantidade"
								},
								{
									"key": "tipoOrdenacao",
									"value": "asc",
									"description": "asc ou desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Inativar Evento por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"/*",
									"    Permissão: INATIVAR_EVENTO",
									"*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"client_credentials\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"     if (err) { \r",
									"            console.log(err);\r",
									"     }\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('idToken', responseJson['access_token']);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{idToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localHost}}/eventos/{{id_evento}}",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"eventos",
								"{{id_evento}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Editar Evento por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"/*",
									"    Instituição destinatária:",
									"        1 - BCO DO BRASIL S.A.: 00000000",
									"        500 - Automação Teste: 2345699",
									"        341 - ITAÚ UNIBANCO S.A.: 60701190",
									"",
									"    Permissão: ALTERAR_EVENTO",
									"*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"client_credentials\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"     if (err) { \r",
									"            console.log(err);\r",
									"     }\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('idToken', responseJson['access_token']);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"instituicaoDestinatariaIspb\": \"60701190\",\r\n    \"canalAtendimento\": \"1\",\r\n    \"produto\": \"99\",\r\n    \"tipoEvento\": \"transacional\",\r\n    \"tipoEnvolvido\": \"vitima\",\r\n    \"envolvimentoCliente\": false,\r\n    \"motivo\": \"99\",\r\n    \"clienteReclamante\": {\r\n        \"nome\": \"Carol Teste POST Evento Golpe DOC XYZ\",\r\n        \"cpfCnpj\": \"40502779802\",\r\n        \"uf\": \"SP\",\r\n        \"municipio\": \"3548708\"\r\n    },\r\n    \"doc\": {\r\n        \"valorTransacao\": 100.63,\r\n        \"dataHoraTransacao\": \"2023-08-14T11:00:00.000Z\",\r\n        \"codigoTransacao\": \"123456789123456\",\r\n        \"dataCompensacao\": \"2023-08-14T11:00:00.000Z\",\r\n        \"descricaoCaso\": \"Transação Golpe DOC.\"\r\n    },\r\n    \"clienteDestinatario\": {\r\n        \"nome\": \"José Silva\",\r\n        \"cpfCnpj\": \"80472435868\",\r\n        \"tipoConta\": \"Conta Salário\",\r\n        \"agencia\": \"8811\",\r\n        \"numeroConta\": \"006686\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/eventos/6695277d6ebaf576534253b0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"eventos",
								"6695277d6ebaf576534253b0"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Abrir Evento Fraude TED",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"/*",
									"    Instituição destinatária:",
									"        1 - BCO DO BRASIL S.A.: 00000000",
									"        500 - Automação Teste: 2345699",
									"        341 - ITAÚ UNIBANCO S.A.: 60701190",
									"",
									"    Permissão: ADICIONAR_EVENTOS",
									"*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// const postRequest = {\r",
									"//   url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"//   method: 'POST',\r",
									"//   timeout: 0,\r",
									"//   header: {\r",
									"//     \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"//     \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"//   },\r",
									"//   body: {\r",
									"//     mode: 'urlencoded',\r",
									"//     urlencoded: [\r",
									"//         {key: \"grant_type\", value: \"client_credentials\"}\r",
									"//     ]}\r",
									"// };\r",
									"// pm.sendRequest(postRequest, function (err, res) {\r",
									"//      if (err) { \r",
									"//             console.log(err);\r",
									"//      }\r",
									"//     var responseJson = res.json();\r",
									"//     console.log(responseJson);\r",
									"//     pm.environment.set('idToken', responseJson['access_token']);\r",
									"// })\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instituicaoDestinatariaIspb\": \"60701190\",\n    \"canalAtendimento\": \"2\",\n    \"produto\": \"4\",\n    \"tipoEnvolvido\": \"vitima\",\n    \"envolvimentoCliente\": true,\n    \"tipoEvento\": \"transacional\",\n    \"motivo\": \"99\",\n    \"clienteReclamante\": {\n        \"nome\": \"Carol Teste POST Evento Fraude TED\",\n        \"cpfCnpj\": \"40502779802\",\n        \"uf\": \"SP\",\n        \"municipio\": \"3548708\"\n    },\n    \"ted\": {\n        \"valorTransacao\": 100.11,\n        \"dataHoraTransacao\": \"2023-08-17T20:00:00.000Z\",\n        \"numeroDocumento\": \"654897064509874901568223\",\n        \"descricaoCaso\": \"Transação Fraude TED.\"\n    },\n    \"clienteDestinatario\": {\n        \"nome\": \"José Silva\",\n        \"cpfCnpj\": \"80472435868\",\n        \"tipoConta\": \"Conta Corrente\",\n        \"agencia\": \"8811\",\n        \"numeroConta\": \"006686\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/eventos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"eventos"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Abrir Evento Golpe DOC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"/*",
									"    Instituição destinatária:",
									"        1 - BCO DO BRASIL S.A.: 00000000",
									"        500 - Automação Teste: 2345699",
									"        341 - ITAÚ UNIBANCO S.A.: 60701190",
									"",
									"    Permissão: ADICIONAR_EVENTOS",
									"*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"client_credentials\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"     if (err) { \r",
									"            console.log(err);\r",
									"     }\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('idToken', responseJson['access_token']);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instituicaoDestinatariaIspb\": \"60701190\",\n    \"canalAtendimento\": \"1\",\n    \"produto\": \"2\",\n    \"tipoEvento\": \"transacional\",\n    \"tipoEnvolvido\": \"vitima\",\n    \"envolvimentoCliente\": false,\n    \"motivo\": \"99\",\n    \"clienteReclamante\": {\n        \"nome\": \"Carol Teste POST Evento Golpe DOC\",\n        \"cpfCnpj\": \"40502779802\",\n        \"uf\": \"SP\",\n        \"municipio\": \"3548708\"\n    },\n    \"doc\": {\n        \"valorTransacao\": 200.22,\n        \"dataHoraTransacao\": \"2023-06-01T11:00:00.000Z\",\n        \"codigoTransacao\": \"123456789123456\",\n        \"dataCompensacao\": \"2023-06-01T11:00:00.000Z\",\n        \"descricaoCaso\": \"Transação Golpe DOC.\"\n    },\n    \"clienteDestinatario\": {\n        \"nome\": \"José Silva\",\n        \"cpfCnpj\": \"80472435868\",\n        \"tipoConta\": \"Conta Salário\",\n        \"agencia\": \"8811\",\n        \"numeroConta\": \"006686\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/eventos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"eventos"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Abrir Evento Fraude Boleto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"/*",
									"    Instituição destinatária:",
									"        1 - BCO DO BRASIL S.A.: 00000000",
									"        500 - Automação Teste: 2345699",
									"        341 - ITAÚ UNIBANCO S.A.: 60701190",
									"",
									"    Permissão: ADICIONAR_EVENTOS",
									"*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"client_credentials\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"     if (err) { \r",
									"            console.log(err);\r",
									"     }\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('idToken', responseJson['access_token']);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instituicaoDestinatariaIspb\": \"60701190\",\n    \"canalAtendimento\": \"2\",\n    \"produto\": \"3\",\n    \"tipoEvento\": \"transacional\",\n    \"tipoEnvolvido\": \"vitima\",\n    \"envolvimentoCliente\": false,\n    \"motivo\": \"99\",\n    \"clienteReclamante\": {\n        \"nome\": \"Carol Teste POST Evento Fraude Boleto\",\n        \"cpfCnpj\": \"40502779802\",\n        \"uf\": \"SP\",\n        \"municipio\": \"3548708\"\n    },\n    \"boleto\": {\n        \"valorTransacao\": 300.33,\n        \"dataHoraTransacao\": \"2023-06-01T11:00:00.000Z\",\n        \"codigoBarras\": \"123456789123456\",\n        \"descricaoCaso\": \"Transação Fraude Boleto.\"\n    },\n    \"clienteDestinatario\": {\n        \"nome\": \"José Silva\",\n        \"cpfCnpj\": \"80472435868\",\n        \"tipoConta\": \"Conta Corrente\",\n        \"agencia\": \"8811\",\n        \"numeroConta\": \"006686\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/eventos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"eventos"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Abrir Evento Golpe PIX",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"/*",
									"    Instituição destinatária:",
									"        1 - BCO DO BRASIL S.A.: 00000000",
									"        500 - Automação Teste: 2345699",
									"        341 - ITAÚ UNIBANCO S.A.: 60701190",
									"",
									"    Permissão: ADICIONAR_EVENTOS",
									"*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"client_credentials\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"     if (err) { \r",
									"            console.log(err);\r",
									"     }\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('idToken', responseJson['access_token']);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instituicaoDestinatariaIspb\": \"60701190\",\n    \"canalAtendimento\": \"3\",\n    \"produto\": \"2\",\n    \"tipoEvento\": \"transacional\",\n    \"tipoEnvolvido\": \"vitima\",\n    \"envolvimentoCliente\": false,\n    \"motivo\": \"99\",\n    \"clienteReclamante\": {\n        \"nome\": \"Carol Teste POST Evento Golpe PIX\",\n        \"cpfCnpj\": \"40502779802\",\n        \"uf\": \"SP\",\n        \"municipio\": \"3548708\"\n    },\n    \"pix\": {\n        \"valorTransacao\": 400.44,\n        \"dataHoraTransacao\": \"2023-06-01T11:00:00.000Z\",\n        \"chave\": \"caroline.ciola@nuclea.com.br\",\n        \"tipoChave\": \"E-mail\",\n        \"idTransacao\": \"1E35RK96548774a2001f6g3498c25411\",\n        \"idRelatoInfracao\": \"98567489-2014-3369-9870-426655440000\",\n        \"idSolicitacaoDevolucao\": \"12549863-9658-3658-7485-125980125015\",\n        \"descricaoCaso\": \"Transação Golpe PIX.\"\n    },\n    \"clienteDestinatario\": {\n        \"nome\": \"José Silva\",\n        \"cpfCnpj\": \"80472435868\",\n        \"tipoConta\": \"Conta Salário\",\n        \"agencia\": \"8811\",\n        \"numeroConta\": \"006686\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/eventos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"eventos"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Abrir Evento não transacional",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"/*",
									"    Instituição destinatária:",
									"        1 - BCO DO BRASIL S.A.: 00000000",
									"        500 - Automação Teste: 2345699",
									"        341 - ITAÚ UNIBANCO S.A.: 60701190",
									"",
									"    Permissão: ADICIONAR_EVENTOS",
									"*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"client_credentials\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"     if (err) { \r",
									"            console.log(err);\r",
									"     }\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('idToken', responseJson['access_token']);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{idToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"canalAtendimento\": \"3\",\n    \"produto\": \"2\",\n    \"tipoEvento\": \"nao_transacional\",\n    \"tipoEnvolvido\": \"vitima\",\n    \"envolvimentoCliente\": false,\n    \"motivo\": \"99\",\n    \"clienteReclamante\": {\n        \"nome\": \"Carol Teste POST Evento não transacional\",\n        \"cpfCnpj\": \"40502779802\"\n    },\n    \"outros\": {\n        \"nome\": \"José Silva\",\n        \"identificador\": \"4\",\n        \"documento\": \"+5511988887777\",\n        \"descricaoCaso\": \"Evento não transacional.\",\n        \"dataEvento\": \"2023-06-01T03:00:00.000Z\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localHost}}/eventos",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"eventos"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Buscar instituições cadastradas pelo BACEN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"/*",
									"    Permissão: BUSCAR_INSTITUICOES_BACEN",
									"*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"client_credentials\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"     if (err) { \r",
									"            console.log(err);\r",
									"     }\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('idToken', responseJson['access_token']);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{idToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localHost}}/instituicoes",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"instituicoes"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Exportar Eventos",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"client_credentials\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"     if (err) { \r",
									"            console.log(err);\r",
									"     }\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('idToken', responseJson['access_token']);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"/*",
									"    Permissão: EXPORTAR_EVENTOS",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/eventos/exportar",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"eventos",
								"exportar"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"/*",
							"Swagger: ",
							"https://github.com/NucleaSA/detectaflow-dados-fraude/blob/develop/detectaflow-dados-fraude-swagger.yml",
							"*/"
						]
					}
				}
			]
		},
		{
			"name": "Insights",
			"item": [
				{
					"name": "Conciliação de Valores",
					"item": [
						{
							"name": "LOCAL - Conciliação Valores",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"/*",
											"    Permissão: BUSCAR_EVENTO_ID",
											"*/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const postRequest = {\r",
											"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
											"  method: 'POST',\r",
											"  timeout: 0,\r",
											"  header: {\r",
											"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
											"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
											"  },\r",
											"  body: {\r",
											"    mode: 'urlencoded',\r",
											"    urlencoded: [\r",
											"        {key: \"grant_type\", value: \"client_credentials\"}\r",
											"    ]}\r",
											"};\r",
											"pm.sendRequest(postRequest, function (err, res) {\r",
											"     if (err) { \r",
											"            console.log(err);\r",
											"     }\r",
											"    var responseJson = res.json();\r",
											"    console.log(responseJson);\r",
											"    pm.environment.set('idToken', responseJson['access_token']);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{localHost}}/conciliacao-valores?paginaAtual=1&quantidade=5&dataInicio=2024-01-01&dataFim=2024-06-24&ispb=12345678&campoOrdenacao=ispbDestinataria&tipoOrdenacao=asc",
									"host": [
										"{{localHost}}"
									],
									"path": [
										"conciliacao-valores"
									],
									"query": [
										{
											"key": "paginaAtual",
											"value": "1",
											"description": "obrigatório"
										},
										{
											"key": "quantidade",
											"value": "5",
											"description": "obrigatório"
										},
										{
											"key": "dataInicio",
											"value": "2024-01-01"
										},
										{
											"key": "dataFim",
											"value": "2024-06-24"
										},
										{
											"key": "ispb",
											"value": "12345678"
										},
										{
											"key": "campoOrdenacao",
											"value": "ispbDestinataria"
										},
										{
											"key": "tipoOrdenacao",
											"value": "asc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "LOCAL - Conciliação Valores resultado",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"/*",
											"    Permissão: BUSCAR_EVENTO_ID",
											"*/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// const postRequest = {\r",
											"//   url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
											"//   method: 'POST',\r",
											"//   timeout: 0,\r",
											"//   header: {\r",
											"//     \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
											"//     \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
											"//   },\r",
											"//   body: {\r",
											"//     mode: 'urlencoded',\r",
											"//     urlencoded: [\r",
											"//         {key: \"grant_type\", value: \"client_credentials\"}\r",
											"//     ]}\r",
											"// };\r",
											"// pm.sendRequest(postRequest, function (err, res) {\r",
											"//      if (err) { \r",
											"//             console.log(err);\r",
											"//      }\r",
											"//     var responseJson = res.json();\r",
											"//     console.log(responseJson);\r",
											"//     pm.environment.set('idToken', responseJson['access_token']);\r",
											"// })\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{localHost}}/conciliacao-valores/resultado?paginaAtual=1&quantidade=5&dataInicio=2024-01-01&dataFim=2024-01-24&ispb=12345678,00000000&campoOrdenacao=ispbDestinataria&tipoOrdenacao=asc",
									"host": [
										"{{localHost}}"
									],
									"path": [
										"conciliacao-valores",
										"resultado"
									],
									"query": [
										{
											"key": "paginaAtual",
											"value": "1",
											"description": "obrigatório"
										},
										{
											"key": "quantidade",
											"value": "5",
											"description": "obrigatório"
										},
										{
											"key": "dataInicio",
											"value": "2024-01-01"
										},
										{
											"key": "dataFim",
											"value": "2024-01-24"
										},
										{
											"key": "ispb",
											"value": "12345678,00000000"
										},
										{
											"key": "campoOrdenacao",
											"value": "ispbDestinataria"
										},
										{
											"key": "tipoOrdenacao",
											"value": "asc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "LOCAL - Conciliação Valores total",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"/*",
											"    Permissão: ?",
											"*/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// const postRequest = {\r",
											"//   url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
											"//   method: 'POST',\r",
											"//   timeout: 0,\r",
											"//   header: {\r",
											"//     \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
											"//     \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
											"//   },\r",
											"//   body: {\r",
											"//     mode: 'urlencoded',\r",
											"//     urlencoded: [\r",
											"//         {key: \"grant_type\", value: \"client_credentials\"}\r",
											"//     ]}\r",
											"// };\r",
											"// pm.sendRequest(postRequest, function (err, res) {\r",
											"//      if (err) { \r",
											"//             console.log(err);\r",
											"//      }\r",
											"//     var responseJson = res.json();\r",
											"//     console.log(responseJson);\r",
											"//     pm.environment.set('idToken', responseJson['access_token']);\r",
											"// })\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{localHost}}/conciliacao-valores/total?dataInicio=2024-01-01&dataFim=2024-01-24&ispb=00000000",
									"host": [
										"{{localHost}}"
									],
									"path": [
										"conciliacao-valores",
										"total"
									],
									"query": [
										{
											"key": "dataInicio",
											"value": "2024-01-01"
										},
										{
											"key": "dataFim",
											"value": "2024-01-24"
										},
										{
											"key": "ispb",
											"value": "00000000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "LOCAL - Conciliação Valores total/mês",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"/*",
											"    Permissão: ?",
											"*/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// const postRequest = {\r",
											"//   url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
											"//   method: 'POST',\r",
											"//   timeout: 0,\r",
											"//   header: {\r",
											"//     \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
											"//     \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
											"//   },\r",
											"//   body: {\r",
											"//     mode: 'urlencoded',\r",
											"//     urlencoded: [\r",
											"//         {key: \"grant_type\", value: \"client_credentials\"}\r",
											"//     ]}\r",
											"// };\r",
											"// pm.sendRequest(postRequest, function (err, res) {\r",
											"//      if (err) { \r",
											"//             console.log(err);\r",
											"//      }\r",
											"//     var responseJson = res.json();\r",
											"//     console.log(responseJson);\r",
											"//     pm.environment.set('idToken', responseJson['access_token']);\r",
											"// })\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{localHost}}/conciliacao-valores/total/mes?ispb=04391007&dataInicio=2024-01-30&dataFim=2024-02-01",
									"host": [
										"{{localHost}}"
									],
									"path": [
										"conciliacao-valores",
										"total",
										"mes"
									],
									"query": [
										{
											"key": "ispb",
											"value": "04391007"
										},
										{
											"key": "dataInicio",
											"value": "2024-01-30"
										},
										{
											"key": "dataFim",
											"value": "2024-02-01"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "LOCAL - Volume Financeiro",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"/*",
									"    Permissão: BUSCAR_EVENTO_ID",
									"*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"client_credentials\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"     if (err) { \r",
									"            console.log(err);\r",
									"     }\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('idToken', responseJson['access_token']);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localHost}}/volume-financeiro?anoMes=202401&paginaAtual=1&quantidade=5&campoOrdenacao=ispbDestinataria&tipoOrdenacao=asc",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"volume-financeiro"
							],
							"query": [
								{
									"key": "anoMes",
									"value": "202401",
									"description": "obrigatório"
								},
								{
									"key": "paginaAtual",
									"value": "1",
									"description": "obrigatório"
								},
								{
									"key": "quantidade",
									"value": "5",
									"description": "obrigatório"
								},
								{
									"key": "campoOrdenacao",
									"value": "ispbDestinataria"
								},
								{
									"key": "tipoOrdenacao",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Buscar status requisicoes recebidas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"/*",
									"    Permissão: BUSCAR_EVENTO_ID",
									"*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// const postRequest = {\r",
									"//   url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"//   method: 'POST',\r",
									"//   timeout: 0,\r",
									"//   header: {\r",
									"//     \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"//     \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"//   },\r",
									"//   body: {\r",
									"//     mode: 'urlencoded',\r",
									"//     urlencoded: [\r",
									"//         {key: \"grant_type\", value: \"client_credentials\"}\r",
									"//     ]}\r",
									"// };\r",
									"// pm.sendRequest(postRequest, function (err, res) {\r",
									"//      if (err) { \r",
									"//             console.log(err);\r",
									"//      }\r",
									"//     var responseJson = res.json();\r",
									"//     console.log(responseJson);\r",
									"//     pm.environment.set('idToken', responseJson['access_token']);\r",
									"// })\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localHost}}/requisicoes/recebidas/status?status=6245f6133b988e4ac7c5ec9d&mesAno=12-2023",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"requisicoes",
								"recebidas",
								"status"
							],
							"query": [
								{
									"key": "status",
									"value": "6245f6133b988e4ac7c5ec9d"
								},
								{
									"key": "mesAno",
									"value": "12-2023"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Exportar requisições recebidas",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJraWQiOiJzZEoxTFREbUJRbWg5K0FrYXFUSVwvaTJmNm9QMnlNOWc0WDM2V2VYUTFKOD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJkZjg0NDBjOS1mN2YxLTQ3ODUtYTQ2Mi0zNmEzZDA1OTAyZWQiLCJjb2duaXRvOmdyb3VwcyI6WyJtYXN0ZXIiLCJvcmlnZW1fYWQiXSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnNhLWVhc3QtMS5hbWF6b25hd3MuY29tXC9zYS1lYXN0LTFfZDZ3SXJxb253IiwidmVyc2lvbiI6MiwiY2xpZW50X2lkIjoiNm1jZ3ZlOWxkNzdnc2Eyb3M2djBwZjdtaXYiLCJvcmlnaW5fanRpIjoiOGI0Zjc4NjktNDNjOS00ZjM2LWI1YjktNjc2OTExZDJmOGM2IiwidG9rZW5fdXNlIjoiYWNjZXNzIiwic2NvcGUiOiJhd3MuY29nbml0by5zaWduaW4udXNlci5hZG1pbiBvcGVuaWQgcHJvZmlsZSBlbWFpbCIsImF1dGhfdGltZSI6MTcyNDA4ODcwMCwiZXhwIjoxNzI0MDg5MDAwLCJpYXQiOjE3MjQwODg3MDAsImp0aSI6ImE4NGJmOWMyLWQwNzctNDllMS04MzU5LTJhZjNiMDM5NmY1MSIsInVzZXJuYW1lIjoiMDQzOTEwMDdfZGV0ZWN0YWZsb3dfbWFzdGVyQG51Y2xlYS5jb20uYnIifQ.IFCfeSCyGH4vNs9Fzg5Cf-EVH0AhCa_7c7Gv4ksH_Re0jkfurtKhIc3NOTdarJqUmSsqYIdWNyEkl92el9zbVQMVULA83w8lcUf8rD4wqv1tFTPJVCwTEcXiz7MCPtDrpd--tVxrSqJOJlSNYdZkBgG32k8NHyhomBEUQy55nnZbeeY-vUWp5zEsPKTar1RVSnE3Remxu21VdgflMbBADiwJURAo9wREhnxDRlfmS9WbRbo4Kft-YjDCDuuljAwp1qScDn98qn4Wc04oGucBWo4xr-OHZwdiDnjBoTRzw8zsFkjHQa1didOZ8LNECXLKV0OTrDuY-_gpPSVnTH43Ng",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{localHost}}/requisicoes/recebidas/exportar",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"requisicoes",
								"recebidas",
								"exportar"
							],
							"query": [
								{
									"key": "cpfCnpj",
									"value": "12704987000104",
									"disabled": true
								},
								{
									"key": "tipoContestacao",
									"value": "62421f444e56a22a7fda004f",
									"disabled": true
								},
								{
									"key": "categoria",
									"value": "Triangulada",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "HINT - Exportar requisições recebidas",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{hintInsights}}/requisicoes/recebidas/exportar",
							"host": [
								"{{hintInsights}}"
							],
							"path": [
								"requisicoes",
								"recebidas",
								"exportar"
							],
							"query": [
								{
									"key": "cpfCnpj",
									"value": "12704987000104",
									"disabled": true
								},
								{
									"key": "tipoContestacao",
									"value": "62421f444e56a22a7fda004f",
									"disabled": true
								},
								{
									"key": "categoria",
									"value": "Triangulada",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Exportar requisições abertas",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{localHost}}/requisicoes/abertas/exportar",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"requisicoes",
								"abertas",
								"exportar"
							],
							"query": [
								{
									"key": "cpfCnpj",
									"value": "12704987000104",
									"disabled": true
								},
								{
									"key": "tipoContestacao",
									"value": "62421f444e56a22a7fda004f",
									"disabled": true
								},
								{
									"key": "categoria",
									"value": "Triangulada",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar quantidade de tipos das transacoes",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localHost}}/transacoes",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"transacoes"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Pega participantes do sirv-db e joga no banco dados-fraude",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJraWQiOiJzZEoxTFREbUJRbWg5K0FrYXFUSVwvaTJmNm9QMnlNOWc0WDM2V2VYUTFKOD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiIzMmY5NzBhOC0yMzU5LTQ0NDQtODA1NS01ZTRkYjZhYWQyYjkiLCJjb2duaXRvOmdyb3VwcyI6WyJjaXBtYXN0ZXIiXSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnNhLWVhc3QtMS5hbWF6b25hd3MuY29tXC9zYS1lYXN0LTFfZDZ3SXJxb253IiwiY2xpZW50X2lkIjoiNWR0NWVrZGVmcjZmN3BuOTVhOG8ybXIycG8iLCJvcmlnaW5fanRpIjoiZTY5MzkzYTctZTI5ZS00NTYwLWE3OTUtOWEwODk3NWI5Njg2IiwiZXZlbnRfaWQiOiI3ZWQ2ZTE1Yi1lYzMxLTRjY2YtYTE3My00YWU1MDA2NTg5MTUiLCJ0b2tlbl91c2UiOiJhY2Nlc3MiLCJzY29wZSI6ImF3cy5jb2duaXRvLnNpZ25pbi51c2VyLmFkbWluIiwiYXV0aF90aW1lIjoxNzE4MzA0NjY0LCJleHAiOjE3MTgzOTEwNjMsImlhdCI6MTcxODMwNDY2NCwianRpIjoiOGU3ZjA0ODctZjU5Ny00MTY3LWIwMmMtZmRiODdiNjk4MDdkIiwidXNlcm5hbWUiOiIzMmY5NzBhOC0yMzU5LTQ0NDQtODA1NS01ZTRkYjZhYWQyYjkifQ.d6HkcwvwNZ2VlAUXtag6gGMa_rxG-9BwTyxtHDTyVCzd925nIIR5Kt8er8x3Eo8RYtofkGdoa_sVSkqkcfKixnfTNFevuN2IRDX6OHxPuZpAzB0XBJQWOQ_O0_TgQ2jixoW-xCGCDe98tAN5FuhMjNOGQbg9PDQG762ChOTXVtsvTSAmE8487l_6iJB57gCowxqUGj5SejfUmfI10udIRAaM-DFklrcVRYmYsE0Zy3F-XQ3AWK6xHu1lj9cKzweQw9qNO0og8bSNv8du1OTeeCAlMfgCTb9XiLW3eKrx_2RztVhuw-B4367SUKiIeQmjBUf2zhV6usnmuzysgtmxng",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{localHost}}/sustentacao/participantes/migrar",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"sustentacao",
								"participantes",
								"migrar"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Consulta níveis triangulação",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJraWQiOiJzZEoxTFREbUJRbWg5K0FrYXFUSVwvaTJmNm9QMnlNOWc0WDM2V2VYUTFKOD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJhYjUwZGYzNy02NjRmLTQ0Y2QtOTFlNy1jNDk5YTU4ZWUwNDIiLCJjb2duaXRvOmdyb3VwcyI6WyJtYXN0ZXIiXSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnNhLWVhc3QtMS5hbWF6b25hd3MuY29tXC9zYS1lYXN0LTFfZDZ3SXJxb253IiwiY2xpZW50X2lkIjoiNWR0NWVrZGVmcjZmN3BuOTVhOG8ybXIycG8iLCJvcmlnaW5fanRpIjoiNDE4MWZhNzgtOGY5OC00ZTAxLWEzZTgtMWM2OTMzMjQ4NzcwIiwiZXZlbnRfaWQiOiIzNDgzYmJiZi0wMmRhLTQwNDAtYTE1NC1jM2JkMDMzYWZhODYiLCJ0b2tlbl91c2UiOiJhY2Nlc3MiLCJzY29wZSI6ImF3cy5jb2duaXRvLnNpZ25pbi51c2VyLmFkbWluIiwiYXV0aF90aW1lIjoxNzI2NjgzNDkxLCJleHAiOjE3MjY3Njk4ODksImlhdCI6MTcyNjY4MzQ5MSwianRpIjoiMWMzY2E0NDgtNDk4MC00YTgyLWIxMDUtZTI3OTU1ODNmNzc5IiwidXNlcm5hbWUiOiJhYjUwZGYzNy02NjRmLTQ0Y2QtOTFlNy1jNDk5YTU4ZWUwNDIifQ.SPjO-T9IcdzDAzqaNdUQJLNoS3cTc95KaFpEsNgboTIc4pZo8NFRCt4Fez3uZ7yGGYEhjiD8xKiM-6XZrM2r_IUzOLHVXHPYPpahj32w8eBiNplnwfn6g3PbnUoSBjavydEoqsbqvTxi0TNlfSfqx0u74d639Lo42Z58QGbWUKgWcGJBmwO9o8h2NmwZrI7fX1KJSZl2G8NEYGVqkmHu6wxufF--KUJ-IgRRroSzaZsSN19qmILall_nl6JtgDah8gt6RrMKa3_A9bvI5XL-XRZ5XgOEby_VUITnGWnL3YI7MmcLK85oZGxSKvoBJZ8iv5t9ITljXTA6u8AO71Nukw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/requisicoes/trianguladas?idTransacaoOrigem=66eadba26dcfff412f461083",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"requisicoes",
								"trianguladas"
							],
							"query": [
								{
									"key": "idTransacaoOrigem",
									"value": "66eadba26dcfff412f461083"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"/*",
							"Swagger: ",
							"https://github.com/NucleaSA/detectaflow-insights/blob/develop/detectaflow-insights-swagger.yml",
							"*/"
						]
					}
				}
			]
		},
		{
			"name": "Sustentacao",
			"item": [
				{
					"name": "LOCAL - Pega participantes do sirv-db e joga no banco dados-fraude",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJraWQiOiJzZEoxTFREbUJRbWg5K0FrYXFUSVwvaTJmNm9QMnlNOWc0WDM2V2VYUTFKOD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiIzMmY5NzBhOC0yMzU5LTQ0NDQtODA1NS01ZTRkYjZhYWQyYjkiLCJjb2duaXRvOmdyb3VwcyI6WyJjaXBtYXN0ZXIiXSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnNhLWVhc3QtMS5hbWF6b25hd3MuY29tXC9zYS1lYXN0LTFfZDZ3SXJxb253IiwiY2xpZW50X2lkIjoiNWR0NWVrZGVmcjZmN3BuOTVhOG8ybXIycG8iLCJvcmlnaW5fanRpIjoiZTY5MzkzYTctZTI5ZS00NTYwLWE3OTUtOWEwODk3NWI5Njg2IiwiZXZlbnRfaWQiOiI3ZWQ2ZTE1Yi1lYzMxLTRjY2YtYTE3My00YWU1MDA2NTg5MTUiLCJ0b2tlbl91c2UiOiJhY2Nlc3MiLCJzY29wZSI6ImF3cy5jb2duaXRvLnNpZ25pbi51c2VyLmFkbWluIiwiYXV0aF90aW1lIjoxNzE4MzA0NjY0LCJleHAiOjE3MTgzOTEwNjMsImlhdCI6MTcxODMwNDY2NCwianRpIjoiOGU3ZjA0ODctZjU5Ny00MTY3LWIwMmMtZmRiODdiNjk4MDdkIiwidXNlcm5hbWUiOiIzMmY5NzBhOC0yMzU5LTQ0NDQtODA1NS01ZTRkYjZhYWQyYjkifQ.d6HkcwvwNZ2VlAUXtag6gGMa_rxG-9BwTyxtHDTyVCzd925nIIR5Kt8er8x3Eo8RYtofkGdoa_sVSkqkcfKixnfTNFevuN2IRDX6OHxPuZpAzB0XBJQWOQ_O0_TgQ2jixoW-xCGCDe98tAN5FuhMjNOGQbg9PDQG762ChOTXVtsvTSAmE8487l_6iJB57gCowxqUGj5SejfUmfI10udIRAaM-DFklrcVRYmYsE0Zy3F-XQ3AWK6xHu1lj9cKzweQw9qNO0og8bSNv8du1OTeeCAlMfgCTb9XiLW3eKrx_2RztVhuw-B4367SUKiIeQmjBUf2zhV6usnmuzysgtmxng",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{localHost}}/sustentacao/participantes/migrar",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"sustentacao",
								"participantes",
								"migrar"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Usuários",
			"item": [
				{
					"name": "LOCAL - Buscar usuários v2 para MASTER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"/*",
									"Filtrar por todo o body abaixo, ou pelo menos um dos campos (não aceita enviar a request com o body vazio)",
									"{",
									"    \"nome\": \"CIP Operador API\",",
									"    \"cargo\": \"QA Sr\",",
									"    \"area\": \"TI\",",
									"    \"emailCorporativo\": \"sirv-operador-api@cip-bancos.org.br\",",
									"    \"situacaoCadastral\": \"624b5c3557f0680c7a2c9187\",",
									"    \"tiposRequisicao\": [",
									"        \"6245f6133b988e4ac7c4ec97\",",
									"        \"6245f6133b988e4ac7c4ec98\",",
									"        \"62421f444e56a22a7fda004f\"",
									"    ],",
									"    \"tipoPerfil\": \"operador\"",
									"}",
									"*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"client_credentials\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"     if (err) { \r",
									"            console.log(err);\r",
									"     }\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('idToken', responseJson['access_token']);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJraWQiOiJzZEoxTFREbUJRbWg5K0FrYXFUSVwvaTJmNm9QMnlNOWc0WDM2V2VYUTFKOD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJhYjUwZGYzNy02NjRmLTQ0Y2QtOTFlNy1jNDk5YTU4ZWUwNDIiLCJjb2duaXRvOmdyb3VwcyI6WyJtYXN0ZXIiXSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnNhLWVhc3QtMS5hbWF6b25hd3MuY29tXC9zYS1lYXN0LTFfZDZ3SXJxb253IiwiY2xpZW50X2lkIjoiNWR0NWVrZGVmcjZmN3BuOTVhOG8ybXIycG8iLCJvcmlnaW5fanRpIjoiZWZiOWYzN2YtNDUwOS00YTAzLWFmMGQtNmEwODRjMjZjMzkyIiwiZXZlbnRfaWQiOiJhNWRiZjEwMi01M2NiLTQzM2QtOGNiYi0wZjVjMjZlZWNmNWEiLCJ0b2tlbl91c2UiOiJhY2Nlc3MiLCJzY29wZSI6ImF3cy5jb2duaXRvLnNpZ25pbi51c2VyLmFkbWluIiwiYXV0aF90aW1lIjoxNzIyOTQ3ODgzLCJleHAiOjE3MjMwMzQyODIsImlhdCI6MTcyMjk0Nzg4MywianRpIjoiM2ZjMjg0OGYtZjVhNy00ZDJmLTk4NjAtZTMyNmMyOTRlYTc1IiwidXNlcm5hbWUiOiJhYjUwZGYzNy02NjRmLTQ0Y2QtOTFlNy1jNDk5YTU4ZWUwNDIifQ.X6DXtP4b38fmLAYxNkrdAIviL-3If08q82mTEEw1xjW0owjvsOccrNjd0SsSSNcHpppBLnHwUOmSXcI8CzdAL-RnjCgjLWf2E56r-KiWuizMgyUQjy1dVb0U4lN5Ln1eYFLubtuNZojnp9tDxEVfqcUKy8J8Qgu8oE0NbF7DoZMl00Tk4ZAO9QMOkBS658ZRFNtkqP07KBwE-ExIm2KUxrAj-ZfIx3Gi6wGaqGlP6PnBLCQwQfSWTLapnpE9sFsKYtFM0pHF1vYoGD6VSnq3UageFyJ2o3PjF65jO6alz3efPoLtL9qEGfNwcLGfKxR44lq4S7g6_3BocI37viLnTw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"situacaoCadastral\": \"624b5c3557f0680c7a2c9187\",\r\n    \"nome\": \"Jaqueline\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:8080/v2/usuarios?paginaAtual=1&quantidade=10&campoOrdenacao=nome&tipoOrdenacao=asc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v2",
								"usuarios"
							],
							"query": [
								{
									"key": "paginaAtual",
									"value": "1"
								},
								{
									"key": "quantidade",
									"value": "10"
								},
								{
									"key": "campoOrdenacao",
									"value": "nome"
								},
								{
									"key": "tipoOrdenacao",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - lista usuario por id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localHost}}/usuarios/622a1a7fff71f049b1479f74",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"usuarios",
								"622a1a7fff71f049b1479f74"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Buscar  todos usuários  para CIPMASTER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"/*",
									"Filtrar por todo o body abaixo, ou pelo menos um dos campos (não aceita enviar a request com o body vazio)",
									"{",
									"    \"nome\": \"CIP Operador API\",",
									"    \"cargo\": \"QA Sr\",",
									"    \"area\": \"TI\",",
									"    \"emailCorporativo\": \"sirv-operador-api@cip-bancos.org.br\",",
									"    \"situacaoCadastral\": \"624b5c3557f0680c7a2c9187\",",
									"    \"tiposRequisicao\": [",
									"        \"6245f6133b988e4ac7c4ec97\",",
									"        \"6245f6133b988e4ac7c4ec98\",",
									"        \"62421f444e56a22a7fda004f\"",
									"    ],",
									"    \"tipoPerfil\": \"operador\"",
									"}",
									"*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"client_credentials\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"     if (err) { \r",
									"            console.log(err);\r",
									"     }\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('idToken', responseJson['access_token']);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJraWQiOiJzZEoxTFREbUJRbWg5K0FrYXFUSVwvaTJmNm9QMnlNOWc0WDM2V2VYUTFKOD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiIzMmY5NzBhOC0yMzU5LTQ0NDQtODA1NS01ZTRkYjZhYWQyYjkiLCJjb2duaXRvOmdyb3VwcyI6WyJjaXBtYXN0ZXIiXSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnNhLWVhc3QtMS5hbWF6b25hd3MuY29tXC9zYS1lYXN0LTFfZDZ3SXJxb253IiwiY2xpZW50X2lkIjoiNWR0NWVrZGVmcjZmN3BuOTVhOG8ybXIycG8iLCJvcmlnaW5fanRpIjoiODkzMzUxMTktZWIzYy00OGU0LWIxNzAtMzkyYmM2NTg1YTM5IiwiZXZlbnRfaWQiOiIyNDQ3YTZmZS01ZWFlLTRlMzUtYjVlNS1lNjkxMjI1NTlkZWQiLCJ0b2tlbl91c2UiOiJhY2Nlc3MiLCJzY29wZSI6ImF3cy5jb2duaXRvLnNpZ25pbi51c2VyLmFkbWluIiwiYXV0aF90aW1lIjoxNzIyMjU4NzQ0LCJleHAiOjE3MjIzNDUxNDQsImlhdCI6MTcyMjI1ODc0NCwianRpIjoiZmUyZWQxNTgtNGVkMC00YTdiLWJhMDUtNjRmZTgxMjBlMDczIiwidXNlcm5hbWUiOiIzMmY5NzBhOC0yMzU5LTQ0NDQtODA1NS01ZTRkYjZhYWQyYjkifQ.e6zMb6YSa4L_FQWvR3FUUSQ9sdna7ey56M-vo8j1vDNlFUsOrAgfVtrU2icBDw9KHg-tGsfmEwtdzwMd3hCkUY4s2jKpBKknQL4HeXm_FNc0hEq5X3AHqADd70D5hRjOaX3lpq-f61M73qabve6X3iHEqfUE8wIg_khUGCz6skOlu1BQVFvwbhr4YFfcOozHE8n1o0QHnk6gP8rOLC9NqfAehPxIkGB0lR2XSmx4WPbV4KPRxgA75hwCQLLrIj1WYMYS7b_5T9XOoEmILoFyNNIhAil5mrWToQeE-RUIPbwBeL0tmOBSPF2nGfzkocWWLXO-9YjEOeMlk1hEqUksfw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/usuarios/todos?paginaAtual=1&quantidade=10&campoOrdenacao=nome&tipoOrdenacao=asc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"usuarios",
								"todos"
							],
							"query": [
								{
									"key": "paginaAtual",
									"value": "1"
								},
								{
									"key": "quantidade",
									"value": "10"
								},
								{
									"key": "campoOrdenacao",
									"value": "nome"
								},
								{
									"key": "tipoOrdenacao",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Alterar perfil dos usuários",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/usuarios/667f03201f7ebb032ddd0c4b/alterar-perfil",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"usuarios",
								"667f03201f7ebb032ddd0c4b",
								"alterar-perfil"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Criar usuario Master  banco e cognito todos campos",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"instituicoes\": [\n    \"622a1a7fff71f049b1479f64\"  \n  ],\n  \"nome\": \"Jaqueline Meira Cruvinel\",\n  \"cpfCnpj\": \"54061516060\",\n  \"dataNascimento\": \"2004-04-01T03:00:00.000Z\",\n  \"rg\": \"56789381X\",\n  \"nacionalidade\": \"brasileiro\",\n  \"cargo\": \"master\",\n  \"area\": \"TI\",\n  \"ramal\": \"1\",\n  \"telefoneComercial\": \"1633334455\",\n  \"telefoneCelular\": \"16933334455\",\n  \"emailCorporativo\": \"testeJaque99@teste.com\",\n  \"confirmacaoEmailCorporativo\": \"testeJaque99@teste.com\",\n  \"tiposRequisicao\": [\n    \"62421f444e56a22a7fda004f\",\n    \"6245f6133b988e4ac7c4ec97\",\n    \"6245f6133b988e4ac7c4ec98\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/usuarios/master",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"usuarios",
								"master"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Criar usuario Master  banco e cognito AD sem alguns campos",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJraWQiOiJzZEoxTFREbUJRbWg5K0FrYXFUSVwvaTJmNm9QMnlNOWc0WDM2V2VYUTFKOD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiIzMmY5NzBhOC0yMzU5LTQ0NDQtODA1NS01ZTRkYjZhYWQyYjkiLCJjb2duaXRvOmdyb3VwcyI6WyJjaXBtYXN0ZXIiXSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnNhLWVhc3QtMS5hbWF6b25hd3MuY29tXC9zYS1lYXN0LTFfZDZ3SXJxb253IiwiY2xpZW50X2lkIjoiNWR0NWVrZGVmcjZmN3BuOTVhOG8ybXIycG8iLCJvcmlnaW5fanRpIjoiODkzMzUxMTktZWIzYy00OGU0LWIxNzAtMzkyYmM2NTg1YTM5IiwiZXZlbnRfaWQiOiIyNDQ3YTZmZS01ZWFlLTRlMzUtYjVlNS1lNjkxMjI1NTlkZWQiLCJ0b2tlbl91c2UiOiJhY2Nlc3MiLCJzY29wZSI6ImF3cy5jb2duaXRvLnNpZ25pbi51c2VyLmFkbWluIiwiYXV0aF90aW1lIjoxNzIyMjU4NzQ0LCJleHAiOjE3MjIzNDUxNDQsImlhdCI6MTcyMjI1ODc0NCwianRpIjoiZmUyZWQxNTgtNGVkMC00YTdiLWJhMDUtNjRmZTgxMjBlMDczIiwidXNlcm5hbWUiOiIzMmY5NzBhOC0yMzU5LTQ0NDQtODA1NS01ZTRkYjZhYWQyYjkifQ.e6zMb6YSa4L_FQWvR3FUUSQ9sdna7ey56M-vo8j1vDNlFUsOrAgfVtrU2icBDw9KHg-tGsfmEwtdzwMd3hCkUY4s2jKpBKknQL4HeXm_FNc0hEq5X3AHqADd70D5hRjOaX3lpq-f61M73qabve6X3iHEqfUE8wIg_khUGCz6skOlu1BQVFvwbhr4YFfcOozHE8n1o0QHnk6gP8rOLC9NqfAehPxIkGB0lR2XSmx4WPbV4KPRxgA75hwCQLLrIj1WYMYS7b_5T9XOoEmILoFyNNIhAil5mrWToQeE-RUIPbwBeL0tmOBSPF2nGfzkocWWLXO-9YjEOeMlk1hEqUksfw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instituicoes\": [\n        \"622a1a7fff71f049b1479f64\"\n    ],\n    \"nome\": \"Jaqueline Meira Cruvinel\",\n    \"cpfCnpj\": \"67329639028\",\n    \"rg\": \"311419033\",\n    \"nacionalidade\": \"5646456-00\",\n    \"cargo\": \"master\",\n    \"area\": \"TI\",\n    \"ramal\": \"1\",\n    \"telefoneComercial\": \"1633334455\",\n    \"telefoneCelular\": \"16933334455\",\n    \"emailCorporativo\": \"teste7Jaque@teste.com\",\n    \"confirmacaoEmailCorporativo\": \"teste7Jaque@teste.com\",\n    \"tiposRequisicao\": [\n        \"62421f444e56a22a7fda004f\",\n        \"6245f6133b988e4ac7c4ec97\",\n        \"6245f6133b988e4ac7c4ec98\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localHost}}/usuarios/master",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"usuarios",
								"master"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pegar Token usuário  de API",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "1mp68uenbqmp1bqjo3519j8nopua2el8kd0ji96cdqgao4do7i96",
									"type": "string"
								},
								{
									"key": "username",
									"value": "237ciso1obkh5h6h7ca2j2dp0a",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic NzRrbTY2aWtlamQ2c2Y0NWQyOTdpMDg4aWw6MWtidG5yMXQwaGIwbGxmZmNiZGY0Y29mcmVqdnBqaXBzM2o3c3YzOWV1MmZqbHJyaWpkcA=="
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token",
							"protocol": "https",
							"host": [
								"detectaflow-hint",
								"auth",
								"sa-east-1",
								"amazoncognito",
								"com"
							],
							"path": [
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "HINT- buscar usuários",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{hintHost}}/usuarios/6674a00b85b8bb4b8bd168d8",
							"host": [
								"{{hintHost}}"
							],
							"path": [
								"usuarios",
								"6674a00b85b8bb4b8bd168d8"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - buscar usuários",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localHost}}/usuarios/66ad3438480c285f1f73eade",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"usuarios",
								"66ad3438480c285f1f73eade"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL  - Buscar usuários v2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"/*",
									"Filtrar por todo o body abaixo, ou pelo menos um dos campos (não aceita enviar a request com o body vazio)",
									"{",
									"    \"nome\": \"CIP Operador API\",",
									"    \"cargo\": \"QA Sr\",",
									"    \"area\": \"TI\",",
									"    \"emailCorporativo\": \"sirv-operador-api@cip-bancos.org.br\",",
									"    \"situacaoCadastral\": \"624b5c3557f0680c7a2c9187\",",
									"    \"tiposRequisicao\": [",
									"        \"6245f6133b988e4ac7c4ec97\",",
									"        \"6245f6133b988e4ac7c4ec98\",",
									"        \"62421f444e56a22a7fda004f\"",
									"    ],",
									"    \"tipoPerfil\": \"operador\"",
									"}",
									"*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"client_credentials\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"     if (err) { \r",
									"            console.log(err);\r",
									"     }\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('idToken', responseJson['access_token']);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{idToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"tipoPerfil\": \"operador\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl-sirv-api}}/v2/usuarios?paginaAtual=1&quantidade=10&campoOrdenacao=nome&tipoOrdenacao=asc",
							"host": [
								"{{baseUrl-sirv-api}}"
							],
							"path": [
								"v2",
								"usuarios"
							],
							"query": [
								{
									"key": "paginaAtual",
									"value": "1"
								},
								{
									"key": "quantidade",
									"value": "10"
								},
								{
									"key": "campoOrdenacao",
									"value": "nome"
								},
								{
									"key": "tipoOrdenacao",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Cadastro usuário AD - SSO",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{localHost}}/usuario-logado/sso",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"usuario-logado",
								"sso"
							]
						}
					},
					"response": []
				},
				{
					"name": "HINT - Cadastro usuário AD - SSO",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJraWQiOiJzZEoxTFREbUJRbWg5K0FrYXFUSVwvaTJmNm9QMnlNOWc0WDM2V2VYUTFKOD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJjOGMyODhjNC01YTJlLTQ3N2YtYjNhMi1mODdhZmU0OTdlMTIiLCJjb2duaXRvOmdyb3VwcyI6WyJvcGVyYWRvciIsIm9yaWdlbV9hZCJdLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuc2EtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3NhLWVhc3QtMV9kNndJcnFvbnciLCJ2ZXJzaW9uIjoyLCJjbGllbnRfaWQiOiI2bWNndmU5bGQ3N2dzYTJvczZ2MHBmN21pdiIsIm9yaWdpbl9qdGkiOiIzMmJmZjRmZS1hODhlLTRlOTQtYjgxYi04N2MwZmM0NjVmOTIiLCJ0b2tlbl91c2UiOiJhY2Nlc3MiLCJzY29wZSI6ImF3cy5jb2duaXRvLnNpZ25pbi51c2VyLmFkbWluIG9wZW5pZCBwcm9maWxlIGVtYWlsIiwiYXV0aF90aW1lIjoxNzIzNTYxMTYxLCJleHAiOjE3MjM1NjQ3NjEsImlhdCI6MTcyMzU2MTE2MiwianRpIjoiNzBiNDQ4YjMtOThmMC00Yjg3LTgyYTMtNTgwM2MyMjUxMjRmIiwidXNlcm5hbWUiOiIwNDM5MTAwN19qYXF1ZWxpbmUuc2lsdmFAbnVjbGVhLmNvbS5iciJ9.miMEUjkWeaM_W9Bp3gJGoIbg6Q8PV9dsv5V6oScJ38DjqBaWzNa7Wwv0ZdGrbjHiaJDWOCj9aHjD6S3TMk1lC7vj48BSuw7BMrQO6bpZ9ir0EPWHwSWC9Bs0YpLw7uBcJzqG5Zjf6DrXV2HDoQJOuXGGzAgIttS0i-HNXwdJuBg_1TruhPVPnoZ5HzLSDzAebGV0dOvYLHDwowmvGez2szc7rLPTRtXc4YSAwoB0fnCPp5jj8dwlaEHzDs25e4g4AHpZg6mSkJpkqAuc3MMl_Gq0YfGj7HxQeGUmHHEHf8_AFXRUNfNl_6X3YM5SwjPE9O0BFrYOdtj1h2t8mPB-fQ",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{hintHost}}/usuario-logado/sso",
							"host": [
								"{{hintHost}}"
							],
							"path": [
								"usuario-logado",
								"sso"
							]
						}
					},
					"response": []
				},
				{
					"name": "Master - Editar usuário",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instituicoes\": [\n        \"622a1a7fff71f049b1479f64\"\n    ],\n    \"nome\": \"Jaqueline Meira Cruvinel\",\n   \n    \"nacionalidade\": \"75465\",\n    \"cargo\": \"master\",\n    \"area\": \"TI\",\n    \"ramal\": \"1\",\n    \"telefoneComercial\": \"1633334455\",\n    \"telefoneCelular\": \"16933334455\",\n    \"emailCorporativo\": \"teste5Jaque@teste.com\",\n    \"confirmacaoEmailCorporativo\": \"teste5Jaque@teste.com\",\n    \"tiposRequisicao\": [\n        \"62421f444e56a22a7fda004f\",\n        \"6245f6133b988e4ac7c4ec97\",\n        \"6245f6133b988e4ac7c4ec98\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localHost}}/usuarios/master/66a79c9d4c73b043cd303218",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"usuarios",
								"master",
								"66a79c9d4c73b043cd303218"
							]
						}
					},
					"response": []
				},
				{
					"name": "Token usuario SSO",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Cookie",
								"value": "XSRF-TOKEN=f9347a9c-2273-4a37-8b69-a5b24a253ca4"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "6mcgve9ld77gsa2os6v0pf7miv",
									"type": "text"
								},
								{
									"key": "redirect_uri",
									"value": "https://du0rubglrzld3.cloudfront.net/sso",
									"type": "text"
								},
								{
									"key": "code",
									"value": "6d7cfc5d-e178-441d-83f0-e3482b529e65",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token",
							"protocol": "https",
							"host": [
								"detectaflow-hint",
								"auth",
								"sa-east-1",
								"amazoncognito",
								"com"
							],
							"path": [
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - configurar sso por participante",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJraWQiOiJzZEoxTFREbUJRbWg5K0FrYXFUSVwvaTJmNm9QMnlNOWc0WDM2V2VYUTFKOD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiIzMmY5NzBhOC0yMzU5LTQ0NDQtODA1NS01ZTRkYjZhYWQyYjkiLCJjb2duaXRvOmdyb3VwcyI6WyJjaXBtYXN0ZXIiXSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnNhLWVhc3QtMS5hbWF6b25hd3MuY29tXC9zYS1lYXN0LTFfZDZ3SXJxb253IiwiY2xpZW50X2lkIjoiNWR0NWVrZGVmcjZmN3BuOTVhOG8ybXIycG8iLCJvcmlnaW5fanRpIjoiOTM5NGVkNDEtNGRkZi00ZGI3LWE1MDktNWNkZjlmNDVjMDZhIiwiZXZlbnRfaWQiOiJkNTA0MmNkMy00NTEyLTQ3YmYtYTliYS01YmU3ZWMwMDg3Y2QiLCJ0b2tlbl91c2UiOiJhY2Nlc3MiLCJzY29wZSI6ImF3cy5jb2duaXRvLnNpZ25pbi51c2VyLmFkbWluIiwiYXV0aF90aW1lIjoxNzIyODgxNzkyLCJleHAiOjE3MjI5NjgxOTAsImlhdCI6MTcyMjg4MTc5MiwianRpIjoiMTE4ZGZlN2MtOTJiYi00YmEzLWIzZWQtZmI0OGEyNzY2MmM5IiwidXNlcm5hbWUiOiIzMmY5NzBhOC0yMzU5LTQ0NDQtODA1NS01ZTRkYjZhYWQyYjkifQ.J8guZB5b5lmvnKSv-Xk1TQTWlMhNyGTXXkEDBgwnA_U234iwlkO9TBdnZNH_B09Uxe4O4wxSSMH2u32eg8zIUg-n4wiDtQ10T37B88O6hlOTfova4QvdV7nVslFFGGs6YO2Tg1F2ov8s9ESv9zTZsm1JkiGNfzwa6VaE0cRcpYkLt41Sbw_5nLvGAo7Jjc2Pru5Ss-U79siliQ599XZPONS5FhNciXSQXUVi8a_Y1bpyHEdXbnyBj-hDcpy2LwWiB8fLeK9aZBEpQ_z4NB_6BhKVmvwrf4ThCEwIOVTKGj6uA0UZn-m6W4t_9a8q6zsvgYyHS4kr1YOragmCkQ7Q_w",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"urlMetadadosFederacao\": \"https://login.microsoftonline.com/72625c40-4d0a-4a8b-b71a-c44f4bd2a1e2/federationmetadata/2007-06/federationmetadata.xml?appid=0e365ef5-c182-4481-9d4c-b7bb65d3fba8\"\n \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localHost}}/participantes/622a1a7fff71f049b1479f64/configurar-sso",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"participantes",
								"622a1a7fff71f049b1479f64",
								"configurar-sso"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Buscar Configuração sso por participante",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localHost}}/participantes/622a1a7fff71f049b1479f64/configuracao-sso",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"participantes",
								"622a1a7fff71f049b1479f64",
								"configuracao-sso"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - cadastrar novo operador com campos nao obrigatórios",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {",
									"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',",
									"  method: 'POST',",
									"  timeout: 0,",
									"  header: {",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\",",
									"    \"Authorization\": \"Basic NjBocTZsZGdqcTU5MGEzZ2Y1dXVqNjNyNXQ6cGI2Y2E0bHVzN3RwMm1mOHRub2ppaWhva2tucHJ1ZDE4bGV1b2c0NzhqdjgwbmY2NW10\"",
									"  },",
									"  body: {",
									"    mode: 'urlencoded',",
									"    urlencoded: [",
									"        {key: \"grant_type\", value: \"client_credentials\"}",
									"    ]}",
									"};",
									"pm.sendRequest(postRequest, function (err, res) {",
									"     if (err) { ",
									"            console.log(err);",
									"     }",
									"    var responseJson = res.json();",
									"    console.log(responseJson);",
									"    pm.environment.set('accessToken', responseJson['access_token']);",
									"})",
									"",
									"function cpf() {",
									"  const rnd = (n) => Math.round(Math.random() * n);",
									"  const mod = (base, div) => Math.round(base - Math.floor(base / div) * div)",
									"  const n = Array(9).fill('').map(() => rnd(9));",
									"",
									"  let d1 = n.reduce((total, number, index) => (total + (number * (10 - index))), 0)",
									"  d1 = 11 - mod(d1, 11);",
									"  if (d1 >= 10) d1 = 0;",
									"  ",
									"  let d2 = (d1 * 2) + n.reduce((total, number, index) => (total + (number * (11 - index))), 0)",
									"  d2 = 11 - mod(d2, 11);",
									"  if (d2 >= 10) d2 = 0;",
									"",
									"  return `${n.join('')}${d1}${d2}`",
									"}",
									"",
									"pm.environment.set('cpf', cpf());",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJraWQiOiJzZEoxTFREbUJRbWg5K0FrYXFUSVwvaTJmNm9QMnlNOWc0WDM2V2VYUTFKOD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJhYjUwZGYzNy02NjRmLTQ0Y2QtOTFlNy1jNDk5YTU4ZWUwNDIiLCJjb2duaXRvOmdyb3VwcyI6WyJtYXN0ZXIiXSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnNhLWVhc3QtMS5hbWF6b25hd3MuY29tXC9zYS1lYXN0LTFfZDZ3SXJxb253IiwiY2xpZW50X2lkIjoiNWR0NWVrZGVmcjZmN3BuOTVhOG8ybXIycG8iLCJvcmlnaW5fanRpIjoiN2M1MzZkYjItNzdmYy00M2IzLWJmOWMtODllZGY1NWQ0NTA5IiwiZXZlbnRfaWQiOiJjMzFkMTE1ZC03OTJiLTQ4NTItYmE0Ny1kYjFiMTRiNGZlZTkiLCJ0b2tlbl91c2UiOiJhY2Nlc3MiLCJzY29wZSI6ImF3cy5jb2duaXRvLnNpZ25pbi51c2VyLmFkbWluIiwiYXV0aF90aW1lIjoxNzIyODgyNTcyLCJleHAiOjE3MjI5Njg5NzAsImlhdCI6MTcyMjg4MjU3MiwianRpIjoiMjUyYzE5MDAtMjIxOC00MDQzLWI3YjQtMTIzMzgwNGQyNTRjIiwidXNlcm5hbWUiOiJhYjUwZGYzNy02NjRmLTQ0Y2QtOTFlNy1jNDk5YTU4ZWUwNDIifQ.Odd0rkvo5JZyBw7PF95TWtul2RGWA2XuwrpJcGilLXdRJ-cGA9AlopR0vQGeYjrlfjhtjqaLWasB52njqWi5sNFVXIFADBGFM7G60IPxAR9ZPiA5iycbUjgDANrdYmLtHA8W_00QhUqSOhCdkPoP3Zf3ksn6wvZdWD0_YDuuegh31RskJsZR2CNefmqDROvtgKNPmLYCCBZiDm1DId4FFUTlNlLFZ7heEBZzUk86fBSMoUeaWj8BLg8NEgKUhHRYTxJrgDCe5-Rzb6JJW7PeeOy5yZTAZFX11PSA2yzY2K0PQfrvzUGkXNtVN5gvcDsN0P1qU1eYMjPq4xq7lRKkuw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"instituicoes\": [\n        \"622a1a7fff71f049b1479f64\"\n    ],\n    \"emailCorporativo\": \"abel_teste_12@cip-bancos.org.br\",\n    \"confirmacaoEmailCorporativo\": \"abel_teste_12@cip-bancos.org.br\",\n    \"situacaoCadastral\": \"624b5c3557f0680c7a2c9187\",\n    \"erroOperacional\": true,\n    \"nome\": \"Abel Teste 15\",\n    \"tiposRequisicao\": [\n        \"62421f444e56a22a7fda004f\"\n    ],\n    \"permissoes\": [\n        {\n            \"nome\": \"CONCILIACAO_VALORES\",\n            \"possuiAcesso\": false\n        },\n        {\n            \"nome\": \"DATA_INSIGHTS\",\n            \"possuiAcesso\": false\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localHost}}/operadores",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"operadores"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Participantes",
			"item": [
				{
					"name": "Buscar participantes ativos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// const postRequest = {\r",
									"//   url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"//   method: 'POST',\r",
									"//   timeout: 0,\r",
									"//   header: {\r",
									"//     \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"//     \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"//   },\r",
									"//   body: {\r",
									"//     mode: 'urlencoded',\r",
									"//     urlencoded: [\r",
									"//         {key: \"grant_type\", value: \"client_credentials\"}\r",
									"//     ]}\r",
									"// };\r",
									"// pm.sendRequest(postRequest, function (err, res) {\r",
									"//      if (err) { \r",
									"//             console.log(err);\r",
									"//      }\r",
									"//     var responseJson = res.json();\r",
									"//     console.log(responseJson);\r",
									"//     pm.environment.set('idToken', responseJson['access_token']);\r",
									"// })\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{idToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl-sirv-api}}/participantes",
							"host": [
								"{{baseUrl-sirv-api}}"
							],
							"path": [
								"participantes"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Cadastrar participante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"/*",
									"1. Autenticar no Postman com um usuário \"cipmaster\"",
									"",
									"2. Cadastrar por este endpoint, informando um CNPJ diferente, e um ISPB que esteja na lista da collection \"instituicoes_bacen\" do MongoDB, que ainda não tenha sido utilizado. ",
									"",
									"Caso já tenha sido utilizado, a API retorna uma mensagem.",
									"",
									"3. Logar com o cipmaster, selecionar os participantes e atribuir os usuários a ele.",
									"*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// const postRequest = {\r",
									"//   url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"//   method: 'POST',\r",
									"//   timeout: 0,\r",
									"//   header: {\r",
									"//     \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"//     \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"//   },\r",
									"//   body: {\r",
									"//     mode: 'urlencoded',\r",
									"//     urlencoded: [\r",
									"//         {key: \"grant_type\", value: \"client_credentials\"}\r",
									"//     ]}\r",
									"// };\r",
									"// pm.sendRequest(postRequest, function (err, res) {\r",
									"//      if (err) { \r",
									"//             console.log(err);\r",
									"//      }\r",
									"//     var responseJson = res.json();\r",
									"//     console.log(responseJson);\r",
									"//     pm.environment.set('idToken', responseJson['access_token']);\r",
									"// })\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJraWQiOiJzZEoxTFREbUJRbWg5K0FrYXFUSVwvaTJmNm9QMnlNOWc0WDM2V2VYUTFKOD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiIzMmY5NzBhOC0yMzU5LTQ0NDQtODA1NS01ZTRkYjZhYWQyYjkiLCJjb2duaXRvOmdyb3VwcyI6WyJjaXBtYXN0ZXIiXSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnNhLWVhc3QtMS5hbWF6b25hd3MuY29tXC9zYS1lYXN0LTFfZDZ3SXJxb253IiwiY2xpZW50X2lkIjoiNWR0NWVrZGVmcjZmN3BuOTVhOG8ybXIycG8iLCJvcmlnaW5fanRpIjoiNTljMWM4ZGQtYmUyZS00YTJiLTliMzktYjRlMTVkYzM2Nzc3IiwiZXZlbnRfaWQiOiIyMWYwMDI1ZS02MTY0LTQ3NTEtYThiYy0yNjU2NGM5ZmUxM2UiLCJ0b2tlbl91c2UiOiJhY2Nlc3MiLCJzY29wZSI6ImF3cy5jb2duaXRvLnNpZ25pbi51c2VyLmFkbWluIiwiYXV0aF90aW1lIjoxNzMwOTg0NzcyLCJleHAiOjE3MzEwNzExNzAsImlhdCI6MTczMDk4NDc3MiwianRpIjoiNzc1NTllYjMtOGEzYS00NWEzLTlkNTUtZTk4Y2M1NDdmZjFjIiwidXNlcm5hbWUiOiIzMmY5NzBhOC0yMzU5LTQ0NDQtODA1NS01ZTRkYjZhYWQyYjkifQ.YsxdVkDb7tzcib7iJiQdmfIL3oWanYUl4AfShFehAxxMtS0qKhgVbpqlelhKrtoSBhfMYdUP7Gth7iuKTffo9Vkkc2SKE32auuA0Twl2AepINVlPX08xWpySIGBRzs9FgEvjxnrT8RtAgp9O0gDrttYfKQ4ma7zRiYbEeHSDaUG0iNULvCzD_zXHFov-IewsySBggK1Rp-4hcSvNCIoXKdQdyBFf_i_BUmGYApyTynRT_eks7UIo7pC8zRPeID5gk2kRPDep5cJ7shE88Nhg5RuLIpQvbUvIfOtWUId_HJgvfecY6YZWP5RdZjJMSm4izOeNuXjsZVZk3Ty6v1RHog",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"razaoSocial\": \"Banco da Jaqueline Cruvinel 42 S/A\",\n    \"nomeFantasia\": \"Banco da Jaqueline Cruvinel 42 S/A\",\n    \"cnpj\": \"24813084000140\",\n    \"dominioEmailCorporativo\": [\n        \"cip-bancos.org.br\"\n    ],\n    \"email\": \"banco.jaque@cip-bancos.org.br\",\n    \"ispb\": \"33132044\",\n    \"planoContratado\": \"6245f6133b988e4ac7c4ec9a\",\n    \"aplicacao\": \"RECUPERACAO_E_NUCLEO_FRAUDES\",\n    \"disponivelReceberRequisicoes\": true,\n    \"contabilizarPara\": \"62436bc157f068296b727e72\",\n    \"parceriaResolucao6\": \"672936b3a6e7ab0938c4c393\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localHost}}/participantes",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"participantes"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Atualizar participante por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// const postRequest = {\r",
									"//   url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"//   method: 'POST',\r",
									"//   timeout: 0,\r",
									"//   header: {\r",
									"//     \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"//     \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"//   },\r",
									"//   body: {\r",
									"//     mode: 'urlencoded',\r",
									"//     urlencoded: [\r",
									"//         {key: \"grant_type\", value: \"client_credentials\"}\r",
									"//     ]}\r",
									"// };\r",
									"// pm.sendRequest(postRequest, function (err, res) {\r",
									"//      if (err) { \r",
									"//             console.log(err);\r",
									"//      }\r",
									"//     var responseJson = res.json();\r",
									"//     console.log(responseJson);\r",
									"//     pm.environment.set('idToken', responseJson['access_token']);\r",
									"// })\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"razaoSocial\": \"Banco da Jaqueline Cruvinel 33 S/A\",\n    \"nomeFantasia\": \"Banco da Jaqueline Cruvinel 33 S/A\",\n    \"cnpj\": \"69882724000102\",\n    \"dominioEmailCorporativo\": [\n        \"cip-bancos.org.br\"\n    ],\n    \"email\": \"banco.jaque@cip-bancos.org.br\",\n    \"ispb\": \"03844699\",\n    \"planoContratado\": \"6245f6133b988e4ac7c4ec9a\",\n    \"aplicacao\": \"RECUPERACAO_E_NUCLEO_FRAUDES\",\n    \"aderiuQuod\": true,\n    \"parceria\": \"RUFRA\",\n    \"disponivelReceberRequisicoes\": true,\n    \"contabilizarPara\": \"622a1a7fff71f049b1479f64\"\n\n  \n\n    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localHost}}/participantes/62436bc157f068296b727e72",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"participantes",
								"62436bc157f068296b727e72"
							]
						}
					},
					"response": []
				},
				{
					"name": "Inativar participante por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"client_credentials\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"     if (err) { \r",
									"            console.log(err);\r",
									"     }\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('idToken', responseJson['access_token']);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{idToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"razaoSocial\": \"Banco do Brasil\",\n  \"nomeFantasia\": \"Banco do Brasil\",\n  \"cnpj\": \"77018237000124\",\n  \"dominioEmailCorporativo\": [\n    \"@cip-bancos.org.br\",\n    \"@cip-bancos.org.br\"\n  ],\n  \"email\": \"cipbancos-exemplo@cip-bancos.org.br\",\n  \"ispb\": \"01234567\",\n  \"planoContratado\": \"62f6a0368ea26a1819115a4c\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl-sirv-api}}/participantes/507f191e810c19729de860ea",
							"host": [
								"{{baseUrl-sirv-api}}"
							],
							"path": [
								"participantes",
								"507f191e810c19729de860ea"
							]
						}
					},
					"response": []
				},
				{
					"name": "Adesão do participante a API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"\r",
									"ISPB do participante \"SELIC - Req Lote Carol\": 00038121\r",
									"\r",
									"*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// const postRequest = {\r",
									"//   url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"//   method: 'POST',\r",
									"//   timeout: 0,\r",
									"//   header: {\r",
									"//     \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"//     \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"//   },\r",
									"//   body: {\r",
									"//     mode: 'urlencoded',\r",
									"//     urlencoded: [\r",
									"//         {key: \"grant_type\", value: \"client_credentials\"}\r",
									"//     ]}\r",
									"// };\r",
									"// pm.sendRequest(postRequest, function (err, res) {\r",
									"//      if (err) { \r",
									"//             console.log(err);\r",
									"//      }\r",
									"//     var responseJson = res.json();\r",
									"//     console.log(responseJson);\r",
									"//     pm.environment.set('idToken', responseJson['access_token']);\r",
									"// })\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{idToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl-sirv-api}}/participantes/60746948/aderir-api",
							"host": [
								"{{baseUrl-sirv-api}}"
							],
							"path": [
								"participantes",
								"60746948",
								"aderir-api"
							]
						}
					},
					"response": []
				},
				{
					"name": "Alterar plano do participante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"\r",
									"ISPB do participante \"SELIC - Req Lote Carol\": 00038121\r",
									"\r",
									"*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"client_credentials\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"     if (err) { \r",
									"            console.log(err);\r",
									"     }\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('idToken', responseJson['access_token']);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{idToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{localHost}}/participantes/00038121/alterar-plano",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"participantes",
								"00038121",
								"alterar-plano"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar tipos de participante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"client_credentials\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"     if (err) { \r",
									"            console.log(err);\r",
									"     }\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('idToken', responseJson['access_token']);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{idToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl-sirv-api}}/tipos-participante",
							"host": [
								"{{baseUrl-sirv-api}}"
							],
							"path": [
								"tipos-participante"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar situação do participante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"client_credentials\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"     if (err) { \r",
									"            console.log(err);\r",
									"     }\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('idToken', responseJson['access_token']);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{idToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "IdToken",
								"value": "1",
								"type": "default",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl-sirv-api}}/situacao-participante",
							"host": [
								"{{baseUrl-sirv-api}}"
							],
							"path": [
								"situacao-participante"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload logotipo do participante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/* Apenas cipmaster pode inserir o logotipo */"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// const postRequest = {\r",
									"//   url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"//   method: 'POST',\r",
									"//   timeout: 0,\r",
									"//   header: {\r",
									"//     \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"//     \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"//   },\r",
									"//   body: {\r",
									"//     mode: 'urlencoded',\r",
									"//     urlencoded: [\r",
									"//         {key: \"grant_type\", value: \"client_credentials\"}\r",
									"//     ]}\r",
									"// };\r",
									"// pm.sendRequest(postRequest, function (err, res) {\r",
									"//      if (err) { \r",
									"//             console.log(err);\r",
									"//      }\r",
									"//     var responseJson = res.json();\r",
									"//     console.log(responseJson);\r",
									"//     pm.environment.set('idToken', responseJson['access_token']);\r",
									"// })\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{idToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "logo",
									"description": "deve ser uma imagem legítima png, com qualquer nome.",
									"type": "file",
									"src": "/G:/F001976/Massa de teste/logoAW3.png"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl-sirv-api}}/participantes/13845800/logo",
							"host": [
								"{{baseUrl-sirv-api}}"
							],
							"path": [
								"participantes",
								"13845800",
								"logo"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar logotipo do participante do usuário logado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"/* Apenas operador, master e usuario-api podem buscar o logotipo */"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"client_credentials\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"     if (err) { \r",
									"            console.log(err);\r",
									"     }\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('idToken', responseJson['access_token']);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{idToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl-sirv-api}}/usuario-logado/logo",
							"host": [
								"{{baseUrl-sirv-api}}"
							],
							"path": [
								"usuario-logado",
								"logo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar participantes paginado",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localHost}}/v2/participantes?paginaAtual=1&quantidade=10&campoOrdenacao=razaoSocial&tipoOrdenacao=asc",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"v2",
								"participantes"
							],
							"query": [
								{
									"key": "paginaAtual",
									"value": "1"
								},
								{
									"key": "quantidade",
									"value": "10"
								},
								{
									"key": "campoOrdenacao",
									"value": "razaoSocial"
								},
								{
									"key": "tipoOrdenacao",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Buscar participante por ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localHost}}/participantes/62436bc157f068296b727e72",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"participantes",
								"62436bc157f068296b727e72"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Buscar participantes v2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"/*",
									"Filtrar por todo o body abaixo, ou pelo menos um dos campos (não aceita enviar a request com o body vazio)",
									"{",
									"    \"nome\": \"CIP Operador API\",",
									"    \"cargo\": \"QA Sr\",",
									"    \"area\": \"TI\",",
									"    \"emailCorporativo\": \"sirv-operador-api@cip-bancos.org.br\",",
									"    \"situacaoCadastral\": \"624b5c3557f0680c7a2c9187\",",
									"    \"tiposRequisicao\": [",
									"        \"6245f6133b988e4ac7c4ec97\",",
									"        \"6245f6133b988e4ac7c4ec98\",",
									"        \"62421f444e56a22a7fda004f\"",
									"    ],",
									"    \"tipoPerfil\": \"operador\"",
									"}",
									"*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const postRequest = {\r",
									"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"  method: 'POST',\r",
									"  timeout: 0,\r",
									"  header: {\r",
									"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'urlencoded',\r",
									"    urlencoded: [\r",
									"        {key: \"grant_type\", value: \"client_credentials\"}\r",
									"    ]}\r",
									"};\r",
									"pm.sendRequest(postRequest, function (err, res) {\r",
									"     if (err) { \r",
									"            console.log(err);\r",
									"     }\r",
									"    var responseJson = res.json();\r",
									"    console.log(responseJson);\r",
									"    pm.environment.set('idToken', responseJson['access_token']);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{localHost}}/v2/participantes?paginaAtual=1&quantidade=10&campoOrdenacao=situacaoCadastro",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"v2",
								"participantes"
							],
							"query": [
								{
									"key": "paginaAtual",
									"value": "1"
								},
								{
									"key": "quantidade",
									"value": "10"
								},
								{
									"key": "campoOrdenacao",
									"value": "situacaoCadastro"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Atualizar participante por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// const postRequest = {\r",
									"//   url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"//   method: 'POST',\r",
									"//   timeout: 0,\r",
									"//   header: {\r",
									"//     \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"//     \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"//   },\r",
									"//   body: {\r",
									"//     mode: 'urlencoded',\r",
									"//     urlencoded: [\r",
									"//         {key: \"grant_type\", value: \"client_credentials\"}\r",
									"//     ]}\r",
									"// };\r",
									"// pm.sendRequest(postRequest, function (err, res) {\r",
									"//      if (err) { \r",
									"//             console.log(err);\r",
									"//      }\r",
									"//     var responseJson = res.json();\r",
									"//     console.log(responseJson);\r",
									"//     pm.environment.set('idToken', responseJson['access_token']);\r",
									"// })\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJraWQiOiJzZEoxTFREbUJRbWg5K0FrYXFUSVwvaTJmNm9QMnlNOWc0WDM2V2VYUTFKOD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiIzMmY5NzBhOC0yMzU5LTQ0NDQtODA1NS01ZTRkYjZhYWQyYjkiLCJjb2duaXRvOmdyb3VwcyI6WyJjaXBtYXN0ZXIiXSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnNhLWVhc3QtMS5hbWF6b25hd3MuY29tXC9zYS1lYXN0LTFfZDZ3SXJxb253IiwiY2xpZW50X2lkIjoiNWR0NWVrZGVmcjZmN3BuOTVhOG8ybXIycG8iLCJvcmlnaW5fanRpIjoiZGVkYTZlZGEtYTAwMC00ZGE3LWIxOWItYTAwNDJhMGUzMTk4IiwiZXZlbnRfaWQiOiI4OTUzZjg2Ny1hZTk1LTRkNDMtOGRlNy1kNzk4MWFkYjFjZDYiLCJ0b2tlbl91c2UiOiJhY2Nlc3MiLCJzY29wZSI6ImF3cy5jb2duaXRvLnNpZ25pbi51c2VyLmFkbWluIiwiYXV0aF90aW1lIjoxNzE2MzEwOTQxLCJleHAiOjE3MTYzOTczNDEsImlhdCI6MTcxNjMxMDk0MSwianRpIjoiNWQzODllYjktZGFhMC00MjU3LWI5ZTQtNmJmN2QwYjBmZjg5IiwidXNlcm5hbWUiOiIzMmY5NzBhOC0yMzU5LTQ0NDQtODA1NS01ZTRkYjZhYWQyYjkifQ.Nca9JDrbDR4-rLwZ09pVj1GQhBm68V6ac_T5e9ByC8dzMOeCfOa1WPg3WAb1oT2WBTrypFv7iLq9BX5M7fGYyQX51I01rt0cZUgnMFEcwVFwNg0oiSDUMjEqzcxeIclF0MukN1OfAKp6dvx9NxCj2l-pVoITVQKKevM-Y5vYX9KjmX1-WLWdvHs9nmzVtN-CtzBUx0Ax-aMgOu2yxOW-GbZuN5uX14euru3KVCRmikVqJuRIMJEdzhktkOiUtjNIYC9llTZIlWhoMHCs2P9K0ZlOewSu76LdxXFLrHyKhDPDKhEg3G2MIEmJwaEmzPb79JgPu2COf-pEKNtf0ZTbEw",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"razaoSocial\": \"Banco da Jaque S/A\",\n    \"nomeFantasia\": \"Banco da Jaque S/A\",\n    \"cnpj\": \"50638954000100\",\n    \"dominioEmailCorporativo\": [\n        \"cip-bancos.org.br\"\n    ],\n    \"email\": \"banco.jaque@cip-bancos.org.br\",\n    \"ispb\": \"32345618\",\n    \"planoContratado\": \"6245f6133b988e4ac7c4ec9a\",\n    \"aplicacao\": \"RECUPERACAO_E_NUCLEO_FRAUDES\",\n    \"aderiuQuod\": true,\n    \"parceria\": \"RUFRA\",\n    \"motivo\": \"Teste\",\n    \"disponivelReceberRequisicoes\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localHost}}/participantes/624c8bdb57f0680c7a2c9189",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"participantes",
								"624c8bdb57f0680c7a2c9189"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Buscar participantes ativos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// const postRequest = {\r",
									"//   url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
									"//   method: 'POST',\r",
									"//   timeout: 0,\r",
									"//   header: {\r",
									"//     \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
									"//     \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
									"//   },\r",
									"//   body: {\r",
									"//     mode: 'urlencoded',\r",
									"//     urlencoded: [\r",
									"//         {key: \"grant_type\", value: \"client_credentials\"}\r",
									"//     ]}\r",
									"// };\r",
									"// pm.sendRequest(postRequest, function (err, res) {\r",
									"//      if (err) { \r",
									"//             console.log(err);\r",
									"//      }\r",
									"//     var responseJson = res.json();\r",
									"//     console.log(responseJson);\r",
									"//     pm.environment.set('idToken', responseJson['access_token']);\r",
									"// })\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJraWQiOiJzZEoxTFREbUJRbWg5K0FrYXFUSVwvaTJmNm9QMnlNOWc0WDM2V2VYUTFKOD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiIyMzdjaXNvMW9ia2g1aDZoN2NhMmoyZHAwYSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiZGV0ZWN0YWZsb3dfYXBpXC9kZXRlY3RhZmxvd19hcGkiLCJhdXRoX3RpbWUiOjE3MjM2NDcxOTMsImlzcyI6Imh0dHBzOlwvXC9jb2duaXRvLWlkcC5zYS1lYXN0LTEuYW1hem9uYXdzLmNvbVwvc2EtZWFzdC0xX2Q2d0lycW9udyIsImV4cCI6MTcyMzY0NzQ5MywiaWF0IjoxNzIzNjQ3MTkzLCJ2ZXJzaW9uIjoyLCJqdGkiOiJlNjFjOTAwNC0yYzc4LTRjOWYtYWFjZC04YzhlZjIzODhhYTkiLCJjbGllbnRfaWQiOiIyMzdjaXNvMW9ia2g1aDZoN2NhMmoyZHAwYSJ9.A72gTGL61xua1Oif5oOakaOEcQ9gCj1uJbjUbEQ45FGpFxozxcoH5xvan8XPrbPxiODfBpgn8oinfASkUCF6E4mv8NQveOFRJusCOmWdpUYsImGsph1UW3OKHUCrbg3w4wxva99awjOKZQ4mRpeW1kCLiBMiHdcbf6BPy_2TiR-VokyzX19hvcmn-hjVIfsh3sZxl3cjvNNKsyuvhd1CMqTVaXP0TWOfqyi7QhXnezcbOzsacN1vOCLDdZ2xqlJFQoY_Sl7dwnmE1dWrjuSu1hAAd_4i8NhDN4E5GsvcqRdzhWuZ2sXDrb0B3OxtFyxBekBceAmvEt0O5H9jRag2lA",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localHost}}/participantes",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"participantes"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - busca participantes ativos por aplicacao e tem sso ou não",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJraWQiOiJzZEoxTFREbUJRbWg5K0FrYXFUSVwvaTJmNm9QMnlNOWc0WDM2V2VYUTFKOD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiIyMzdjaXNvMW9ia2g1aDZoN2NhMmoyZHAwYSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiZGV0ZWN0YWZsb3dfYXBpXC9kZXRlY3RhZmxvd19hcGkiLCJhdXRoX3RpbWUiOjE3MjM1Nzc4MjYsImlzcyI6Imh0dHBzOlwvXC9jb2duaXRvLWlkcC5zYS1lYXN0LTEuYW1hem9uYXdzLmNvbVwvc2EtZWFzdC0xX2Q2d0lycW9udyIsImV4cCI6MTcyMzU3ODEyNiwiaWF0IjoxNzIzNTc3ODI2LCJ2ZXJzaW9uIjoyLCJqdGkiOiJmOTU5OGRkNy1jYjNmLTRmM2QtYTBkYy1iZjBjYjU5M2VkNTUiLCJjbGllbnRfaWQiOiIyMzdjaXNvMW9ia2g1aDZoN2NhMmoyZHAwYSJ9.cV31J5dW5scISRLnAwHH4i9wbMaqPgu59rCqC7pCJ4WAXRyJAe3PJo0W52ABTNbg64Qk6U6jxUDYdHoqEWpq2YU6KVRgb-h7lvBeYOl-idCug0MpdoV3wD583Z0liABq66YOhIttYRT4hNjCLunqEpCkBSVhH7m8riCWUuilvOGuMAD67XxUBcj3H7-6yrLZYTyImJ5nlu_7iLtmWcJ775PBhQ31S1yHvJT1YAXSI90b3w57DVtmF0qf_B5V2XolmHlCsCMqJyvPkzOJjG8y8h0O_qunDPyPs2r0O1P84Jd4qRrnFbqlDrAIlv4qYiPjD-0RngVh8gvRh6KT8oQajA",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localHost}}/participantes?aplicacao=RECUPERACAO_E_NUCLEO_FRAUDES&temSso=true",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"participantes"
							],
							"query": [
								{
									"key": "aplicacao",
									"value": "RECUPERACAO_E_NUCLEO_FRAUDES"
								},
								{
									"key": "temSso",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - configurar webhook",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJraWQiOiJzZEoxTFREbUJRbWg5K0FrYXFUSVwvaTJmNm9QMnlNOWc0WDM2V2VYUTFKOD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiIzMmY5NzBhOC0yMzU5LTQ0NDQtODA1NS01ZTRkYjZhYWQyYjkiLCJjb2duaXRvOmdyb3VwcyI6WyJjaXBtYXN0ZXIiXSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnNhLWVhc3QtMS5hbWF6b25hd3MuY29tXC9zYS1lYXN0LTFfZDZ3SXJxb253IiwiY2xpZW50X2lkIjoiNWR0NWVrZGVmcjZmN3BuOTVhOG8ybXIycG8iLCJvcmlnaW5fanRpIjoiZDgyNzdhMTgtZWM0OC00YzQ0LTlkZjAtM2Y3ZGRhODNmYjc2IiwiZXZlbnRfaWQiOiI1ZGU2MTljOC05Mzc0LTQyYTUtYTEwMC1mMzA1ODVlYWYzMmMiLCJ0b2tlbl91c2UiOiJhY2Nlc3MiLCJzY29wZSI6ImF3cy5jb2duaXRvLnNpZ25pbi51c2VyLmFkbWluIiwiYXV0aF90aW1lIjoxNzI4MzI5ODAzLCJleHAiOjE3Mjg0MTYyMDMsImlhdCI6MTcyODMyOTgwMywianRpIjoiMDZiMDYyMTQtNGFkYi00YWE0LTkyZWYtMGZiYjlhOTYyZTY1IiwidXNlcm5hbWUiOiIzMmY5NzBhOC0yMzU5LTQ0NDQtODA1NS01ZTRkYjZhYWQyYjkifQ.cR5f6s5MWs8kZZB6Wzad2zNxo-6IlMmdv2N0P8IhVwElbudv6MKZh-JzKEHWjla4W93fLvN9prXGioy7dYbnge5Al79ueom8t1CRC_d62mRy25mpfzuvBvVH3DSD7KoRfTpOUy_DIwJ-JhHMXpoiYPQ9T1uHwP1IgIh5VKgVW_NkEVwbJtlZHAStPb7tSl02VC4DZVp_D7_Gl1rw1EdSLUfMtiKVKyaCZPjxLMcmBLUSsIiqzf1RSaFj424LMzgagOZbXW5tx0frE74q1tDdO1ya3DIYIK1A4CKD1-rmEv0p_hOxl9DHcKew9aDzn5kX0H85qwihwP__1gfxNRoNmg",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"certificado\": \"-----BEGIN CERTIFICATE-----\\nMIIDzDCCArQCFHAfxCYShGe+vq3K+VCTxckSntaXMA0GCSqGSIb3DQEBCwUAMIGZ\\nMQswCQYDVQQGEwJCUjERMA8GA1UECAwIU0FPIFBVTE8xEjAQBgNVBAcMCVNBTyBQ\\nQVVMTzEVMBMGA1UECgwMTEFCIERPIEJSVU5PMREwDwYDVQQLDAhdVEVTVCBDQTES\\nMBAGA1UEAwwJbG9jYWxob3N0MSUwIwYJKoZIhvcNAQkBFhZhZG1pbkB0ZXN0Y2Eu\\nbG9jYWxob3N0MB4XDTI0MDkzMDExMDUwOFoXDTI1MDkzMDExMDUwOFowgaoxCzAJ\\nBgNVBAYTAkJSMRIwEAYDVQQIDAlTQU8gUEFVTE8xEjAQBgNVBAcMCVNBTyBQQVVM\\nTzEVMBMGA1UECgwMTEFCIERPIEJSVU5PMRgwFgYDVQQLDA9URVNUIENMSUVOVCBD\\nU1IxEjAQBgNVBAMMCWxvY2FsaG9zdDEuMCwGCSqGSIb3DQEJARYfYWRtaW5AdGVz\\ndC1jbGllbnQtY3NyLmxvY2FsaG9zdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC\\nAQoCggEBAKLmsIzUj77q2jRkC6cnVJdesKmzZ1BESVDEJQbHPMzACnnc7RArjpXz\\nbQ5Evmis6D9DOVUHc4akjNzsTgzuaLwAlM5C4tlLkIQQtFkfLf27FYe0lHFbZpJ5\\nTOHLgsVVV90XA/tfbcn8HOpeiHPc/GLjjV8Zn1WOZsRSzv+mPNo4LYYgUY01xdby\\n29z/RTqatBSik7thgbsO6PDy+aUsztm2U5/jWieLiZBBjTckNEllI+KlIRRieSkE\\nfpFjiwKbB1nFL5iQkZVQIhkM+QEokYEOa0OxH7ppoEXxbhNoHWsexfHQmf+hPv2u\\n45/lGAjKi5Vqz5FWmj4+wlSjyw+yR78CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEA\\nLypK+IVhNLMQU+Ex4GHvVDkeBs4Dgmkzmr44Q8Qj6w/271N86yAD/RO+ftcRs1e9\\nfLCtTjFnhK3lzhYSuyztNAPJ0YIKvX0hbDnEeUgYvdoB1Ocy1iu4airLtAJTN/3j\\nT+fn4pAFTeUf8RswYamPt41y62Y/7Ldz0i+/ok3zGkh+M56U5CnCPCT7kkalbGov\\nEslnsGI0dzN8oh2OU2TCq4mfCoLR/Z4ZYWWBG286i2jLu5OPR/jw4GWL0tv85uhn\\n3AIqFLH/zAtWi41sZI0pMNkzh3EJ4gHLmWOK6VVldB19+Qbm0mPEjDAeLVzK5zQi\\nyGyJNWUgnyNuia1wDsLkiw==\\n-----END CERTIFICATE-----\",\n    \"chavePrivada\": \"-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCi5rCM1I++6to0\\nZAunJ1SXXrCps2dQRElQxCUGxzzMwAp53O0QK46V820ORL5orOg/QzlVB3OGpIzc\\n7E4M7mi8AJTOQuLZS5CEELRZHy39uxWHtJRxW2aSeUzhy4LFVVfdFwP7X23J/Bzq\\nXohz3Pxi441fGZ9VjmbEUs7/pjzaOC2GIFGNNcXW8tvc/0U6mrQUopO7YYG7Dujw\\n8vmlLM7ZtlOf41oni4mQQY03JDRJZSPipSEUYnkpBH6RY4sCmwdZxS+YkJGVUCIZ\\nDPkBKJGBDmtDsR+6aaBF8W4TaB1rHsXx0Jn/oT79ruOf5RgIyouVas+RVpo+PsJU\\no8sPske/AgMBAAECggEAB7IONRj1kXdWx5LSWhspi90VS28GOmx/ailZ9nADF0kb\\nNZaSPGlSWxMc28ezlw5UCmkKlFG9y2aKoQUoysOYfwkn/nZ6cPl44kRHwM4QRiRI\\naBjHynMe7Vx9nU0X6GqXtAIaVg20Cg627vt4RsDxy1okm5GCTXBkunGPBdS8mzJo\\n6IWGH7+3+GRaKju8edt/+PhRdp7sdBvIy5j4cmkZKSR1u/HJSQsyD5f/8sM4eLCT\\nWvozEYQA0yo9cqeY7jbpDcdVB0yqhI9sHtcW4irDvW3mBejnpefubiu5rBNWhW0D\\nWKJlqxRVUJQRv4RR+lvJC9i//KNtY505bTm1MY0BwQKBgQDOOR3TXtgxDB94gq3F\\nXP3SZX1ExLwEG6oU/Bu8jDHOTI9vVh+NCJxKSpCOKcNYg1dL21kc2CUDNi/OaM5U\\nUumBHk3HhdfMWOteL+UAOG2LeH6uEqu1npQvbTTibQ4w6Rz5p4HSihJrwTihaCtr\\nO/EQ89rB1BX2XthX8VS05I0FYwKBgQDKOKIGrOPjgGFmHaJPHR5iTor6YR2hF8RW\\n+/ikAwXzzDDoOURcbpr66D/q+pgoLyVSxgLAdItS9TkvbEzQVb4nQBCkYfYjupRW\\nPuKz4mSKUTDb9481SYMOcLP1gY33sK5ipR6hTQp+KICmeAzmdbd2B/JMzC9GBOOu\\n+zHH151g9QKBgE2HD31tRJ17z0EA788o3IuCeAuoYn6w38ov1UWW9wp1od7bY9Uj\\njY4oZhvr+3KFPgZYmjHL2G5SqrpQkHEHEp3mBJuj57L9Is8v9kmU7SnnzMgoYMFQ\\nsqj5x03wbctZd/krThUWr0IvS9jyTpBr4n7bDjycPP14PqEhKxUubw29AoGAVs3g\\nn0TvveSJ6q+l0JgLRt+4QKoXceMl4MDghmbV00U/aS/L7HF+DV5Msa1IS1eRiep9\\nm+drNv0UwwqWHofvzCFwA2AZrFSXAD6WSelQhx86/fFSg+k+XKB8X1JxgnVRJf8D\\nGvJbIrR4JP07bGHzkrLui5DKaiAHLEGfqM0hPVECgYEArRvPOWr+5ySF8SbMPHyG\\nmnYDr3MmOSJyWypAMrECdWtasjLmOQG7pdhrML3Qfeg2NXf6BF6yI03mRjZ341TO\\nZ2TRoQZOwIt+ptudcgkq9sXWZG8aKmhloJfYJAgM282JSSNyJ5S1pcyQYwa0kjwG\\n7jTQW9gU4jTNnPYrfjbiAcY=\\n-----END PRIVATE KEY-----\",\n    \"urlWebhook\": \"https://sirv-api.cip-sirv-hml.cip-cloud.local8443/api/v1/webhook\",\n    \"autoridadeCertificadora\": \"-----BEGIN CERTIFICATE-----\\nMIIEFTCCAv2gAwIBAgIUDnfzikTu39e5T0sF+ZBiqHrYITowDQYJKoZIhvcNAQEL\\nBQAwgZkxCzAJBgNVBAYTAkJSMREwDwYDVQQIDAhTQU8gUFVMTzESMBAGA1UEBwwJ\\nU0FPIFBBVUxPMRUwEwYDVQQKDAxMQUIgRE8gQlJVTk8xETAPBgNVBAsMCF1URVNU\\nIENBMRIwEAYDVQQDDAlsb2NhbGhvc3QxJTAjBgkqhkiG9w0BCQEWFmFkbWluQHRl\\nc3RjYS5sb2NhbGhvc3QwHhcNMjQwOTMwMTEwMjU0WhcNMjUwOTMwMTEwMjU0WjCB\\nmTELMAkGA1UEBhMCQlIxETAPBgNVBAgMCFNBTyBQVUxPMRIwEAYDVQQHDAlTQU8g\\nUEFVTE8xFTATBgNVBAoMDExBQiBETyBCUlVOTzERMA8GA1UECwwIXVRFU1QgQ0Ex\\nEjAQBgNVBAMMCWxvY2FsaG9zdDElMCMGCSqGSIb3DQEJARYWYWRtaW5AdGVzdGNh\\nLmxvY2FsaG9zdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJD2idYe\\nE4kRtw8gvnucovWwKbM7GrNUxIhu5SbgqFAXe7YPoqRrEARAmltaXPrd1dD10oud\\na10kKz4qb9nQcVsO953ANlDA+qw8i07eNzqIL8OKNsF85yKCaqA55LBZTgZY8kRZ\\nmHGoESUq9xKDigJOEa3znnVY3NbFQ1V8486gtUMMPpTNyyvrr8SW0IXxfAiD0O0J\\nZCY0yVErFyRP71efizGkc7pl2vXVztTr+bGZm9oehri7OSAK8thBK9xxC2gjZlRa\\n6M5eQY5Ph2o0Qps5JSF86CI585/1kZJ2yd7GhpGphQbgypHMF3VwJtOSD2IUPdKN\\nbLGWU4wRpu5bOeECAwEAAaNTMFEwHQYDVR0OBBYEFHYqxxGawQlWB7AuGJO6Ky4u\\n3DIcMB8GA1UdIwQYMBaAFHYqxxGawQlWB7AuGJO6Ky4u3DIcMA8GA1UdEwEB/wQF\\nMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAH/8VcLYQV++0jepB0Tv8lWJ+RdYU/S4\\nuxmiJNhrK5Znb3s6ITAv/qdbYj7KqPvR6DO+kckPZZehrorptm7nDAZQ0kvF6ikD\\nsM9KrnIlxe0RYLSrtZlQL4APdU5PnXCBhX/pcMYGs2y6sYm5P2dYPr4nIcpY3yC/\\nOYb4lH7DIoCC51zUFhSv20dZ/rpDuXcrnCesfED8ZlNo2B6rEl9nWzw4pBbVYZlz\\nQBX1E8STh3d1pb44s2bXH1ifvnYFCjfuc3M2Mec7rXrifbE0uHbq7NL2kxFhp0Ig\\nWNkYC3jK/yEsE8V+cQ7xEtUN/7Gzn9y41yno6A44tS8hvi/BoJ1Ii8w=\\n-----END CERTIFICATE-----\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{hintHost}}/participantes/622a1a7fff71f049b1479f64/configurar-webhook   ",
							"host": [
								"{{hintHost}}"
							],
							"path": [
								"participantes",
								"622a1a7fff71f049b1479f64",
								"configurar-webhook   "
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - LOGS  Servidor cliente webhook",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:8443/api/v1/webhook/logs",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "8443",
							"path": [
								"api",
								"v1",
								"webhook",
								"logs"
							]
						}
					},
					"response": []
				},
				{
					"name": "HINT - LOGS Servidor cliente webhook",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://detectaflow-simulacao-hook-hint-94f70ec3b81d238b.elb.sa-east-1.amazonaws.com/api/v1/webhook/logs",
							"protocol": "https",
							"host": [
								"detectaflow-simulacao-hook-hint-94f70ec3b81d238b",
								"elb",
								"sa-east-1",
								"amazonaws",
								"com"
							],
							"path": [
								"api",
								"v1",
								"webhook",
								"logs"
							]
						}
					},
					"response": []
				},
				{
					"name": "HINT - POST Servidor webhook",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://sirv-api.cip-sirv-hml.cip-cloud.local8443/api/v1/webhook/enable",
							"protocol": "https",
							"host": [
								"sirv-api",
								"cip-sirv-hml",
								"cip-cloud",
								"local8443"
							],
							"path": [
								"api",
								"v1",
								"webhook",
								"enable"
							]
						}
					},
					"response": []
				},
				{
					"name": "https://detectaflow-simulacao-hook-hint-94f70ec3b81d238b.elb.sa-east-1.amazonaws.com/api/v1/webhook/logs",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://detectaflow-simulacao-hook-hint-94f70ec3b81d238b.elb.sa-east-1.amazonaws.com/api/v1/webhook/logs",
							"protocol": "https",
							"host": [
								"detectaflow-simulacao-hook-hint-94f70ec3b81d238b",
								"elb",
								"sa-east-1",
								"amazonaws",
								"com"
							],
							"path": [
								"api",
								"v1",
								"webhook",
								"logs"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOCAL - Buscar parcerias",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJraWQiOiJzZEoxTFREbUJRbWg5K0FrYXFUSVwvaTJmNm9QMnlNOWc0WDM2V2VYUTFKOD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiIzMmY5NzBhOC0yMzU5LTQ0NDQtODA1NS01ZTRkYjZhYWQyYjkiLCJjb2duaXRvOmdyb3VwcyI6WyJjaXBtYXN0ZXIiXSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnNhLWVhc3QtMS5hbWF6b25hd3MuY29tXC9zYS1lYXN0LTFfZDZ3SXJxb253IiwiY2xpZW50X2lkIjoiNWR0NWVrZGVmcjZmN3BuOTVhOG8ybXIycG8iLCJvcmlnaW5fanRpIjoiMTQxMTM2MjEtY2FjYS00ZGM2LTk5NzItMzRjM2Q4MGFlNTg2IiwiZXZlbnRfaWQiOiI5ZGViNWQxNi0wZDIxLTRhZjctODVjMS0xY2E5ZWM0ZWViODQiLCJ0b2tlbl91c2UiOiJhY2Nlc3MiLCJzY29wZSI6ImF3cy5jb2duaXRvLnNpZ25pbi51c2VyLmFkbWluIiwiYXV0aF90aW1lIjoxNzMwODE2MjYwLCJleHAiOjE3MzA5MDI2NjAsImlhdCI6MTczMDgxNjI2MCwianRpIjoiY2IyZTJmY2EtYTM2MC00NzM3LWJiYTgtYjYzMGJlZTA2YTc4IiwidXNlcm5hbWUiOiIzMmY5NzBhOC0yMzU5LTQ0NDQtODA1NS01ZTRkYjZhYWQyYjkifQ.fXUOG2MXYHrKwb8Rd5RzVaydKtBgZuLuVgAcP1IAbuUJyhXgYjdiGM1Fu2ZTnV-9n2FsuYQOrDlqDeZC6dyntjaHEo4ozCjXGI9X5ns70bNfFC6x37AN9mwEkugSWnMyzq8qiR4DIWwLak2JuXJtXXFgE6CkpvvXyJrrT6ggwb9T-nyGfsseKggp93p_1GowGE6Q0ekvxAteA7Tuc1kMIOomO_mrK61ZHLFnXBgvxk9judY0Rnlv1k4UbGyHeeipQnFvDTlSwqVlaOQEDWTklNVIPH_25DCsQNrofbRJ8emlP2rcwuJsr2uib5j6wD-AO4nKai9JIli2-tdoon7Fsg",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localHost}}/parcerias",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"parcerias"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "LOCAL - Criar requisição",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let body = pm.response.json();",
							"pm.environment.set(\"idRequisicao\", body.id);",
							"pm.environment.set(\"idTransacao\", body.transacoes[0].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"confirmacaoRequisicaoSemAnexos\":false,\n   \"clienteReclamante\":{\n      \"nome\":\"Carol Teste POST 1 transação Erro Operacional TED, com 1 anexo\",\n      \"cpfCnpj\":\"36871804846\",\n      \"dataReclamacao\":\"2024-01-01T11:00:00.000Z\",\n      \"numeroProtocolo\":\"844619,9\",\n      \"uf\":\"SP\"\n   },\n   \"transacoes\":[\n      {\n         \"canalAtendimento\":\"3\",\n         \"produto\":\"2\",\n         \"condicaoTransacao\":{\n            \"comAcaoJudicial\":6785\n         },\n         \"tipoRequisicao\":\"6245f6133b988e4ac7c4ec97\",\n         \"tipoEnvolvido\":\"vitima\",\n         \"motivo\":\"99\",\n         \"ted\":{\n            \"valorTransacao\":1000,\n            \"dataHoraTransacao\":\"2024-01-01T11:00:00.000Z\",\n            \"numeroDocumento\":\"654897064509874901568223\",\n            \"descricaoCaso\":\"Transação Erro Operacional, TED\"\n         },\n         \"clienteDestinatario\":{\n            \"nome\":\"José Silva\",\n            \"cpfCnpj\":\"74573195068\",\n            \"tipoConta\":\"6256ca8b969cdd834fe89c2d\",\n            \"agencia\":\"8811\",\n            \"numeroConta\":\"006686\"\n         }\n      }\n   ],\n   \"instituicaoDestinatariaIspb\":\"04391007\",\n   \"instituicaoRemetenteIspb\":\"11111111\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/requisicoes",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"requisicoes"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOCAL - Buscar numero ispb usuario logado",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJraWQiOiJzZEoxTFREbUJRbWg5K0FrYXFUSVwvaTJmNm9QMnlNOWc0WDM2V2VYUTFKOD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJhYjUwZGYzNy02NjRmLTQ0Y2QtOTFlNy1jNDk5YTU4ZWUwNDIiLCJjb2duaXRvOmdyb3VwcyI6WyJtYXN0ZXIiXSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnNhLWVhc3QtMS5hbWF6b25hd3MuY29tXC9zYS1lYXN0LTFfZDZ3SXJxb253IiwiY2xpZW50X2lkIjoiNWR0NWVrZGVmcjZmN3BuOTVhOG8ybXIycG8iLCJvcmlnaW5fanRpIjoiOTg0OWQzOTgtMDM3OC00YmYwLWJlM2UtMmRmYmRlODQwZDE0IiwiZXZlbnRfaWQiOiJiMzg5NWYyMy05Mzk4LTRhOWUtODc4ZC02N2MwMzE5NTY0NGYiLCJ0b2tlbl91c2UiOiJhY2Nlc3MiLCJzY29wZSI6ImF3cy5jb2duaXRvLnNpZ25pbi51c2VyLmFkbWluIiwiYXV0aF90aW1lIjoxNzE2MzgyMjY2LCJleHAiOjE3MTY0Njg2NjYsImlhdCI6MTcxNjM4MjI2NiwianRpIjoiN2YxZGFjNTUtYWJjMi00YzA1LWEyYTktNzJlZmNkNTM5ZGE4IiwidXNlcm5hbWUiOiJhYjUwZGYzNy02NjRmLTQ0Y2QtOTFlNy1jNDk5YTU4ZWUwNDIifQ.GfWDH5lYl3xQrOMExgcj9k5G5cySFYFw0AI7YEoNSd1JANlMwx4PPSlHgxMHNJ7WdZWhPDmga_pRu7K7iLU1bCtw0XmpxrUKsGEiPbi8X6ut2ogJoYjafYmgBXettFY8UwxmLS33FZpSyvP_V-bYg3oXth_ZSm2KEim6B_OPbIUkPZVL4P-WwQHUWyzfp5XMnxCMC5U_XxeBRBqUS-oy5a0mkDKKleOWIK1ZtDUEzy7kpuf-6I7sW7rFJCUOiHAEmPWZBO812LINHrpUpoHILGkNWmrpDl-rMieZYH1vdCEK4G_IPP2FStNVURvz6QRZyXJ-_W9n_E3bZ3Gz1vsuJw",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer eyJraWQiOiJzZEoxTFREbUJRbWg5K0FrYXFUSVwvaTJmNm9QMnlNOWc0WDM2V2VYUTFKOD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI3MjhhMmI3MS1lNWVhLTQ3ODMtYWRhMC0yMzc4NDNjMDhmNmEiLCJjb2duaXRvOmdyb3VwcyI6WyJtYXN0ZXIiXSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnNhLWVhc3QtMS5hbWF6b25hd3MuY29tXC9zYS1lYXN0LTFfZDZ3SXJxb253IiwiY2xpZW50X2lkIjoiM2FuYzZ2cDRmcWFiYTE1dXBiMzZvNXExYyIsIm9yaWdpbl9qdGkiOiI5MGQyOTg5NS03MTM5LTQ3NDQtYWFiYy01ZWM2NjRlMGMwODIiLCJldmVudF9pZCI6Ijg3OWVjMzllLWZhOGMtNGY5Yy04MjRjLWI3ZWExNmJiZjExYSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTI2MDEzNzYsImV4cCI6MTcxMjYwMTY3NSwiaWF0IjoxNzEyNjAxMzc2LCJqdGkiOiJiOGNmOTRmOC03YWNlLTRjZGItYjAyMS0xOWNiMzg4NWY2ZDciLCJ1c2VybmFtZSI6IjcyOGEyYjcxLWU1ZWEtNDc4My1hZGEwLTIzNzg0M2MwOGY2YSJ9.AGSci5XKv73srhe9qog0owodh1zb7k1HI6L6sMc5qOC_JTMciY3AtCqDctKJvQja5c-Pyw5Bz5dQIpdneupOxLSdIqi4Mlk8NgINJ8NjlSwDnoquu5hJ0j87RnCK0B3PkQ1h7dAHPzP_oghi-Js_4WjM1MPvjxDNnCfjza7EfyTx6E-jN5dD_bcOOYc5L3qLxLzPzTIQvtqZY3yeBOLQ23V-DicIZGdTFih2FIXdDc-vTNITvfzVEW-CIlYSaWAIhETlMr_VL2p0SinTffsw8I8Rwy2j9rHPpIUaNsHGamxbAUySRaB8UqrXDcjnybBHX7ERbYgyR77X8KIoV8Cmcg"
					}
				],
				"url": {
					"raw": "http://localhost:8081/usuario-logado",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"usuario-logado"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOCAL - Criar acess token para usuário api",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "14er0irs7vmkkk1c68ra50b7knuuokrsv450qj45skcvb36iq7fh",
							"type": "string"
						},
						{
							"key": "username",
							"value": "2jjq32nns6ru76b2ujqlnecifo",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Cookie",
						"value": "XSRF-TOKEN=b4c42f00-0636-40d4-a863-22ca75c1942d"
					},
					{
						"key": "Authorization",
						"value": "Basic NzRrbTY2aWtlamQ2c2Y0NWQyOTdpMDg4aWw6MWtidG5yMXQwaGIwbGxmZmNiZGY0Y29mcmVqdnBqaXBzM2o3c3YzOWV1MmZqbHJyaWpkcA=="
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token",
					"protocol": "https",
					"host": [
						"detectaflow-hint",
						"auth",
						"sa-east-1",
						"amazoncognito",
						"com"
					],
					"path": [
						"oauth2",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOCAL - Abrir Requisição ErroOperacional - PIX",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let body = pm.response.json();",
							"pm.environment.set(\"idRequisicao\", body.id);",
							"",
							"pm.test(\"Status code é 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"/*",
							"    Instituição destinatária:",
							"        CIP: 622a1a7fff71f049b1479f64 - ISPB 04391007",
							"        BB:  624c8bdb57f0680c7a2c9189 - ISPB 12345678",
							"        Automação web: 62c333266f776e50104d3145 - ISPB 12345699",
							"        CEF - Maikon: 63778e7ad4410e3dcf6e7df6 - ISPB 00360305",
							"        Banco Quod RUFRA S/A: 65a816e1a42cd202b0b6f6d5 - ISPB 46610330",
							"        IF não integrada ao Detecta: ISPB 03844699",
							"    ",
							"    Tipo de chave PIX:",
							"        E-mail: 643fe72d571b33faef4a678b",
							"        CPF: 643fea4706c46ae442b8ee78",
							"        CNPJ: 643ff75c3b6e08605174d809",
							"        Número de telefone celular: 643ff76ac4ad16fbdb383f56",
							"        Chave aleatória: 643ff8692db9e78b62367e11",
							"    ",
							"    Permissão: CRIAR_REQUISICAO",
							"*/"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// const postRequest = {\r",
							"//   url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
							"//   method: 'POST',\r",
							"//   timeout: 0,\r",
							"//   header: {\r",
							"//     \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
							"//     \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
							"//   },\r",
							"//   body: {\r",
							"//     mode: 'urlencoded',\r",
							"//     urlencoded: [\r",
							"//         {key: \"grant_type\", value: \"client_credentials\"}\r",
							"//     ]}\r",
							"// };\r",
							"// pm.sendRequest(postRequest, function (err, res) {\r",
							"//      if (err) { \r",
							"//             console.log(err);\r",
							"//      }\r",
							"//     var responseJson = res.json();\r",
							"//     console.log(responseJson);\r",
							"//     pm.environment.set('idToken', responseJson['access_token']);\r",
							"// })\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJraWQiOiJzZEoxTFREbUJRbWg5K0FrYXFUSVwvaTJmNm9QMnlNOWc0WDM2V2VYUTFKOD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJhYjUwZGYzNy02NjRmLTQ0Y2QtOTFlNy1jNDk5YTU4ZWUwNDIiLCJjb2duaXRvOmdyb3VwcyI6WyJtYXN0ZXIiXSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnNhLWVhc3QtMS5hbWF6b25hd3MuY29tXC9zYS1lYXN0LTFfZDZ3SXJxb253IiwiY2xpZW50X2lkIjoiOXZraXR1MTU5c28yc3Izbm9tcDNrcWg3cyIsIm9yaWdpbl9qdGkiOiJlZjhiNzU2MS0yMjFjLTQxNmItODBhZS03ZTZhNjU3ZDFiNDYiLCJldmVudF9pZCI6IjI4MWFmNzJhLWIzYTgtNDIwMi05MmQwLTRjMGU2OWQ1NDRkYyIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3MTU3MTI2MjEsImV4cCI6MTcxNTcxMjkyMCwiaWF0IjoxNzE1NzEyNjIxLCJqdGkiOiI1MjRkYzRiNC1hODgxLTQ0YTUtYWE0My1iNGJjODAyY2E2YmQiLCJ1c2VybmFtZSI6ImFiNTBkZjM3LTY2NGYtNDRjZC05MWU3LWM0OTlhNThlZTA0MiJ9.WWWgQ1m9g67Yfa9uYihbIcUdL5-PPkxpQPZsB1KwMsVmFs1X_OPy6KWGzqSFyI0VfqPcqUW7kRx2XjYgypYMk_E0TJ8LhvfkOI6yyH_dJtMLjc31RQtBcRBmHZZbMi_qu2kZ_YtpuMYQrpvaCS6YQ4X2XnM97AR97kcThUKl1Cc_FtbQ1E-F3YzIxEIb0Wkec40okLjH70dmgLItMvpvyyOJIl4qmBT2qUdal4hIAxdW8L3-kHEf_WfbfCCcmhU4oWKTNrB0Vd10rcijwrDS7pOwL8FCiziz3LugnmqhcNjc5tAjQjv3rUGtMO4CX6AjMG-7xKQyUBBfgquKbQmy4w",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"confirmacaoRequisicaoSemAnexos\": false,\n    \"clienteReclamante\": {\n        \"nome\": \"Carol Teste POST uma transação Fraude PIX com 1 anexo\",\n        \"cpfCnpj\": \"36871804846\",\n        \"dataReclamacao\": \"2024-01-01T11:00:00.000Z\",\n        \"numeroProtocolo\": \"8446199\",\n        \"uf\": \"SP\"\n    },\n    \"transacoes\": [\n        {\n            \"canalAtendimento\": \"3\",\n            \"produto\": \"2\",\n            \"condicaoTransacao\": {\n                \"comAcaoJudicial\": false\n            },\n            \"tipoRequisicao\": \"62421f444e56a22a7fda004f\",\n            \"motivo\": \"99\",\n            \"tipoEnvolvido\": \"vitima\",\n            \"pix\": {\n                \"valorTransacao\": 1000,\n                \"dataHoraTransacao\": \"2024-01-01T11:00:00.000Z\",\n                \"chave\": \"98409804-8890-4651-0589-740874684684\",\n                \"tipoChave\": \"643ff8692db9e78b62367e11\",\n                \"idTransacao\": \"1E35RK96548774a2001f6g3498c25411\",\n                \"idRelatoInfracao\": \"98567489-2014-3369-9870-426655440000\",\n                \"idSolicitacaoDevolucao\": \"12549863-9658-3658-7485-125980125015\",\n                \"descricaoCaso\": \"Transação Golpe PIX com 1 anexo.\"\n            },\n            \"clienteDestinatario\": {\n                \"nome\": \"José Silva\",\n                \"cpfCnpj\": \"80472435868\",\n                \"tipoConta\": \"6256ca8b969cdd834fe89c2d\",\n                \"agencia\": \"8811\",\n                \"numeroConta\": \"006686\"\n            }\n        }\n    ],\n    \"instituicaoDestinatariaIspb\": \"04391007\",\n    \"instituicaoRemetenteIspb\": \"11111111\",\n    \"idRequisicaoIF\": \"507f191e810c19729de860ecc\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/requisicoes",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"requisicoes"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOCAL - Criar requisição PIX",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let body = pm.response.json();",
							"pm.environment.set(\"idRequisicao\", body.id);",
							"pm.environment.set(\"idTransacao\", body.transacoes[0].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n     \"clienteReclamante\": {\n        \"nome\": \"TESTEEEEEEE\",\n        \"cpfCnpj\": \"40502779802\",\n        \"dataReclamacao\": \"2024-01-01T11:00:00.000Z\",\n        \"numeroProtocolo\": \"12345676HG\",\n        \"uf\": \"SP\"   \n    },\n    \"confirmarLegitimidade\": false,\n    \"confirmacaoRequisicaoSemAnexos\": true,\n    \"transacoes\": [\n        {\n            \"canalAtendimento\": \"3\",\n            \"produto\": \"2\",\n            \"tipoEnvolvido\":\"vitima\",\n            \"condicaoTransacao\": {\n                \"comAcaoJudicial\": false\n            },\n            \"tipoRequisicao\": \"6245f6133b988e4ac7c4ec97\",\n            \"pix\": {\n                \"valorTransacao\": 200.33,\n                \"dataHoraTransacao\": \"2022-12-15T03:30:00.000Z\",                \n                \"descricaoCaso\": \"Exemplo de descrição do caso com mais de 20 caracteres\",\n                \"idTransacao\": \"E0000000020230320164418618939533\",\n                \"chave\": \"6f81ca13-dfab-11ed-bea5-0242ac120002\",\n                \"tipoChave\": \"643ff8692db9e78b62367e11\",\n                \"idRelatoInfracao\": \"6f81ca13-dfab-11ed-bea5-0242ac120002\",\n                \"idSolicitacaoDevolucao\": \"6f81ca31-dfab-11ed-b5e5-0242ac120002\"\n            },\n            \"clienteDestinatario\": {\n                \"nome\": \"João Paulo\",\n                \"cpfCnpj\": \"10692212019\",\n                \"tipoConta\": \"6256ca90153951882045db82\",\n                \"numeroConta\": \"1111\",\n                \"agencia\": \"33333\"\n            },\n            \"motivo\": 99\n        },\n        {\n            \"canalAtendimento\": \"3\",\n            \"produto\": \"2\",\n            \"tipoEnvolvido\":\"vitima\",\n            \"condicaoTransacao\": {\n                \"comAcaoJudicial\": false\n            },\n            \"tipoRequisicao\": \"6245f6133b988e4ac7c4ec97\",\n            \"pix\": {\n                \"valorTransacao\": 200,\n                \"dataHoraTransacao\": \"2022-12-15T03:30:00.000Z\",                \n                \"descricaoCaso\": \"Exemplo de descrição do caso com mais de 20 caracteres\",\n                \"idTransacao\": \"E0000000020230320164418618939533\",\n                \"chave\": \"6f81ca13-dfab-11ed-bea5-0242ac120002\",\n                \"tipoChave\": \"643ff8692db9e78b62367e11\",\n                \"idRelatoInfracao\": \"6f81ca13-dfab-11ed-bea5-0242ac120002\",\n                \"idSolicitacaoDevolucao\": \"6f81ca31-dfab-11ed-b5e5-0242ac120002\"\n            },\n            \"clienteDestinatario\": {\n                \"nome\": \"João Paulo\",\n                \"cpfCnpj\": \"10692212019\",\n                \"tipoConta\": \"6256ca90153951882045db82\",\n                \"numeroConta\": \"1111\",\n                \"agencia\": \"33333\"\n            },\n            \"motivo\": 99\n        },\n        {\n            \"canalAtendimento\": \"3\",\n            \"produto\": \"2\",\n            \"tipoEnvolvido\":\"vitima\",\n            \"condicaoTransacao\": {\n                \"comAcaoJudicial\": false\n            },\n            \"tipoRequisicao\": \"6245f6133b988e4ac7c4ec97\",\n            \"pix\": {\n                \"valorTransacao\": 200,\n                \"dataHoraTransacao\": \"2022-12-15T03:30:00.000Z\",                \n                \"descricaoCaso\": \"Exemplo de descrição do caso com mais de 20 caracteres\",\n                \"idTransacao\": \"E0000000020230320164418618939533\",\n                \"chave\": \"6f81ca13-dfab-11ed-bea5-0242ac120002\",\n                \"tipoChave\": \"643ff8692db9e78b62367e11\",\n                \"idRelatoInfracao\": \"6f81ca13-dfab-11ed-bea5-0242ac120002\",\n                \"idSolicitacaoDevolucao\": \"6f81ca31-dfab-11ed-b5e5-0242ac120002\"\n            },\n            \"clienteDestinatario\": {\n                \"nome\": \"João Paulo\",\n                \"cpfCnpj\": \"10692212019\",\n                \"tipoConta\": \"6256ca90153951882045db82\",\n                \"numeroConta\": \"1111\",\n                \"agencia\": \"33333\"\n            },\n            \"motivo\": 99\n        }\n    ],\n    \"triagem\": false,\n    \"instituicaoDestinatariaIspb\": \"00558456\",\n    \"instituicaoRemetenteIspb\": \"12345679\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/requisicoes",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"requisicoes"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOCAL - Atender Requisição",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let body = pm.response.json();",
							"pm.environment.set(\"idRequisicao\", body.id);",
							"pm.environment.set(\"idTransacao\", body.transacoes[0].id);",
							"/*",
							"    Permissão: ATENDER_REQUISICAO",
							"*/"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// const postRequest = {\r",
							"//   url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
							"//   method: 'POST',\r",
							"//   timeout: 0,\r",
							"//   header: {\r",
							"//     \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
							"//     \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
							"//   },\r",
							"//   body: {\r",
							"//     mode: 'urlencoded',\r",
							"//     urlencoded: [\r",
							"//         {key: \"grant_type\", value: \"client_credentials\"}\r",
							"//     ]}\r",
							"// };\r",
							"// pm.sendRequest(postRequest, function (err, res) {\r",
							"//      if (err) { \r",
							"//             console.log(err);\r",
							"//      }\r",
							"//     var responseJson = res.json();\r",
							"//     console.log(responseJson);\r",
							"//     pm.environment.set('idToken', responseJson['access_token']);\r",
							"// })\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/requisicoes/{{idRequisicao}}/atender",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"requisicoes",
						"{{idRequisicao}}",
						"atender"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOCAL - Atendimento requisição triangulada com DOC",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let body = pm.response.json();",
							"pm.environment.set(\"idRequisicao\", body.atendimentos[0].requisicoes[0].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"clienteReclamante\": {},\n    \"situacaoConta\": \"62c5c5f477d070fcdb0a550c\",\n    \"tipoTriangulada\": \"62c494a079cf93fea3922b4f\",\n    \"requisicoes\": [\n        {\n            \"confirmacaoRequisicaoSemAnexos\": true,\n            \"transacoes\": [\n               {\n            \"canalAtendimento\": \"3\",\n            \"produto\": \"2\",\n            \"condicaoTransacao\": {\n                \"comAcaoJudicial\": false\n            },\n            \"tipoRequisicao\": \"6245f6133b988e4ac7c4ec98\",\n            \"tipoEnvolvido\": \"vitima\",\n            \"motivo\": \"99\",\n            \"doc\": {\n                \"valorTransacao\": 200.33,\n                \"dataHoraTransacao\": \"2024-01-01T11:00:00.000Z\",\n                \"codigoTransacao\": \"564098479802164098409840\",\n                \"dataCompensacao\": \"2024-01-01T11:05:00.000Z\",\n                \"descricaoCaso\": \"Transação Fraude DOC para testes.\"\n            },\n            \"clienteDestinatario\": {\n                \"nome\": \"José Silva\",\n                \"cpfCnpj\": \"80472435868\",\n                \"tipoConta\": \"6256ca8b969cdd834fe89c2d\",\n                \"agencia\": \"8811\",\n                \"numeroConta\": \"006686\"\n            }\n        }\n            ],\n            \"instituicaoDestinataria\": \"622a1a7fff71f049b1479f64\"              \n        }\n    ],    \n    \"bloquearConta\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/requisicoes/{{idRequisicao}}/transacoes/{{idTransacao}}/triangular",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"requisicoes",
						"{{idRequisicao}}",
						"transacoes",
						"{{idTransacao}}",
						"triangular"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOCAL - Atendimento requisição triangulada",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let body = pm.response.json();",
							"pm.environment.set(\"idRequisicao\", body.atendimentos[0].requisicoes[0].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"clienteReclamante\": {},\n    \"situacaoConta\": \"62c5c5f477d070fcdb0a550c\",\n    \"tipoTriangulada\": \"62c494a079cf93fea3922b4f\",\n    \"requisicoes\": [\n        {\n            \"confirmacaoRequisicaoSemAnexos\": true,\n            \"transacoes\": [               \n                {\n                    \"canalAtendimento\": \"3\",\n                    \"produto\": \"2\",\n                    \"condicaoTransacao\": {\n                        \"comAcaoJudicial\": false\n                    },\n                    \"tipoRequisicao\": \"6245f6133b988e4ac7c4ec97\",\n                    \"tipoEnvolvido\": \"vitima\",\n                    \"motivo\": \"99\",\n                    \"pix\": {\n                        \"valorTransacao\": 200.33,\n                        \"dataHoraTransacao\": \"2024-01-01T11:03:00.000Z\",\n                        \"chave\": \"98409804-8890-4651-0589-740874684684\",\n                        \"tipoChave\": \"643ff8692db9e78b62367e11\",\n                        \"idTransacao\": \"1E35RK96548774a2001f6g3498c25411\",\n                        \"idRelatoInfracao\": \"123e4567-e89b-12d3-a456-426655440000\",\n                        \"idSolicitacaoDevolucao\": \"123e4567-e89b-12d3-a456-426655440000\",\n                        \"descricaoCaso\": \"Transação 04 Golpe PIX para testes.\"\n                    },\n                    \"clienteDestinatario\": {\n                        \"nome\": \"Marcos Ramos\",\n                        \"cpfCnpj\": \"38796341068\",\n                        \"tipoConta\": \"6256ca8b969cdd834fe89c2d\",\n                        \"agencia\": \"4455\",\n                        \"numeroConta\": \"774421\"\n                    }\n                }\n            ],\n            \"instituicaoDestinataria\": \"622a1a7fff71f049b1479f64\"\n        }\n    ],\n    \"bloquearConta\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/requisicoes/{{idRequisicao}}/transacoes/{{idTransacao}}/triangular",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"requisicoes",
						"{{idRequisicao}}",
						"transacoes",
						"{{idTransacao}}",
						"triangular"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOCAL - Criar requisição Manual",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let body = pm.response.json();",
							"pm.environment.set(\"idRequisicao\", body.id);",
							"pm.environment.set(\"idTransacao\", body.transacoes[0].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"confirmacaoRequisicaoSemAnexos\": false,\n    \"clienteReclamante\": {\n        \"nome\": \"Carol Teste POST 1 transação Erro Operacional TED com 1 anexo\",\n        \"cpfCnpj\": \"36871804846\",\n        \"dataReclamacao\": \"2024-01-01T11:00:00.000Z\",\n        \"numeroProtocolo\": \"8446199\",\n        \"uf\": \"SP\"\n\n    },\n    \"transacoes\": [\n        {\n            \"canalAtendimento\": \"3\",\n            \"produto\": \"2\",\n            \"condicaoTransacao\": {\n                \"comAcaoJudicial\": false\n            },\n            \"tipoRequisicao\": \"6245f6133b988e4ac7c4ec97\",\n            \"tipoEnvolvido\": \"vitima\",\n            \"motivo\": \"99\",\n            \"ted\": {\n                \"valorTransacao\": 1000,\n                \"dataHoraTransacao\": \"2024-01-01T11:00:00.000Z\",\n                \"numeroDocumento\": \"654897064509874901568223\",\n                \"descricaoCaso\": \"Transação Erro Operacional TED\"\n            },\n            \"clienteDestinatario\": {\n                \"nome\": \"José Silva\",\n                \"cpfCnpj\": \"74573195068\",\n                \"tipoConta\": \"6256ca8b969cdd834fe89c2d\",\n                \"agencia\": \"8811\",\n                \"numeroConta\": \"006686\"\n            }\n        }\n    ],\n    \"instituicaoDestinatariaIspb\": \"03323840\",\n    \"emailInstituicaoDestinatariaNaoCadastrada\":\"jaquecruvinel@hotmail.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/requisicoes",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"requisicoes"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOCAL - Criar requisição INTERNA CORRETA",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();",
							"pm.environment.set(\"requisicaoId\", responseJson.id);",
							"pm.environment.set(\"primeiraTransacaoId\", responseJson.transacoes[0].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"confirmacaoRequisicaoSemAnexos\": false,\n    \"clienteReclamante\": {\n        \"nome\": \"Carol Teste POST 1 transação Erro Operacional TED com 1 anexo\",\n        \"cpfCnpj\": \"36871804846\",\n        \"dataReclamacao\": \"2024-01-01T11:00:00.000Z\",\n        \"numeroProtocolo\": \"8446199\",\n        \"uf\": \"SP\"\n\n    },\n    \"transacoes\": [\n        {\n            \"canalAtendimento\": \"3\",\n            \"produto\": \"2\",\n            \"condicaoTransacao\": {\n                \"comAcaoJudicial\": false\n            },\n            \"tipoRequisicao\": \"6245f6133b988e4ac7c4ec97\",\n            \"tipoEnvolvido\": \"vitima\",\n            \"motivo\": \"99\",\n            \"ted\": {\n                \"valorTransacao\": 1000,\n                \"dataHoraTransacao\": \"2024-01-01T11:00:00.000Z\",\n                \"numeroDocumento\": \"654897064509874901568223\",\n                \"descricaoCaso\": \"Transação Erro Operacional TED\"\n            },\n            \"clienteDestinatario\": {\n                \"nome\": \"José Silva\",\n                \"cpfCnpj\": \"74573195068\",\n                \"tipoConta\": \"6256ca8b969cdd834fe89c2d\",\n                \"agencia\": \"8811\",\n                \"numeroConta\": \"006686\"\n            }\n        }\n    ],\n    \"instituicaoDestinatariaIspb\": \"12345699\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/requisicoes",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"requisicoes"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOCAL - Criar requisição Interna",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();",
							"pm.environment.set(\"requisicaoId\", responseJson.id);",
							"pm.environment.set(\"primeiraTransacaoId\", responseJson.transacoes[0].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJraWQiOiJzZEoxTFREbUJRbWg5K0FrYXFUSVwvaTJmNm9QMnlNOWc0WDM2V2VYUTFKOD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJhYjUwZGYzNy02NjRmLTQ0Y2QtOTFlNy1jNDk5YTU4ZWUwNDIiLCJjb2duaXRvOmdyb3VwcyI6WyJtYXN0ZXIiXSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnNhLWVhc3QtMS5hbWF6b25hd3MuY29tXC9zYS1lYXN0LTFfZDZ3SXJxb253IiwiY2xpZW50X2lkIjoiNWR0NWVrZGVmcjZmN3BuOTVhOG8ybXIycG8iLCJvcmlnaW5fanRpIjoiNzUxOGY3MzktNTE0NC00Mzk0LWEwNmQtNzUzN2FkZjZiMDI5IiwiZXZlbnRfaWQiOiI2MjEyNzk2Yy0xNTA1LTQ1ZDUtYjYxNi04MzQwZTIwOTUyMGIiLCJ0b2tlbl91c2UiOiJhY2Nlc3MiLCJzY29wZSI6ImF3cy5jb2duaXRvLnNpZ25pbi51c2VyLmFkbWluIiwiYXV0aF90aW1lIjoxNzE2MjM5NDc5LCJleHAiOjE3MTYzMjU4NzgsImlhdCI6MTcxNjIzOTQ3OSwianRpIjoiMzcxOTIwNDAtOGU3Mi00ZTI0LWFhZjMtNTUzY2RmZDg0YjUwIiwidXNlcm5hbWUiOiJhYjUwZGYzNy02NjRmLTQ0Y2QtOTFlNy1jNDk5YTU4ZWUwNDIifQ.RDr2eM-5nUWeth5zrtQZqFwCbLQEXqNz6j5yKDnDLrTXtQn-4awVGLD8mSNCWAJ_6YVrWrbm7VtUI1Syxq4PQKwJuukXRwotesMwAHrs31ZgPtorRbgBF7cUw_IYK8J5Vi076GEdqtOSBJ-5ziZcBSYFYONR17HnZoT_Pgju9tzw151vcVawr_zwOiKGam3jZBoIOgzJxru9UTrbozodprqB8QuCxlxjSE0G7hmee9NfbHPLS-H9xkhwbaWHYwLzKHE1NhUh0RSiqIRPHJlUkUxu8myl7xXhfmdOtc7Lda5q9yIE4SLGHhsHpswIgieWKeGMoCf-FotkUHVf0ZRqzw",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"confirmacaoRequisicaoSemAnexos\": false,\n    \"clienteReclamante\": {\n        \"nome\": \"Carol Teste POST 1 transação Erro Operacional TED com 1 anexo\",\n        \"cpfCnpj\": \"36871804846\",\n        \"dataReclamacao\": \"2024-01-01T11:00:00.000Z\",\n        \"numeroProtocolo\": \"8446199\",\n        \"uf\": \"SP\"\n\n    },\n    \"transacoes\": [\n        {\n            \"canalAtendimento\": \"3\",\n            \"produto\": \"2\",\n            \"condicaoTransacao\": {\n                \"comAcaoJudicial\": false\n            },\n            \"tipoRequisicao\": \"6245f6133b988e4ac7c4ec97\",\n            \"tipoEnvolvido\": \"vitima\",\n            \"motivo\": \"99\",\n            \"ted\": {\n                \"valorTransacao\": 1000,\n                \"dataHoraTransacao\": \"2024-01-01T11:00:00.000Z\",\n                \"numeroDocumento\": \"654897064509874901568223\",\n                \"descricaoCaso\": \"Transação Erro Operacional TED\"\n            },\n            \"clienteDestinatario\": {\n                \"nome\": \"José Silva\",\n                \"cpfCnpj\": \"74573195068\",\n                \"tipoConta\": \"6256ca8b969cdd834fe89c2d\",\n                \"agencia\": \"8811\",\n                \"numeroConta\": \"006686\"\n            }\n        }\n    ],\n    \"instituicaoDestinatariaIspb\": \"12345679\",\n    \"instituicaoRemetenteIspb\": \"11111111\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/requisicoes",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"requisicoes"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOCAL - Cadastrar participante aderiuQuod false",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code é 200\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"/*",
							"1. Autenticar no Postman com um usuário \"cipmaster\"",
							"",
							"2. Cadastrar por este endpoint, informando um CNPJ diferente, e um ISPB que esteja na lista da collection \"instituicoes_bacen\" do MongoDB, que ainda não tenha sido utilizado. ",
							"",
							"Caso já tenha sido utilizado, a API retorna uma mensagem.",
							"",
							"3. Logar com o cipmaster, selecionar os participantes e atribuir os usuários a ele.",
							"*/"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// const postRequest = {\r",
							"//   url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
							"//   method: 'POST',\r",
							"//   timeout: 0,\r",
							"//   header: {\r",
							"//     \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
							"//     \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
							"//   },\r",
							"//   body: {\r",
							"//     mode: 'urlencoded',\r",
							"//     urlencoded: [\r",
							"//         {key: \"grant_type\", value: \"client_credentials\"}\r",
							"//     ]}\r",
							"// };\r",
							"// pm.sendRequest(postRequest, function (err, res) {\r",
							"//      if (err) { \r",
							"//             console.log(err);\r",
							"//      }\r",
							"//     var responseJson = res.json();\r",
							"//     console.log(responseJson);\r",
							"//     pm.environment.set('idToken', responseJson['access_token']);\r",
							"// })\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{idToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"razaoSocial\": \"Banco da Jaque S/A\",\n    \"nomeFantasia\": \"Banco da Jaque S/A\",\n    \"cnpj\": \"50638954000100\",\n    \"dominioEmailCorporativo\": [\n        \"cip-bancos.org.br\"\n    ],\n    \"email\": \"banco.jaque@cip-bancos.org.br\",\n    \"ispb\": \"00315557\",\n    \"planoContratado\": \"6245f6133b988e4ac7c4ec9a\",\n    \"aplicacao\": \"RECUPERACAO_E_NUCLEO_FRAUDES\",\n    \"aderiuQuod\": 890,\n    \"parceria\": \"RUFRA\",\n    \"disponivelReceberRequisicoes\": 678\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/participantes",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"participantes"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOCAL - Buscar participantes ativos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code é 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// const postRequest = {\r",
							"//   url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
							"//   method: 'POST',\r",
							"//   timeout: 0,\r",
							"//   header: {\r",
							"//     \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
							"//     \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
							"//   },\r",
							"//   body: {\r",
							"//     mode: 'urlencoded',\r",
							"//     urlencoded: [\r",
							"//         {key: \"grant_type\", value: \"client_credentials\"}\r",
							"//     ]}\r",
							"// };\r",
							"// pm.sendRequest(postRequest, function (err, res) {\r",
							"//      if (err) { \r",
							"//             console.log(err);\r",
							"//      }\r",
							"//     var responseJson = res.json();\r",
							"//     console.log(responseJson);\r",
							"//     pm.environment.set('idToken', responseJson['access_token']);\r",
							"// })\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{idToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{localHost}}/participantes",
					"host": [
						"{{localHost}}"
					],
					"path": [
						"participantes"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOCAL - Criar requisição com IF destinataria com id do participante ao inves de ispb",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let body = pm.response.json();",
							"pm.environment.set(\"idRequisicao\", body.id);",
							"pm.environment.set(\"idTransacao\", body.transacoes[0].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJraWQiOiJzZEoxTFREbUJRbWg5K0FrYXFUSVwvaTJmNm9QMnlNOWc0WDM2V2VYUTFKOD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJhYjUwZGYzNy02NjRmLTQ0Y2QtOTFlNy1jNDk5YTU4ZWUwNDIiLCJjb2duaXRvOmdyb3VwcyI6WyJtYXN0ZXIiXSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnNhLWVhc3QtMS5hbWF6b25hd3MuY29tXC9zYS1lYXN0LTFfZDZ3SXJxb253IiwiY2xpZW50X2lkIjoiNWR0NWVrZGVmcjZmN3BuOTVhOG8ybXIycG8iLCJvcmlnaW5fanRpIjoiODJmYWE4NDYtZmNkNC00OWViLWI5ZjEtNDc3NWUxNzc0MTExIiwiZXZlbnRfaWQiOiJiN2Q0YWEwOS05NWU4LTQyOGMtOTE3Yi1kZjc5NjVkMjY5MWYiLCJ0b2tlbl91c2UiOiJhY2Nlc3MiLCJzY29wZSI6ImF3cy5jb2duaXRvLnNpZ25pbi51c2VyLmFkbWluIiwiYXV0aF90aW1lIjoxNzE2NDY1MTY0LCJleHAiOjE3MTY1NTE1NjQsImlhdCI6MTcxNjQ2NTE2NCwianRpIjoiZDVjNGJkMWEtMTg5Mi00YWJjLWJiZTAtYzQxMDBiNzk0ZDc4IiwidXNlcm5hbWUiOiJhYjUwZGYzNy02NjRmLTQ0Y2QtOTFlNy1jNDk5YTU4ZWUwNDIifQ.JWLYp57HwZvdRftLj1O24PaW18fzpqccNQK7XgjPWYzVfUOwgW11DsQMyr0zxprHQmaStdN7nrhezUyw_TZVxUhPrrgc_1leKNzDOLwErFjlYMt5Y9g-fGg4uX9qT0s2elJ5QzCpXBp6pCZPJFC9OI8iefiTwauVIqylJjnAAf60DzKAigDYvawJlaUlkompqGa_8MozMTvwX4dJsaC8oLQajPfrQ2jW8bvmXimx3l0BHohP81HoQl57tW6uEMONh89BDr7tmILU_n0juJDvKDT_jvaLNTm2SgGaynwknN9xTzvW9yQCTA0HTTqNVfyZb1FIip0u5-SJM8o9iRZMRw",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"confirmacaoRequisicaoSemAnexos\": false,\n    \"clienteReclamante\": {\n        \"nome\": \"Carol Teste POST 1 transação Erro Operacional TED com 1 anexo\",\n        \"cpfCnpj\": \"36871804846\",\n        \"dataReclamacao\": \"2024-01-01T11:00:00.000Z\",\n        \"numeroProtocolo\": \"8446199\",\n        \"uf\": \"SP\"\n\n    },\n    \"transacoes\": [\n        {\n            \"canalAtendimento\": \"3\",\n            \"produto\": \"2\",\n            \"condicaoTransacao\": {\n                \"comAcaoJudicial\": false\n            },\n            \"tipoRequisicao\": \"6245f6133b988e4ac7c4ec97\",\n            \"tipoEnvolvido\": \"vitima\",\n            \"motivo\": \"99\",\n            \"ted\": {\n                \"valorTransacao\": 1000,\n                \"dataHoraTransacao\": \"2024-01-01T11:00:00.000Z\",\n                \"numeroDocumento\": \"654897064509874901568223\",\n                \"descricaoCaso\": \"Transação Erro Operacional TED\"\n            },\n            \"clienteDestinatario\": {\n                \"nome\": \"José Silva\",\n                \"cpfCnpj\": \"74573195068\",\n                \"tipoConta\": \"6256ca8b969cdd834fe89c2d\",\n                \"agencia\": \"8811\",\n                \"numeroConta\": \"006686\"\n            }\n        }\n    ],\n    \"instituicaoDestinataria\": \"622a1a7fff71f049b1479f64\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/requisicoes",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"requisicoes"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOCAL - Abrir Requisição Fraude-DOC",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let body = pm.response.json();",
							"pm.environment.set(\"idRequisicao\", body.id);",
							"",
							"pm.test(\"Status code é 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"/*",
							"    Instituição destinatária:",
							"        CIP: 622a1a7fff71f049b1479f64 - ISPB 04391007",
							"        BB:  624c8bdb57f0680c7a2c9189 - ISPB 12345678",
							"        Automação web: 62c333266f776e50104d3145 - ISPB 12345699",
							"        CEF - Maikon: 63778e7ad4410e3dcf6e7df6 - ISPB 00360305",
							"        Banco Quod RUFRA S/A: 65a816e1a42cd202b0b6f6d5 - ISPB 46610330",
							"        IF não integrada ao Detecta: ISPB 03844699",
							"",
							"    Permissão: CRIAR_REQUISICAO",
							"*/"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// const postRequest = {\r",
							"//   url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
							"//   method: 'POST',\r",
							"//   timeout: 0,\r",
							"//   header: {\r",
							"//     \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
							"//     \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
							"//   },\r",
							"//   body: {\r",
							"//     mode: 'urlencoded',\r",
							"//     urlencoded: [\r",
							"//         {key: \"grant_type\", value: \"client_credentials\"}\r",
							"//     ]}\r",
							"// };\r",
							"// pm.sendRequest(postRequest, function (err, res) {\r",
							"//      if (err) { \r",
							"//             console.log(err);\r",
							"//      }\r",
							"//     var responseJson = res.json();\r",
							"//     console.log(responseJson);\r",
							"//     pm.environment.set('idToken', responseJson['access_token']);\r",
							"// })\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"confirmacaoRequisicaoSemAnexos\": false,\n    \"clienteReclamante\": {\n        \"nome\": \"Carol Teste POST 1 transação Fraude DOC\",\n        \"cpfCnpj\": \"36871804846\",\n        \"dataReclamacao\": \"2024-01-01T11:00:00.000Z\",\n        \"numeroProtocolo\": \"8446199\",\n        \"uf\": \"SP\",\n        \"municipio\": \"3548708\"\n    },\n    \"transacoes\": [\n        {\n            \"canalAtendimento\": \"3\",\n            \"produto\": \"2\",\n            \"condicaoTransacao\": {\n                \"comAcaoJudicial\": false\n            },\n            \"tipoRequisicao\": \"6245f6133b988e4ac7c4ec98\",\n            \"tipoEnvolvido\": \"vitima\",\n            \"motivo\": \"99\",\n            \"doc\": {\n                \"valorTransacao\": 1000,\n                \"dataHoraTransacao\": \"2024-01-01T11:00:00.000Z\",\n                \"codigoTransacao\": \"564098479802164098409840\",\n                \"dataCompensacao\": \"2024-01-01T11:05:00.000Z\",\n                \"descricaoCaso\": \"Transação Fraude DOC para testes.\"\n            },\n            \"clienteDestinatario\": {\n                \"nome\": \"José Silva\",\n                \"cpfCnpj\": \"80472435868\",\n                \"tipoConta\": \"6256ca8b969cdd834fe89c2d\",\n                \"agencia\": \"8811\",\n                \"numeroConta\": \"006686\"\n            }\n        }\n    ],\n    \"instituicaoRemetenteIspb\": \"11111111\",\n    \"instituicaoDestinatariaIspb\": \"04391007\",\n    \"idRequisicaoIF\": \"107t191e810c19721de860ecc\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/requisicoes",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"requisicoes"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOCAL - Abrir Requisição ErrOp-Boleto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let body = pm.response.json();",
							"pm.environment.set(\"idRequisicao\", body.id);",
							"",
							"pm.test(\"Status code é 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"/*",
							"    Instituição destinatária:",
							"        CIP: 622a1a7fff71f049b1479f64 - ISPB 04391007",
							"        BB:  624c8bdb57f0680c7a2c9189 - ISPB 12345678",
							"        Automação web: 62c333266f776e50104d3145 - ISPB 12345699",
							"        CEF - Maikon: 63778e7ad4410e3dcf6e7df6 - ISPB 00360305",
							"        Banco Quod RUFRA S/A: 65a816e1a42cd202b0b6f6d5 - ISPB 46610330",
							"        IF não integrada ao Detecta: ISPB 03844699",
							"",
							"    Permissão: CRIAR_REQUISICAO",
							"*/"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// const postRequest = {\r",
							"//   url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
							"//   method: 'POST',\r",
							"//   timeout: 0,\r",
							"//   header: {\r",
							"//     \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
							"//     \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
							"//   },\r",
							"//   body: {\r",
							"//     mode: 'urlencoded',\r",
							"//     urlencoded: [\r",
							"//         {key: \"grant_type\", value: \"client_credentials\"}\r",
							"//     ]}\r",
							"// };\r",
							"// pm.sendRequest(postRequest, function (err, res) {\r",
							"//      if (err) { \r",
							"//             console.log(err);\r",
							"//      }\r",
							"//     var responseJson = res.json();\r",
							"//     console.log(responseJson);\r",
							"//     pm.environment.set('idToken', responseJson['access_token']);\r",
							"// })\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"confirmacaoRequisicaoSemAnexos\": false,\n    \"clienteReclamante\": {\n        \"nome\": \"Carol Teste POST 1 transação Erro Operacional Boleto\",\n        \"cpfCnpj\": \"36871804846\",\n        \"dataReclamacao\": \"2024-01-01T11:00:00.000Z\",\n        \"numeroProtocolo\": \"8446199\",\n        \"uf\": \"SP\",\n        \"municipio\": \"3548708\"\n    },\n    \"transacoes\": [\n        {\n            \"canalAtendimento\": \"3\",\n            \"produto\": \"2\",\n            \"condicaoTransacao\": {\n                \"comAcaoJudicial\": false\n            },\n            \"tipoRequisicao\": \"62421f444e56a22a7fda004f\",\n            \"tipoEnvolvido\": \"vitima\",\n            \"motivo\": \"99\",\n            \"boleto\": {\n                \"valorTransacao\": 1000,\n                \"dataHoraTransacao\": \"2024-01-01T11:00:00.000Z\",\n                \"codigoBarras\": \"6549840210210640665165110548\",\n                \"descricaoCaso\": \"Transação Erro Operacional Boleto para testes.\"\n            },\n            \"clienteDestinatario\": {\n                \"nome\": \"José Silva\",\n                \"cpfCnpj\": \"80472435868\",\n                \"tipoConta\": \"6256ca8b969cdd834fe89c2d\",\n                \"agencia\": \"8811\",\n                \"numeroConta\": \"006686\"\n            }\n        }\n    ],\n    \"instituicaoRemetenteIspb\": \"11111111\",\n    \"instituicaoDestinatariaIspb\": \"04391007\",\n    \"idRequisicaoIF\": \"507f191e810c19729de810ec7\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/requisicoes",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"requisicoes"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOCAL - Alterar Requisição 1 transação",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let body = pm.response.json();",
							"pm.environment.set(\"idRequisicao\", body.id);",
							"",
							"pm.test(\"Status code é 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// const postRequest = {\r",
							"//   url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
							"//   method: 'POST',\r",
							"//   timeout: 0,\r",
							"//   header: {\r",
							"//     \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
							"//     \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
							"//   },\r",
							"//   body: {\r",
							"//     mode: 'urlencoded',\r",
							"//     urlencoded: [\r",
							"//         {key: \"grant_type\", value: \"client_credentials\"}\r",
							"//     ]}\r",
							"// };\r",
							"// pm.sendRequest(postRequest, function (err, res) {\r",
							"//      if (err) { \r",
							"//             console.log(err);\r",
							"//      }\r",
							"//     var responseJson = res.json();\r",
							"//     console.log(responseJson);\r",
							"//     pm.environment.set('idToken', responseJson['access_token']);\r",
							"// })\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"confirmacaoRequisicaoSemAnexos\": false,\n    \"clienteReclamante\": {\n        \"nome\": \"Carol Teste POST 1 transação Fraude DOC\",\n        \"cpfCnpj\": \"36871804846\",\n        \"dataReclamacao\": \"2024-01-01T11:00:00.000Z\",\n        \"numeroProtocolo\": \"8446199\",\n        \"uf\": \"SP\",\n        \"municipio\": \"3548708\"\n    },\n    \"transacoes\": [\n        {\n            \"canalAtendimento\": \"3\",\n            \"produto\": \"2\",\n            \"condicaoTransacao\": {\n                \"comAcaoJudicial\": false\n            },\n            \"tipoRequisicao\": \"6245f6133b988e4ac7c4ec98\",\n            \"tipoEnvolvido\": \"vitima\",\n            \"motivo\": \"99\",\n            \"doc\": {\n                \"valorTransacao\": 1000,\n                \"dataHoraTransacao\": \"2024-01-01T11:00:00.000Z\",\n                \"codigoTransacao\": \"564098479802164098409840\",\n                \"dataCompensacao\": \"2024-01-01T11:05:00.000Z\",\n                \"descricaoCaso\": \"Transação Fraude DOC para testes.\"\n            },\n            \"clienteDestinatario\": {\n                \"nome\": \"José Silva\",\n                \"cpfCnpj\": \"80472435868\",\n                \"tipoConta\": \"6256ca8b969cdd834fe89c2d\",\n                \"agencia\": \"8811\",\n                \"numeroConta\": \"006686\"\n            }\n        }\n    ],\n    \"instituicaoRemetenteIspb\": \"11111111\",\n    \"instituicaoDestinatariaIspb\": \"04391007\",\n    \"idRequisicaoIF\": \"107t191e810c19721de860ecc\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{localHost}}/requisicoes/664b49c4097162305d2ebe48",
					"host": [
						"{{localHost}}"
					],
					"path": [
						"requisicoes",
						"664b49c4097162305d2ebe48"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOCAL - Alterar Requisição 3 transações",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let body = pm.response.json();",
							"pm.environment.set(\"idRequisicao\", body.id);",
							"",
							"pm.test(\"Status code é 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// const postRequest = {\r",
							"//   url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
							"//   method: 'POST',\r",
							"//   timeout: 0,\r",
							"//   header: {\r",
							"//     \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
							"//     \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
							"//   },\r",
							"//   body: {\r",
							"//     mode: 'urlencoded',\r",
							"//     urlencoded: [\r",
							"//         {key: \"grant_type\", value: \"client_credentials\"}\r",
							"//     ]}\r",
							"// };\r",
							"// pm.sendRequest(postRequest, function (err, res) {\r",
							"//      if (err) { \r",
							"//             console.log(err);\r",
							"//      }\r",
							"//     var responseJson = res.json();\r",
							"//     console.log(responseJson);\r",
							"//     pm.environment.set('idToken', responseJson['access_token']);\r",
							"// })\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"confirmacaoRequisicaoSemAnexos\": false,\n    \"clienteReclamante\": {\n        \"nome\": \"Carol Teste POST 4 transações ErroOp-TED, Fraude-DOC, Golpe-Boleto, Golpe-PIX\",\n        \"cpfCnpj\": \"36871804846\",\n        \"dataReclamacao\": \"2024-01-01T11:00:00.000Z\",\n        \"numeroProtocolo\": \"8446199\",\n        \"uf\": \"SP\",\n        \"municipio\": \"3548708\"\n    },\n    \"transacoes\": [\n        {\n            \"canalAtendimento\": \"3\",\n            \"produto\": \"2\",\n            \"condicaoTransacao\": {\n                \"comAcaoJudicial\": false\n            },\n            \"tipoRequisicao\": \"62421f444e56a22a7fda004f\",\n            \"tipoEnvolvido\": \"vitima\",\n            \"motivo\": \"99\",\n            \"ted\": {\n                \"valorTransacao\": 100,\n                \"dataHoraTransacao\": \"2024-01-01T11:00:00.000Z\",\n                \"numeroDocumento\": \"654897064509874901568223\",\n                \"descricaoCaso\": \"Transação 01 Erro Operacional TED para testes.\"\n            },\n            \"clienteDestinatario\": {\n                \"nome\": \"José Silva\",\n                \"cpfCnpj\": \"80472435868\",\n                \"tipoConta\": \"6256ca8b969cdd834fe89c2d\",\n                \"agencia\": \"8811\",\n                \"numeroConta\": \"006686\"\n            }\n        },\n        {\n            \"canalAtendimento\": \"3\",\n            \"produto\": \"2\",\n            \"condicaoTransacao\": {\n                \"comAcaoJudicial\": false\n            },\n            \"tipoRequisicao\": \"6245f6133b988e4ac7c4ec97\",\n            \"tipoEnvolvido\": \"vitima\",\n            \"motivo\": \"99\",\n            \"pix\": {\n                \"valorTransacao\": 500,\n                \"dataHoraTransacao\": \"2024-01-01T11:03:00.000Z\",\n                \"chave\": \"98409804-8890-4651-0589-740874684684\",\n                \"tipoChave\": \"643ff8692db9e78b62367e11\",\n                \"idTransacao\": \"1E35RK96548774a2001f6g3498c25411\",\n                \"idRelatoInfracao\": \"123e4567-e89b-12d3-a456-426655440000\",\n                \"idSolicitacaoDevolucao\": \"123e4567-e89b-12d3-a456-426655440000\",\n                \"descricaoCaso\": \"Transação 04 Golpe PIX para testes.\"\n            },\n            \"clienteDestinatario\": {\n                \"nome\": \"Marcos Ramos\",\n                \"cpfCnpj\": \"38796341068\",\n                \"tipoConta\": \"6256ca8b969cdd834fe89c2d\",\n                \"agencia\": \"4455\",\n                \"numeroConta\": \"774421\"\n            }\n        }\n    ],\n    \"instituicaoRemetenteIspb\": \"11111111\",\n    \"instituicaoDestinatariaIspb\": \"04391007\",\n    \"idRequisicaoIF\": \"507f191e810c19729de860ecc\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{localHost}}/requisicoes/66560fb294a8120f685908e5",
					"host": [
						"{{localHost}}"
					],
					"path": [
						"requisicoes",
						"66560fb294a8120f685908e5"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOCAL - Abrir Requisição 3 transações",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let body = pm.response.json();",
							"pm.environment.set(\"idRequisicao\", body.id);",
							"",
							"pm.test(\"Status code é 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"/*",
							"    Instituição destinatária:",
							"        CIP: 622a1a7fff71f049b1479f64 - ISPB 04391007",
							"        BB:  624c8bdb57f0680c7a2c9189 - ISPB 12345678",
							"        Automação web: 62c333266f776e50104d3145 - ISPB 12345699",
							"        CEF - Maikon: 63778e7ad4410e3dcf6e7df6 - ISPB 00360305",
							"        Banco Quod RUFRA S/A: 65a816e1a42cd202b0b6f6d5 - ISPB 46610330",
							"        IF não integrada ao Detecta: ISPB 03844699",
							"",
							"    Permissão: CRIAR_REQUISICAO",
							"*/"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// const postRequest = {\r",
							"//   url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
							"//   method: 'POST',\r",
							"//   timeout: 0,\r",
							"//   header: {\r",
							"//     \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
							"//     \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
							"//   },\r",
							"//   body: {\r",
							"//     mode: 'urlencoded',\r",
							"//     urlencoded: [\r",
							"//         {key: \"grant_type\", value: \"client_credentials\"}\r",
							"//     ]}\r",
							"// };\r",
							"// pm.sendRequest(postRequest, function (err, res) {\r",
							"//      if (err) { \r",
							"//             console.log(err);\r",
							"//      }\r",
							"//     var responseJson = res.json();\r",
							"//     console.log(responseJson);\r",
							"//     pm.environment.set('idToken', responseJson['access_token']);\r",
							"// })\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"confirmacaoRequisicaoSemAnexos\": false,\n    \"clienteReclamante\": {\n        \"nome\": \"Carol Teste POST 4 transações ErroOp-TED, Fraude-DOC, Golpe-Boleto, Golpe-PIX\",\n        \"cpfCnpj\": \"36871804846\",\n        \"dataReclamacao\": \"2024-01-01T11:00:00.000Z\",\n        \"numeroProtocolo\": \"8446199\",\n        \"uf\": \"SP\",\n        \"municipio\": \"3548708\"\n    },\n    \"transacoes\": [\n        {\n            \"canalAtendimento\": \"3\",\n            \"produto\": \"2\",\n            \"condicaoTransacao\": {\n                \"comAcaoJudicial\": false\n            },\n            \"tipoRequisicao\": \"62421f444e56a22a7fda004f\",\n            \"tipoEnvolvido\": \"vitima\",\n            \"motivo\": \"99\",\n            \"ted\": {\n                \"valorTransacao\": 300,\n                \"dataHoraTransacao\": \"2024-01-01T11:00:00.000Z\",\n                \"numeroDocumento\": \"654897064509874901568223\",\n                \"descricaoCaso\": \"Transação 01 Erro Operacional TED para testes.\"\n            },\n            \"clienteDestinatario\": {\n                \"nome\": \"José Silva\",\n                \"cpfCnpj\": \"80472435868\",\n                \"tipoConta\": \"6256ca8b969cdd834fe89c2d\",\n                \"agencia\": \"8811\",\n                \"numeroConta\": \"006686\"\n            }\n        },  \n        {\n            \"canalAtendimento\": \"3\",\n            \"produto\": \"2\",\n            \"condicaoTransacao\": {\n                \"comAcaoJudicial\": false\n            },\n            \"tipoRequisicao\": \"6245f6133b988e4ac7c4ec97\",\n            \"tipoEnvolvido\": \"vitima\",\n            \"motivo\": \"99\",\n            \"boleto\": {\n                \"valorTransacao\": 300,\n                \"dataHoraTransacao\": \"2024-01-01T11:02:00.000Z\",\n                \"codigoBarras\": \"6549840210210640665165110548\",\n                \"descricaoCaso\": \"Transação 03 Golpe Boleto para testes.\"\n            },\n            \"clienteDestinatario\": {\n                \"nome\": \"Marcos Ramos\",\n                \"cpfCnpj\": \"38796341068\",\n                \"tipoConta\": \"6256ca8b969cdd834fe89c2d\",\n                \"agencia\": \"4455\",\n                \"numeroConta\": \"774421\"\n            }\n        },\n        {\n            \"canalAtendimento\": \"3\",\n            \"produto\": \"2\",\n            \"condicaoTransacao\": {\n                \"comAcaoJudicial\": false\n            },\n            \"tipoRequisicao\": \"6245f6133b988e4ac7c4ec97\",\n            \"tipoEnvolvido\": \"vitima\",\n            \"motivo\": \"99\",\n            \"pix\": {\n                \"valorTransacao\": 300,\n                \"dataHoraTransacao\": \"2024-01-01T11:03:00.000Z\",\n                \"chave\": \"98409804-8890-4651-0589-740874684684\",\n                \"tipoChave\": \"643ff8692db9e78b62367e11\",\n                \"idTransacao\": \"1E35RK96548774a2001f6g3498c25411\",\n                \"idRelatoInfracao\": \"123e4567-e89b-12d3-a456-426655440000\",\n                \"idSolicitacaoDevolucao\": \"123e4567-e89b-12d3-a456-426655440000\",\n                \"descricaoCaso\": \"Transação 04 Golpe PIX para testes.\"\n            },\n            \"clienteDestinatario\": {\n                \"nome\": \"Marcos Ramos\",\n                \"cpfCnpj\": \"38796341068\",\n                \"tipoConta\": \"6256ca8b969cdd834fe89c2d\",\n                \"agencia\": \"4455\",\n                \"numeroConta\": \"774421\"\n            }\n        }\n    ],\n    \"instituicaoRemetenteIspb\": \"11111111\",\n    \"instituicaoDestinatariaIspb\": \"04391007\",\n    \"idRequisicaoIF\": \"507f191e810c11729de860ecc\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{localHost}}/requisicoes",
					"host": [
						"{{localHost}}"
					],
					"path": [
						"requisicoes"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOCAL - Abrir Requisição 3 transações sendo 1 doc",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let body = pm.response.json();",
							"pm.environment.set(\"idRequisicao\", body.id);",
							"",
							"pm.test(\"Status code é 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"/*",
							"    Instituição destinatária:",
							"        CIP: 622a1a7fff71f049b1479f64 - ISPB 04391007",
							"        BB:  624c8bdb57f0680c7a2c9189 - ISPB 12345678",
							"        Automação web: 62c333266f776e50104d3145 - ISPB 12345699",
							"        CEF - Maikon: 63778e7ad4410e3dcf6e7df6 - ISPB 00360305",
							"        Banco Quod RUFRA S/A: 65a816e1a42cd202b0b6f6d5 - ISPB 46610330",
							"        IF não integrada ao Detecta: ISPB 03844699",
							"",
							"    Permissão: CRIAR_REQUISICAO",
							"*/"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// const postRequest = {\r",
							"//   url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
							"//   method: 'POST',\r",
							"//   timeout: 0,\r",
							"//   header: {\r",
							"//     \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
							"//     \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
							"//   },\r",
							"//   body: {\r",
							"//     mode: 'urlencoded',\r",
							"//     urlencoded: [\r",
							"//         {key: \"grant_type\", value: \"client_credentials\"}\r",
							"//     ]}\r",
							"// };\r",
							"// pm.sendRequest(postRequest, function (err, res) {\r",
							"//      if (err) { \r",
							"//             console.log(err);\r",
							"//      }\r",
							"//     var responseJson = res.json();\r",
							"//     console.log(responseJson);\r",
							"//     pm.environment.set('idToken', responseJson['access_token']);\r",
							"// })\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"confirmacaoRequisicaoSemAnexos\": false,\n    \"clienteReclamante\": {\n        \"nome\": \"Carol Teste POST 4 transações ErroOp-TED, Fraude-DOC, Golpe-Boleto, Golpe-PIX\",\n        \"cpfCnpj\": \"36871804846\",\n        \"dataReclamacao\": \"2024-01-01T11:00:00.000Z\",\n        \"numeroProtocolo\": \"8446199\",\n        \"uf\": \"SP\",\n        \"municipio\": \"3548708\"\n    },\n    \"transacoes\": [\n         {\n            \"canalAtendimento\": \"3\",\n            \"produto\": \"2\",\n            \"condicaoTransacao\": {\n                \"comAcaoJudicial\": false\n            },\n            \"tipoRequisicao\": \"6245f6133b988e4ac7c4ec98\",\n            \"tipoEnvolvido\": \"vitima\",\n            \"motivo\": \"99\",\n            \"doc\": {\n                \"valorTransacao\": 1000,\n                \"dataHoraTransacao\": \"2024-01-01T11:00:00.000Z\",\n                \"codigoTransacao\": \"564098479802164098409840\",\n                \"dataCompensacao\": \"2024-01-01T11:05:00.000Z\",\n                \"descricaoCaso\": \"Transação Fraude DOC para testes.\"\n            },\n            \"clienteDestinatario\": {\n                \"nome\": \"José Silva\",\n                \"cpfCnpj\": \"80472435868\",\n                \"tipoConta\": \"6256ca8b969cdd834fe89c2d\",\n                \"agencia\": \"8811\",\n                \"numeroConta\": \"006686\"\n            }\n        },  \n        {\n            \"canalAtendimento\": \"3\",\n            \"produto\": \"2\",\n            \"condicaoTransacao\": {\n                \"comAcaoJudicial\": false\n            },\n            \"tipoRequisicao\": \"6245f6133b988e4ac7c4ec97\",\n            \"tipoEnvolvido\": \"vitima\",\n            \"motivo\": \"99\",\n            \"boleto\": {\n                \"valorTransacao\": 300,\n                \"dataHoraTransacao\": \"2024-01-01T11:02:00.000Z\",\n                \"codigoBarras\": \"6549840210210640665165110548\",\n                \"descricaoCaso\": \"Transação 03 Golpe Boleto para testes.\"\n            },\n            \"clienteDestinatario\": {\n                \"nome\": \"Marcos Ramos\",\n                \"cpfCnpj\": \"38796341068\",\n                \"tipoConta\": \"6256ca8b969cdd834fe89c2d\",\n                \"agencia\": \"4455\",\n                \"numeroConta\": \"774421\"\n            }\n        },\n        {\n            \"canalAtendimento\": \"3\",\n            \"produto\": \"2\",\n            \"condicaoTransacao\": {\n                \"comAcaoJudicial\": false\n            },\n            \"tipoRequisicao\": \"6245f6133b988e4ac7c4ec97\",\n            \"tipoEnvolvido\": \"vitima\",\n            \"motivo\": \"99\",\n            \"pix\": {\n                \"valorTransacao\": 400,\n                \"dataHoraTransacao\": \"2024-01-01T11:03:00.000Z\",\n                \"chave\": \"98409804-8890-4651-0589-740874684684\",\n                \"tipoChave\": \"643ff8692db9e78b62367e11\",\n                \"idTransacao\": \"1E35RK96548774a2001f6g3498c25411\",\n                \"idRelatoInfracao\": \"123e4567-e89b-12d3-a456-426655440000\",\n                \"idSolicitacaoDevolucao\": \"123e4567-e89b-12d3-a456-426655440000\",\n                \"descricaoCaso\": \"Transação 04 Golpe PIX para testes.\"\n            },\n            \"clienteDestinatario\": {\n                \"nome\": \"Marcos Ramos\",\n                \"cpfCnpj\": \"38796341068\",\n                \"tipoConta\": \"6256ca8b969cdd834fe89c2d\",\n                \"agencia\": \"4455\",\n                \"numeroConta\": \"774421\"\n            }\n        }\n    ],\n    \"instituicaoRemetenteIspb\": \"11111111\",\n    \"instituicaoDestinatariaIspb\": \"04391007\",\n    \"idRequisicaoIF\": \"507f191e810c19729de860ecc\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{localHost}}/requisicoes",
					"host": [
						"{{localHost}}"
					],
					"path": [
						"requisicoes"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOCAL - Buscar Tipos de Transação",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code é 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// const postRequest = {\r",
							"//   url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
							"//   method: 'POST',\r",
							"//   timeout: 0,\r",
							"//   header: {\r",
							"//     \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
							"//     \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
							"//   },\r",
							"//   body: {\r",
							"//     mode: 'urlencoded',\r",
							"//     urlencoded: [\r",
							"//         {key: \"grant_type\", value: \"client_credentials\"}\r",
							"//     ]}\r",
							"// };\r",
							"// pm.sendRequest(postRequest, function (err, res) {\r",
							"//      if (err) { \r",
							"//             console.log(err);\r",
							"//      }\r",
							"//     var responseJson = res.json();\r",
							"//     console.log(responseJson);\r",
							"//     pm.environment.set('idToken', responseJson['access_token']);\r",
							"// })\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{localHost}}/tipos-transacao",
					"host": [
						"{{localHost}}"
					],
					"path": [
						"tipos-transacao"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOCAL - Incluir Evento",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();",
							"pm.environment.set(\"idEvento\", responseJson.id);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"canalAtendimento\": \"3\",\n    \"motivo\": \"4\",\n    \"produto\": \"4\",\n    \"instituicaoDestinatariaIspb\": \"00460065\",\n    \"clienteDestinatario\": {\n        \"nome\": \"João Paulo\",\n        \"cpfCnpj\": \"10692212019\",\n        \"tipoConta\": \"Conta Corrente\",\n        \"agencia\": \"1111\",\n        \"numeroConta\": \"1111\"\n    },\n    \"clienteReclamante\": {\n        \"nome\": \"João Paulo\",\n        \"cpfCnpj\": \"11395843082\"\n        \n    },\n    \"pix\": {\n        \"valorTransacao\": 200000,\n        \"dataHoraTransacao\": \"2022-12-15T03:30:00.000Z\",\n        \"chave\":\"teste@teste.com\",\n        \"tipoChave\": \"E-mail\",\n        \"numeroDocumento\": \"123456789123456\",        \n        \"descricaoCaso\": \"Exemplo caso deve ter 20 cracters\",\n        \"idTransacao\": \"E0000000020230320164418618939533\",\n        \"idRelatoInfracao\": \"6f81ca13-dfab-11ed-bea5-0242ac120002\",\n        \"idSolicitacaoDevolucao\": \"6f81ca31-dfab-11ed-b5e5-0242ac120002\"\n    }    \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{localHost}}/eventos",
					"host": [
						"{{localHost}}"
					],
					"path": [
						"eventos"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOCAL - Abrir Requisição RUFRA",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let body = pm.response.json();",
							"pm.environment.set(\"idRequisicao\", body.id);",
							"",
							"pm.test(\"Status code é 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"/*",
							"    Instituição destinatária:",
							"        CIP: 622a1a7fff71f049b1479f64 - ISPB 04391007",
							"        BB:  624c8bdb57f0680c7a2c9189 - ISPB 12345678",
							"        Automação web: 62c333266f776e50104d3145 - ISPB 12345699",
							"        CEF - Maikon: 63778e7ad4410e3dcf6e7df6 - ISPB 00360305",
							"        Banco Quod RUFRA S/A: 65a816e1a42cd202b0b6f6d5 - ISPB 46610330",
							"        IF não integrada ao Detecta: ISPB 03844699",
							"",
							"    Permissão: CRIAR_REQUISICAO (grupo detectaflow_api_rufra)",
							"*/"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"confirmacaoRequisicaoSemAnexos\": true,\n  \"clienteReclamante\": {\n    \"nome\": \"Jaqueline Cruvinel da Silva\",\n    \"cpfCnpj\": \"77679574200\",\n    \"dataReclamacao\": \"2004-04-01T03:00:00.000Z\",\n    \"numeroProtocolo\": \"12345676HG\",\n    \"uf\": \"RO\",\n    \"municipio\": \"1100015\"\n  },\n  \"transacoes\": [\n    {\n      \"canalAtendimento\": \"1\",\n      \"produto\": \"1\",\n      \"condicaoTransacao\": {\n        \"comAcaoJudicial\": false\n      },\n      \"tipoRequisicao\": \"6245f6133b988e4ac7c4ec97\",\n      \"tipoEnvolvido\": \"fraudador\",\n      \"motivo\": \"1\",\n      \"pix\": {\n        \"valorTransacao\": 20000,\n        \"dataHoraTransacao\": \"2022-12-15T03:30:00.000Z\",\n        \"descricaoCaso\": \"Exemplo de descrição do caso com mais de 20 caracteres,\",\n        \"idTransacao\": \"E0000000020230320164418618939533\",\n        \"chave\": \"6f81ca13-dfab-11ed-bea5-0242ac120002\",\n        \"tipoChave\": \"643ff8692db9e78b62367e11\",\n        \"idRelatoInfracao\": \"6f81ca13-dfab-11ed-bea5-0242ac120002\",\n        \"idSolicitacaoDevolucao\": \"6f81ca31-dfab-11ed-b5e5-0242ac120002\"\n      },\n      \"clienteDestinatario\": {\n        \"nome\": \"Jaqueline Cruvinel\",\n        \"cpfCnpj\": 77679574200,\n        \"tipoConta\": \"6256ca852bd1a17ab3c6b432\",\n        \"agencia\": \"1111\",\n        \"numeroConta\": \"1111\"\n      }\n    },\n    {\n      \"canalAtendimento\": \"1\",\n      \"produto\": \"1\",\n      \"condicaoTransacao\": {\n        \"comAcaoJudicial\": false\n      },\n      \"tipoRequisicao\": \"6245f6133b988e4ac7c4ec97\",\n      \"tipoEnvolvido\": \"fraudador\",\n      \"motivo\": \"1\",\n      \"pix\": {\n        \"valorTransacao\": 200,\n        \"dataHoraTransacao\": \"2022-12-15T03:30:00.000Z\",\n        \"descricaoCaso\": \"Exemplo de descrição do caso com mais de 20 caracteres,\",\n        \"idTransacao\": \"E0000000020230320164418618939533\",\n        \"chave\": \"6f81ca13-dfab-11ed-bea5-0242ac120002\",\n        \"tipoChave\": \"643ff8692db9e78b62367e11\",\n        \"idRelatoInfracao\": \"6f81ca13-dfab-11ed-bea5-0242ac120002\",\n        \"idSolicitacaoDevolucao\": \"6f81ca31-dfab-11ed-b5e5-0242ac120002\"\n      },\n      \"clienteDestinatario\": {\n        \"nome\": \"Kleber\",\n        \"cpfCnpj\": 77679574200,\n        \"tipoConta\": \"6256ca852bd1a17ab3c6b432\",\n        \"agencia\": \"1111\",\n        \"numeroConta\": \"1111\"\n      }\n    }\n  ],\n  \"instituicaoDestinatariaIspb\": \"00360305\", \n  \"instituicaoRemetenteIspb\": \"00360305\",\n  \"triagem\": false,\n  \"canalAtendimento\": \"URA\",\n  \"emailInstituicaoDestinatariaNaoCadastrada\": \"jaquecruvinel@hotmail.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/requisicoes",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"requisicoes"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOCAL - Pegar Token usuario_api RUFRA",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"pm.environment.set(\"idToken\", responseJson.access_token);\r",
							"\r",
							"/* \r",
							"No VS Code, setar: Set env variable = json.access_token {{idToken}}\r",
							"\r",
							"CEF - Maikon\r",
							"Client ID: 3kqhso2r4sjrkq02iruve87nic\r",
							"Client Secret: 3da0c3dclnaiie4h8eh46r4enng58mihtutcmqfeb52vajojjhg\r",
							"\r",
							"CIP - Camera Interbancaria de Pagamento\r",
							"Client ID: 966amv3p4i8rggch6if1nnbea\r",
							"Client Secret: 14v3kdqt3ui0iid9s9d20vm28j40n9veu3lk7n7u28edeh5vkqv5\r",
							"\r",
							"Banco Bradesco S.A.\r",
							"Client ID: 2463njmuncbc7kp5uueture2iq\r",
							"Client Secret: 1737ehj9h590vs16242kjlqrme9edo508md9e9mrmrckf8tton66\r",
							"*/"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "1737ehj9h590vs16242kjlqrme9edo508md9e9mrmrckf8tton66",
							"type": "string"
						},
						{
							"key": "username",
							"value": "2463njmuncbc7kp5uueture2iq",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"disabled": true
					},
					{
						"key": "Authorization",
						"value": "Basic MTdyNG1sbG90ZW90ZTVldHJra200MmJuNG06MW1zOThtZjMzMDdpODRvNG44amIxYzdvOGVjamFybzdwbXZkZXVjaXBqcTAwMm5sdmlzdA==",
						"disabled": true
					},
					{
						"key": "Cookie",
						"value": "XSRF-TOKEN=b4c42f00-0636-40d4-a863-22ca75c1942d",
						"disabled": true
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "2463njmuncbc7kp5uueture2iq",
							"type": "default",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token",
					"protocol": "https",
					"host": [
						"detectaflow-hint",
						"auth",
						"sa-east-1",
						"amazoncognito",
						"com"
					],
					"path": [
						"oauth2",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "HINT - Criar requisição",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let body = pm.response.json();",
							"pm.environment.set(\"idRequisicao\", body.id);",
							"pm.environment.set(\"idTransacao\", body.transacoes[0].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"confirmacaoRequisicaoSemAnexos\":false,\n   \"clienteReclamante\":{\n      \"nome\":\"Carol Teste POST 1 transação Erro Operacional TED, com 1 anexo\",\n      \"cpfCnpj\":\"36871804846\",\n      \"dataReclamacao\":\"2024-01-01T11:00:00.000Z\",\n      \"numeroProtocolo\":\"844619,9\",\n      \"uf\":\"SP\"\n   },\n   \"transacoes\":[\n      {\n         \"canalAtendimento\":\"3\",\n         \"produto\":\"2\",\n         \"condicaoTransacao\":{\n            \"comAcaoJudicial\":false\n         },\n         \"tipoRequisicao\":\"6245f6133b988e4ac7c4ec97\",\n         \"tipoEnvolvido\":\"vitima\",\n         \"motivo\":\"99\",\n         \"ted\":{\n            \"valorTransacao\":1000,\n            \"dataHoraTransacao\":\"2024-01-01T11:00:00.000Z\",\n            \"numeroDocumento\":\"654897064509874901568223\",\n            \"descricaoCaso\":\"Transação Erro Operacional; TED\"\n         },\n         \"clienteDestinatario\":{\n            \"nome\":\"José Silva\",\n            \"cpfCnpj\":\"74573195068\",\n            \"tipoConta\":\"6256ca8b969cdd834fe89c2d\",\n            \"agencia\":\"8811\",\n            \"numeroConta\":\"006686\"\n         }\n      }\n   ],\n   \"instituicaoDestinatariaIspb\":\"04391007\",\n   \"instituicaoRemetenteIspb\":\"11111111\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{hintHost}}/requisicoes",
					"host": [
						"{{hintHost}}"
					],
					"path": [
						"requisicoes"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOCAL - Buscar Requisições Recebidas",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code é 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const postRequest = {\r",
							"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
							"  method: 'POST',\r",
							"  timeout: 0,\r",
							"  header: {\r",
							"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
							"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
							"  },\r",
							"  body: {\r",
							"    mode: 'urlencoded',\r",
							"    urlencoded: [\r",
							"        {key: \"grant_type\", value: \"client_credentials\"}\r",
							"    ]}\r",
							"};\r",
							"pm.sendRequest(postRequest, function (err, res) {\r",
							"     if (err) { \r",
							"            console.log(err);\r",
							"     }\r",
							"    var responseJson = res.json();\r",
							"    console.log(responseJson);\r",
							"    pm.environment.set('idToken', responseJson['access_token']);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJraWQiOiJzZEoxTFREbUJRbWg5K0FrYXFUSVwvaTJmNm9QMnlNOWc0WDM2V2VYUTFKOD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI3NDM0YjQzNC0xMDNhLTQ3MmYtYWUyNi1kMmI2YmFlODI2N2UiLCJjb2duaXRvOmdyb3VwcyI6WyJtYXN0ZXIiLCJzYS1lYXN0LTFfZDZ3SXJxb253XzA0MzkxMDA3Il0sImlzcyI6Imh0dHBzOlwvXC9jb2duaXRvLWlkcC5zYS1lYXN0LTEuYW1hem9uYXdzLmNvbVwvc2EtZWFzdC0xX2Q2d0lycW9udyIsInZlcnNpb24iOjIsImNsaWVudF9pZCI6IjZtY2d2ZTlsZDc3Z3NhMm9zNnYwcGY3bWl2Iiwib3JpZ2luX2p0aSI6ImU2MGRlNDE2LTYyMDYtNDVmOS1hYTJhLWExYTI2ZjFiOGM3ZSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4gb3BlbmlkIHByb2ZpbGUgZW1haWwiLCJhdXRoX3RpbWUiOjE3MjM1ODM3NTEsImV4cCI6MTcyMzU4NDM2MSwiaWF0IjoxNzIzNTg0MDYyLCJqdGkiOiI5OTUzODE1Mi0yNTFkLTRlODgtOTk3OC00Njg5NTY3YzM5MzIiLCJ1c2VybmFtZSI6IjA0MzkxMDA3X2JydW5vYi56aWxpb0BudWNsZWEuY29tLmJyIn0.RL-YtO-telKAJ8sfNzgJeVHyBmk7YqwxKP7_2NIddEnvnsBy5VtF4oKTqxRwzJYRbeXo1IUXfd5uR3vca-QYaM7AO_nPXtS1V39JyOhC22ksoGq7PJmVME9bNyrIbt3HBuHgj5iF4Zsi36RRoX-chfE8klueMdAXB_j4gWBsEI5qnE5ZhN57hPM4QfREb09X1DaZTwHm2bVHvBXpZd47NtMy-x9NTGWpvPWwVX00aVBX9SuEMBhBIhu2e0Ha2mLhgo8TwzIbh3UvenJW2o6zHD7GKay11p75p_JV3hnzkZ15bAU3niX1YkiQAg0_SjqRJlvhdc5db635N4F2m2M7bw",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{localHost}}/requisicoes/recebidas?paginaAtual=1&quantidade=3&campoOrdenacao=prioridade&tipoOrdenacao=asc",
					"host": [
						"{{localHost}}"
					],
					"path": [
						"requisicoes",
						"recebidas"
					],
					"query": [
						{
							"key": "paginaAtual",
							"value": "1"
						},
						{
							"key": "quantidade",
							"value": "3"
						},
						{
							"key": "campoOrdenacao",
							"value": "prioridade"
						},
						{
							"key": "tipoOrdenacao",
							"value": "asc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "LOCAL - Buscar Requisições Abertas",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code é 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// const postRequest = {\r",
							"//   url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
							"//   method: 'POST',\r",
							"//   timeout: 0,\r",
							"//   header: {\r",
							"//     \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
							"//     \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
							"//   },\r",
							"//   body: {\r",
							"//     mode: 'urlencoded',\r",
							"//     urlencoded: [\r",
							"//         {key: \"grant_type\", value: \"client_credentials\"}\r",
							"//     ]}\r",
							"// };\r",
							"// pm.sendRequest(postRequest, function (err, res) {\r",
							"//      if (err) { \r",
							"//             console.log(err);\r",
							"//      }\r",
							"//     var responseJson = res.json();\r",
							"//     console.log(responseJson);\r",
							"//     pm.environment.set('idToken', responseJson['access_token']);\r",
							"// })\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{idToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl-sirv-api}}/requisicoes/abertas?paginaAtual=1&quantidade=1&campoOrdenacao=prioridade&tipoOrdenacao=desc",
					"host": [
						"{{baseUrl-sirv-api}}"
					],
					"path": [
						"requisicoes",
						"abertas"
					],
					"query": [
						{
							"key": "paginaAtual",
							"value": "1"
						},
						{
							"key": "quantidade",
							"value": "1"
						},
						{
							"key": "campoOrdenacao",
							"value": "prioridade"
						},
						{
							"key": "tipoOrdenacao",
							"value": "desc"
						},
						{
							"key": "categoria",
							"value": "teste",
							"disabled": true
						},
						{
							"key": "tipoContestacao",
							"value": "6245f6133b988e4ac7c4ec98",
							"disabled": true
						},
						{
							"key": "situacaoRequisicao",
							"value": "6245f6133b988e4ac7c5ec95",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "HINT - Buscar Requisições Recebidas",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code é 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const postRequest = {\r",
							"  url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
							"  method: 'POST',\r",
							"  timeout: 0,\r",
							"  header: {\r",
							"    \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
							"    \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
							"  },\r",
							"  body: {\r",
							"    mode: 'urlencoded',\r",
							"    urlencoded: [\r",
							"        {key: \"grant_type\", value: \"client_credentials\"}\r",
							"    ]}\r",
							"};\r",
							"pm.sendRequest(postRequest, function (err, res) {\r",
							"     if (err) { \r",
							"            console.log(err);\r",
							"     }\r",
							"    var responseJson = res.json();\r",
							"    console.log(responseJson);\r",
							"    pm.environment.set('idToken', responseJson['access_token']);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{hintHost}}/requisicoes/recebidas?paginaAtual=10&quantidade=1",
					"host": [
						"{{hintHost}}"
					],
					"path": [
						"requisicoes",
						"recebidas"
					],
					"query": [
						{
							"key": "paginaAtual",
							"value": "10"
						},
						{
							"key": "quantidade",
							"value": "1"
						},
						{
							"key": "campoOrdenacao",
							"value": "prioridade",
							"disabled": true
						},
						{
							"key": "tipoOrdenacao",
							"value": "asc",
							"disabled": true
						},
						{
							"key": "categoria",
							"value": "Triangulada",
							"disabled": true
						},
						{
							"key": "tipoContestacao",
							"value": "62421f444e56a22a7fda004f",
							"disabled": true
						},
						{
							"key": "situacaoRequisicao",
							"value": "6245f6133b988e4ca7c5ec3b",
							"disabled": true
						},
						{
							"key": "cpfCnpj",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "HINT - Atendimento requisição triangulada",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let body = pm.response.json();",
							"pm.environment.set(\"idRequisicao\", body.atendimentos[0].requisicoes[0].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"clienteReclamante\": {},\n    \"situacaoConta\": \"62c5c5f477d070fcdb0a550c\",\n    \"tipoTriangulada\": \"62c494a079cf93fea3922b4f\",\n    \"requisicoes\": [\n        {\n            \"confirmacaoRequisicaoSemAnexos\": true,\n            \"transacoes\": [             \n                {\n                    \"canalAtendimento\": \"3\",\n                    \"produto\": \"2\",\n                    \"condicaoTransacao\": {\n                        \"comAcaoJudicial\": false\n                    },\n                    \"tipoRequisicao\": \"6245f6133b988e4ac7c4ec98\",\n                    \"tipoEnvolvido\": \"vitima\",\n                    \"motivo\": \"99\",\n                    \"doc\": {\n                        \"valorTransacao\": 1000,\n                        \"dataHoraTransacao\": \"2024-01-01T11:00:00.000Z\",\n                        \"codigoTransacao\": \"564098479802164098409840\",\n                        \"dataCompensacao\": \"2024-01-01T11:05:00.000Z\",\n                        \"descricaoCaso\": \"Transação Fraude DOC para testes.\"\n                    },\n                    \"clienteDestinatario\": {\n                        \"nome\": \"José Silva\",\n                        \"cpfCnpj\": \"80472435868\",\n                        \"tipoConta\": \"6256ca8b969cdd834fe89c2d\",\n                        \"agencia\": \"8811\",\n                        \"numeroConta\": \"006686\"\n                    }\n                }\n            ],\n            \"instituicaoDestinataria\": \"622a1a7fff71f049b1479f64\"\n        }\n    ],\n    \"bloquearConta\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{hintHost}}/requisicoes/{{idRequisicao}}/transacoes/{{idTransacao}}/triangular",
					"host": [
						"{{hintHost}}"
					],
					"path": [
						"requisicoes",
						"{{idRequisicao}}",
						"transacoes",
						"{{idTransacao}}",
						"triangular"
					]
				}
			},
			"response": []
		},
		{
			"name": "HINT - Atender Requisição",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//let body = pm.response.json();",
							"//pm.environment.set(\"idRequisicao\", body.id);",
							"//pm.environment.set(\"idTransacao\", body.transacoes[0].id);",
							"/*",
							"    Permissão: ATENDER_REQUISICAO",
							"*/"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// const postRequest = {\r",
							"//   url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
							"//   method: 'POST',\r",
							"//   timeout: 0,\r",
							"//   header: {\r",
							"//     \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
							"//     \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
							"//   },\r",
							"//   body: {\r",
							"//     mode: 'urlencoded',\r",
							"//     urlencoded: [\r",
							"//         {key: \"grant_type\", value: \"client_credentials\"}\r",
							"//     ]}\r",
							"// };\r",
							"// pm.sendRequest(postRequest, function (err, res) {\r",
							"//      if (err) { \r",
							"//             console.log(err);\r",
							"//      }\r",
							"//     var responseJson = res.json();\r",
							"//     console.log(responseJson);\r",
							"//     pm.environment.set('idToken', responseJson['access_token']);\r",
							"// })\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJraWQiOiJzZEoxTFREbUJRbWg5K0FrYXFUSVwvaTJmNm9QMnlNOWc0WDM2V2VYUTFKOD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJhYjUwZGYzNy02NjRmLTQ0Y2QtOTFlNy1jNDk5YTU4ZWUwNDIiLCJjb2duaXRvOmdyb3VwcyI6WyJtYXN0ZXIiXSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnNhLWVhc3QtMS5hbWF6b25hd3MuY29tXC9zYS1lYXN0LTFfZDZ3SXJxb253IiwiY2xpZW50X2lkIjoiNWR0NWVrZGVmcjZmN3BuOTVhOG8ybXIycG8iLCJvcmlnaW5fanRpIjoiMTRhMDY1OGEtMzlhNi00NTM1LWE5YTAtYmMxZTU1MzFmYTg3IiwiZXZlbnRfaWQiOiI1MDljZjczMi0zZTcwLTQ2MjEtYjc5ZC1mMjk2OWEwNDcxMGIiLCJ0b2tlbl91c2UiOiJhY2Nlc3MiLCJzY29wZSI6ImF3cy5jb2duaXRvLnNpZ25pbi51c2VyLmFkbWluIiwiYXV0aF90aW1lIjoxNzI4OTE0NjY4LCJleHAiOjE3MjkwMDEwNjgsImlhdCI6MTcyODkxNDY2OCwianRpIjoiOWMzZjkxMzUtM2Y1OC00NmY2LWE1YmItNDMyOTc1YjJiNGU4IiwidXNlcm5hbWUiOiJhYjUwZGYzNy02NjRmLTQ0Y2QtOTFlNy1jNDk5YTU4ZWUwNDIifQ.fQC9St_y_xPZnQg4kZHy78Xjeak78lgeQyyiSAMSuCIuKxPfUiRLzcYHXnWCjoUw51LHFFHnwIbZsak5eUKRrOJrDBSxv6_hLw1-5zZ8SOR4pWP-D6ecMdpfg7KZjePmRxq5bcpuugm01M2alXykgbt5NKu8rJD0bfalqp7yiFqRi1KK-C9agGwa3vrn3JOKNmTWZtDpPtL2wUA_BrXBjn4w-fkl7HDawRdlyWgrp_boyNj6ZZuClAIyFT8ei2iMiJWlfsEmqKyYntqc7rfCY6wNoqzwa-nynXmuOj4To_LSkaIfjqcPwclKC57BOJCm_Yg90gVKbAJkrXjfggfAwQ",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/requisicoes/670d24fa063ebb620bddd680/atender",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"requisicoes",
						"670d24fa063ebb620bddd680",
						"atender"
					]
				}
			},
			"response": []
		},
		{
			"name": "HINT - Criar requisição PIX",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let body = pm.response.json();",
							"pm.environment.set(\"idRequisicao\", body.id);",
							"pm.environment.set(\"idTransacao\", body.transacoes[0].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n     \"clienteReclamante\": {\n        \"nome\": \"Carol Teste POST Golpe DOC Manual sem anexo - Instituição Não Cadastrada\",\n        \"cpfCnpj\": \"40502779802\",\n        \"dataReclamacao\": \"2024-01-01T11:00:00.000Z\",\n        \"numeroProtocolo\": \"12345676HG\",\n        \"uf\": \"SP\"   \n    },\n    \"confirmarLegitimidade\": false,\n    \"confirmacaoRequisicaoSemAnexos\": true,\n    \"transacoes\": [\n        {\n            \"canalAtendimento\": \"3\",\n            \"produto\": \"2\",\n            \"tipoEnvolvido\":\"vitima\",\n            \"condicaoTransacao\": {\n                \"comAcaoJudicial\": false\n            },\n            \"tipoRequisicao\": \"6245f6133b988e4ac7c4ec97\",\n            \"pix\": {\n                \"valorTransacao\": 200.33,\n                \"dataHoraTransacao\": \"2022-12-15T03:30:00.000Z\",                \n                \"descricaoCaso\": \"Exemplo de descrição do caso com mais de 20 caracteres\",\n                \"idTransacao\": \"E0000000020230320164418618939533\",\n                \"chave\": \"6f81ca13-dfab-11ed-bea5-0242ac120002\",\n                \"tipoChave\": \"643ff8692db9e78b62367e11\",\n                \"idRelatoInfracao\": \"6f81ca13-dfab-11ed-bea5-0242ac120002\",\n                \"idSolicitacaoDevolucao\": \"6f81ca31-dfab-11ed-b5e5-0242ac120002\"\n            },\n            \"clienteDestinatario\": {\n                \"nome\": \"João Paulo\",\n                \"cpfCnpj\": \"10692212019\",\n                \"tipoConta\": \"6256ca90153951882045db82\",\n                \"numeroConta\": \"1111\",\n                \"agencia\": \"33333\"\n            },\n            \"motivo\": 99\n        },\n        {\n            \"canalAtendimento\": \"3\",\n            \"produto\": \"2\",\n            \"tipoEnvolvido\":\"vitima\",\n            \"condicaoTransacao\": {\n                \"comAcaoJudicial\": false\n            },\n            \"tipoRequisicao\": \"6245f6133b988e4ac7c4ec97\",\n            \"pix\": {\n                \"valorTransacao\": 200,\n                \"dataHoraTransacao\": \"2022-12-15T03:30:00.000Z\",                \n                \"descricaoCaso\": \"Exemplo de descrição do caso com mais de 20 caracteres\",\n                \"idTransacao\": \"E0000000020230320164418618939533\",\n                \"chave\": \"6f81ca13-dfab-11ed-bea5-0242ac120002\",\n                \"tipoChave\": \"643ff8692db9e78b62367e11\",\n                \"idRelatoInfracao\": \"6f81ca13-dfab-11ed-bea5-0242ac120002\",\n                \"idSolicitacaoDevolucao\": \"6f81ca31-dfab-11ed-b5e5-0242ac120002\"\n            },\n            \"clienteDestinatario\": {\n                \"nome\": \"João Paulo\",\n                \"cpfCnpj\": \"10692212019\",\n                \"tipoConta\": \"6256ca90153951882045db82\",\n                \"numeroConta\": \"1111\",\n                \"agencia\": \"33333\"\n            },\n            \"motivo\": 99\n        },\n        {\n            \"canalAtendimento\": \"3\",\n            \"produto\": \"2\",\n            \"tipoEnvolvido\":\"vitima\",\n            \"condicaoTransacao\": {\n                \"comAcaoJudicial\": false\n            },\n            \"tipoRequisicao\": \"6245f6133b988e4ac7c4ec97\",\n            \"pix\": {\n                \"valorTransacao\": 200,\n                \"dataHoraTransacao\": \"2022-12-15T03:30:00.000Z\",                \n                \"descricaoCaso\": \"Exemplo de descrição do caso com mais de 20 caracteres\",\n                \"idTransacao\": \"E0000000020230320164418618939533\",\n                \"chave\": \"6f81ca13-dfab-11ed-bea5-0242ac120002\",\n                \"tipoChave\": \"643ff8692db9e78b62367e11\",\n                \"idRelatoInfracao\": \"6f81ca13-dfab-11ed-bea5-0242ac120002\",\n                \"idSolicitacaoDevolucao\": \"6f81ca31-dfab-11ed-b5e5-0242ac120002\"\n            },\n            \"clienteDestinatario\": {\n                \"nome\": \"João Paulo\",\n                \"cpfCnpj\": \"10692212019\",\n                \"tipoConta\": \"6256ca90153951882045db82\",\n                \"numeroConta\": \"1111\",\n                \"agencia\": \"33333\"\n            },\n            \"motivo\": 99\n        }\n    ],\n    \"triagem\": false,\n    \"instituicaoDestinatariaIspb\": \"00558456\",\n    \"instituicaoRemetenteIspb\": \"12345679\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{hintHost}}/requisicoes",
					"host": [
						"{{hintHost}}"
					],
					"path": [
						"requisicoes"
					]
				}
			},
			"response": []
		},
		{
			"name": "HINT - Buscar Requisições Abertas",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code é 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// const postRequest = {\r",
							"//   url: 'https://detectaflow-hint.auth.sa-east-1.amazoncognito.com/oauth2/token',\r",
							"//   method: 'POST',\r",
							"//   timeout: 0,\r",
							"//   header: {\r",
							"//     \"Content-Type\": \"application/x-www-form-urlencoded\",\r",
							"//     \"Authorization\": \"Basic OTY2YW12M3A0aThyZ2djaDZpZjFubmJlYToxNHYza2RxdDN1aTBpaWQ5czlkMjB2bTI4ajQwbjl2ZXUzbGs3bjd1MjhlZGVoNXZrcXY1\"\r",
							"//   },\r",
							"//   body: {\r",
							"//     mode: 'urlencoded',\r",
							"//     urlencoded: [\r",
							"//         {key: \"grant_type\", value: \"client_credentials\"}\r",
							"//     ]}\r",
							"// };\r",
							"// pm.sendRequest(postRequest, function (err, res) {\r",
							"//      if (err) { \r",
							"//             console.log(err);\r",
							"//      }\r",
							"//     var responseJson = res.json();\r",
							"//     console.log(responseJson);\r",
							"//     pm.environment.set('idToken', responseJson['access_token']);\r",
							"// })\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{idToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl-sirv-api}}/requisicoes/abertas?paginaAtual=1&quantidade=1&campoOrdenacao=prioridade&tipoOrdenacao=desc",
					"host": [
						"{{baseUrl-sirv-api}}"
					],
					"path": [
						"requisicoes",
						"abertas"
					],
					"query": [
						{
							"key": "paginaAtual",
							"value": "1"
						},
						{
							"key": "quantidade",
							"value": "1"
						},
						{
							"key": "campoOrdenacao",
							"value": "prioridade"
						},
						{
							"key": "tipoOrdenacao",
							"value": "desc"
						},
						{
							"key": "categoria",
							"value": "teste",
							"disabled": true
						},
						{
							"key": "tipoContestacao",
							"value": "6245f6133b988e4ac7c4ec98",
							"disabled": true
						},
						{
							"key": "situacaoRequisicao",
							"value": "6245f6133b988e4ac7c5ec95",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Buscar Requisicoes recebidas Paginadas com fltros",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cpfCnpj\": 39128373000188\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{localHost}}/requisicoes/recebidas?paginaAtual=1&quantidade=10",
					"host": [
						"{{localHost}}"
					],
					"path": [
						"requisicoes",
						"recebidas"
					],
					"query": [
						{
							"key": "paginaAtual",
							"value": "1"
						},
						{
							"key": "quantidade",
							"value": "10"
						}
					]
				}
			},
			"response": []
		}
	]
}